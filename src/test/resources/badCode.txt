package me.LobbySystem.Listener;

import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.DyeColor;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.OfflinePlayer;
import org.bukkit.Sound;
import org.bukkit.World;
import org.bukkit.entity.Bat;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.FallingBlock;
import org.bukkit.entity.Horse.Variant;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.ClickType;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.inventory.meta.SkullMeta;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.bukkit.scheduler.BukkitRunnable;
import org.bukkit.util.Vector;

import com.google.common.io.ByteArrayDataOutput;
import com.google.common.io.ByteStreams;

import de.dytanic.cloudnet.api.CloudAPI;
import de.dytanic.cloudnet.lib.server.info.ServerInfo;
import me.API.API;
import me.API.Manager.ScoreboardManager;
import me.API.Utils.APIPlayer;
import me.API.Utils.ColorConverter;
import me.API.Utils.EventString;
import me.API.Utils.ItemBuilder;
import me.API.Verwaltung.ChestOpening;
import me.API.Verwaltung.Clan;
import me.API.Verwaltung.CoinBoost;
import me.API.Verwaltung.Coins;
import me.API.Verwaltung.Extras;
import me.API.Verwaltung.Log;
import me.API.Verwaltung.Nick;
import me.API.Verwaltung.NickType;
import me.API.Verwaltung.Rang;
import me.API.Verwaltung.RangType;
import me.API.Verwaltung.Settings;
import me.API.Verwaltung.UUIDFetcher;
import me.API.Verwaltung.WortFilter;
import me.LobbySystem.AnvilGUI;
import me.LobbySystem.AnvilGUI.AnvilClickEvent;
import me.LobbySystem.Emotes;
import me.LobbySystem.Haustier;
import me.LobbySystem.ItemBuilder1;
import me.LobbySystem.LobbySystem;
import me.LobbySystem.Methoden;
import me.LobbySystem.Particle;
import me.LobbySystem.Sticker;
import me.LobbySystem.Inventare.Belohnung_Vote;
import me.LobbySystem.Inventare.Extras_Ballons;
import me.LobbySystem.Inventare.Extras_Banner;
import me.LobbySystem.Inventare.Extras_Gadgets;
import me.LobbySystem.Inventare.Extras_Haustiere;
import me.LobbySystem.Inventare.Extras_Köpfe;
import me.LobbySystem.Inventare.Extras_Menü;
import me.LobbySystem.Inventare.Extras_Partikel;
import me.LobbySystem.Inventare.Extras_Premium;
import me.LobbySystem.Inventare.Extras_Schuhe;
import me.LobbySystem.Inventare.Extras_SchussEffekte;
import me.LobbySystem.Inventare.Nick_Menü;
import me.LobbySystem.Inventare.Nick_Togglerang;
import me.LobbySystem.Inventare.PrivateServer;
import me.LobbySystem.Inventare.Profil;
import me.LobbySystem.Inventare.Profil_Clanmenü;
import me.LobbySystem.Inventare.Profil_Einstellungen;
import me.LobbySystem.Inventare.Profil_Freundemenü;
import me.LobbySystem.Inventare.Shop_PremiumInventar;
import me.LobbySystem.Inventare.Shop_Premium_Bestätigung;
import me.LobbySystem.MySQL.MySQL;
import net.md_5.bungee.api.chat.ClickEvent.Action;
import net.minecraft.server.v1_8_R3.EnumParticle;

public class InventoryClickListener implements Listener {

	public static List<Player> codeeinlösen = new LinkedList<>();

	public static HashMap<Player, String> emote = new HashMap<>();
	public static HashMap<Player, String> sticker = new HashMap<>();

	public static HashMap<APIPlayer, Particle> walkParticle = new HashMap<>();

	@SuppressWarnings({ "unused", "deprecation" })
	@EventHandler
	public void onClick(InventoryClickEvent e) {

		try {
			APIPlayer p = APIPlayer.getPlayer((Player) e.getWhoClicked());

			final String oldrang = Rang.getRangnameDiscord(Rang.getRang(p.getUUID()));
			DateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy HH:mm");

			if (e.getInventory() == null) {
				e.setCancelled(true);
				return;
			}

			if (e.getCurrentItem() == null) {
				e.setCancelled(true);
				return;
			}

			if (e.getClickedInventory() == p.getInventory() && (!LobbySystem.edit.contains(p))) {
				e.setCancelled(true);
			}

			if ((e.getClick() == ClickType.NUMBER_KEY) && (!LobbySystem.edit.contains(p))) {
				e.setCancelled(true);
			}

			if(e.getClickedInventory().getTitle().equalsIgnoreCase("§9Rang §7Informationen")){
				e.setCancelled(true);
			}

			if(e.getClickedInventory().getTitle().equalsIgnoreCase("§9Vote §8● §7Belohnung")) {
				e.setCancelled(true);
				boolean b = false;

				if(e.getCurrentItem().getType().equals(Material.BARRIER)) {
					return;
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")){
					NPCListener.openBelohnung(p);
				}

				if(e.getSlot() == 10) {
					if(MySQL.getVoteTokens(p.getUUID()) >= 20) {
						if(Rang.isMaximum(RangType.PREMIUM, p.getUUID())) {
							b = true;
							MySQL.removeVoteTokens(p.getUUID(), 20);
							if(Rang.getRang(p.getUUID()).equals(RangType.PREMIUM)) {
								Rang.extendRang(p.getUUID(), "Lobby", RangType.PREMIUM, 3*24*60*60*1000);
								p.sendMessage(LobbySystem.vote + "§7Deine §6Premiumspielzeit §7wurde um §e3 Tage §7verlängert!");
								Date d = Rang.getRangdatum(p.getUUID());
								d.setSeconds((int) (d.getSeconds() + Rang.getRangdauer(p.getUUID()) / 1000));
								p.sendMessage(LobbySystem.vote + "§7Neues Ablaufdatum §8● §e" + dateFormat.format(d));
								p.closeInventory();

								Methoden.updateScoreboard(p);
								Methoden.setItems(p);
							}else {
								Rang.setRang(p.getUUID(), "Lobby", RangType.SPIELER, RangType.PREMIUM, 3*24*60*60*1000);
								p.sendMessage(LobbySystem.vote + "§7Dir wurden §e3 Tage §6Premiumspielzeit §7gutgeschrieben!");
								Date d = Rang.getRangdatum(p.getUUID());
								d.setSeconds((int) (d.getSeconds() + Rang.getRangdauer(p.getUUID()) / 1000));
								p.sendMessage(LobbySystem.vote + "§7Ablaufdatum §8● §e" + dateFormat.format(d));
								p.closeInventory();

								Methoden.updateScoreboard(p);
								Methoden.setItems(p);
							}
						}else {
							p.sendMessage(LobbySystem.vote + "§cDu hast bereits einen höheren Rang!");
							p.closeInventory();
						}
					}else {
						p.sendMessage(LobbySystem.vote + "§cDu hast nicht genügend §eVotetokens§c.");
						p.closeInventory();
					}
				}else if(e.getSlot() == 12) {
					if(MySQL.getVoteTokens(p.getUUID()) >= 40) {
						if(Rang.isMaximum(RangType.PREMIUM, p.getUUID())) {
							b = true;
							MySQL.removeVoteTokens(p.getUUID(), 40);
							if(Rang.getRang(p.getUUID()).equals(RangType.PREMIUM)) {
								Rang.extendRang(p.getUUID(), "Lobby", RangType.PREMIUM, 7*24*60*60*1000);
								p.sendMessage(LobbySystem.vote + "§7Deine §6Premiumspielzeit §7wurde um §e7 Tage §7verlängert!");
								Date d = Rang.getRangdatum(p.getUUID());
								d.setSeconds((int) (d.getSeconds() + Rang.getRangdauer(p.getUUID()) / 1000));
								p.sendMessage(LobbySystem.vote + "§7Neues Ablaufdatum §8● §e" + dateFormat.format(d));
								p.closeInventory();

								Methoden.updateScoreboard(p);
								Methoden.setItems(p);
							}else {
								Rang.setRang(p.getUUID(), "Lobby", RangType.SPIELER, RangType.PREMIUM, 7*24*60*60*1000);
								p.sendMessage(LobbySystem.vote + "§7Dir wurden §e7 Tage §6Premiumspielzeit §7gutgeschrieben!");
								Date d = Rang.getRangdatum(p.getUUID());
								d.setSeconds((int) (d.getSeconds() + Rang.getRangdauer(p.getUUID()) / 1000));
								p.sendMessage(LobbySystem.vote + "§7Ablaufdatum §8● §e" + dateFormat.format(d));
								p.closeInventory();

								Methoden.updateScoreboard(p);
								Methoden.setItems(p);
							}
						}else {
							p.sendMessage(LobbySystem.vote + "§cDu hast bereits einen höheren Rang!");
							p.closeInventory();
						}
					}else {
						p.sendMessage(LobbySystem.vote + "§cDu hast nicht genügend §eVotetokens§c.");
						p.closeInventory();
					}
				}else if(e.getSlot() == 14) {
					if(MySQL.getVoteTokens(p.getUUID()) >= 110) {
						if(Rang.isMaximum(RangType.PREMIUM, p.getUUID())) {
							b = true;
							MySQL.removeVoteTokens(p.getUUID(), 110);
							if(Rang.getRang(p.getUUID()).equals(RangType.PREMIUM)) {
								Rang.extendRang(p.getUUID(), "Lobby", RangType.PREMIUM, 30*24*60*60*1000);
								p.sendMessage(LobbySystem.vote + "§7Deine §6Premiumspielzeit §7wurde um §e30 Tage §7verlängert!");
								Date d = Rang.getRangdatum(p.getUUID());
								d.setSeconds((int) (d.getSeconds() + Rang.getRangdauer(p.getUUID()) / 1000));
								p.sendMessage(LobbySystem.vote + "§7Neues Ablaufdatum §8● §e" + dateFormat.format(d));
								p.closeInventory();

								Methoden.updateScoreboard(p);
								Methoden.setItems(p);
							}else {
								Rang.setRang(p.getUUID(), "Lobby", RangType.SPIELER, RangType.PREMIUM, 30*24*60*60*1000);
								p.sendMessage(LobbySystem.vote + "§7Dir wurden §e30 Tage §6Premiumspielzeit §7gutgeschrieben!");
								Date d = Rang.getRangdatum(p.getUUID());
								d.setSeconds((int) (d.getSeconds() + Rang.getRangdauer(p.getUUID()) / 1000));
								p.sendMessage(LobbySystem.vote + "§7Ablaufdatum §8● §e" + dateFormat.format(d));
								p.closeInventory();

								Methoden.updateScoreboard(p);
								Methoden.setItems(p);
							}
						}else {
							p.sendMessage(LobbySystem.vote + "§cDu hast bereits einen höheren Rang!");
							p.closeInventory();
						}
					}else {
						p.sendMessage(LobbySystem.vote + "§cDu hast nicht genügend §eVotetokens§c.");
						p.closeInventory();
					}
				}else if(e.getSlot() == 16) {

				}else if(e.getSlot() == 28) {
					if(MySQL.getVoteTokens(p.getUUID()) >= 2) {
						b = true;
						MySQL.removeVoteTokens(p.getUUID(), 2);
						MySQL.addDetecPaesse(p.getUUID(), 1);
						p.sendMessage(LobbySystem.vote + "§7Du hast §e1 §9Detectivepass §7erhalten!");
						p.closeInventory();
					}else {
						p.sendMessage(LobbySystem.vote + "§cDu hast nicht genügend §eVotetokens§c.");
						p.closeInventory();
					}
				}else if(e.getSlot() == 30) {
					if(MySQL.getVoteTokens(p.getUUID()) >= 2) {
						b = true;
						MySQL.removeVoteTokens(p.getUUID(), 2);
						MySQL.addTraitPaesse(p.getUUID(), 1);
						p.sendMessage(LobbySystem.vote + "§7Du hast §e1 §4Traitorepass §7erhalten!");
						p.closeInventory();
					}else {
						p.sendMessage(LobbySystem.vote + "§cDu hast nicht genügend §eVotetokens§c.");
						p.closeInventory();
					}
				}else if(e.getSlot() == 32) {
					if(MySQL.getVoteTokens(p.getUUID()) >= 2) {
						b = true;
						MySQL.removeVoteTokens(p.getUUID(), 2);
						MySQL.setLotterielose(p, MySQL.getLotterielose(p)+1);
						p.sendMessage(LobbySystem.vote + "§7Du hast §e1 Los §7gekauft.");
						p.closeInventory();
					}else {
						p.sendMessage(LobbySystem.vote + "§cDu hast nicht genügend §eVotetokens§c.");
						p.closeInventory();
					}
				}else if(e.getSlot() == 34) {
					if(MySQL.getVoteTokens(p.getUUID()) >= 4) {
						b = true;
						MySQL.removeVoteTokens(p.getUUID(), 4);
						ChestOpening.addChests(p.getUUID(), 1);
						p.sendMessage(LobbySystem.vote + "§7Du hast §e1 Kiste §7gekauft.");
						p.closeInventory();
					}else {
						p.sendMessage(LobbySystem.vote + "§cDu hast nicht genügend §eVotetokens§c.");
						p.closeInventory();
					}
				}

				if(b) {
					ItemStack is = e.getCurrentItem().clone();
					e.getInventory().setItem(e.getSlot(), new ItemBuilder(Material.BARRIER).displayName("§cBitte warte..").build());
					new BukkitRunnable() {
						@Override
						public void run() {
							if(p.getOpenInventory().getTopInventory().equals(e.getInventory())) {
								e.getInventory().setItem(e.getSlot(), is);
							}
						}
					}.runTaskLater(LobbySystem.plugin, 10);
				}
			}

			if(e.getClickedInventory().getTitle().startsWith("§9Zuschauen")){
				e.setCancelled(true);

		       	try{
		       		String server = e.getCurrentItem().getItemMeta().getDisplayName().replace("§6", "");
		           	ServerInfo sf = CloudAPI.getInstance().getServerInfo(server);
					if(sf.isOnline() && sf.isIngame()){
						Methoden.sendPlayer(p.getPlayer(), server);
						p.closeInventory();
					}
				}catch(Exception e2){}
			}

			if(e.getClickedInventory().getTitle().startsWith("§eAbstimmung")){
				e.setCancelled(true);

				if(e.getCurrentItem().getType().equals(Material.BOOK) && e.getClickedInventory().getTitle().equalsIgnoreCase("§eAbstimmung §8● §7Menü")) {
					if(!MySQL.getAbstimmungen().contains(e.getCurrentItem().getItemMeta().getDisplayName().replace("§8» §e", ""))) {
						p.closeInventory();
						p.sendMessage(LobbySystem.abstimmungssystem + "§cDie Abstimmung wurde beendet.");
						return;
					}

					Inventory inv = Bukkit.createInventory(null, 45, "§eAbstimmung §8● §7Vote");

					boolean b = MySQL.getAbstimmungenActive(e.getCurrentItem().getItemMeta().getDisplayName().replace("§8» §e", ""));

					ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§4✖", (short)7);

					for(int i = 0; i < inv.getSize(); i++) {
						inv.setItem(i, PH);
					}

					inv.setItem(13, e.getCurrentItem().clone());

					List<String> antworten = MySQL.getAbstummungenAntworten(e.getCurrentItem().getItemMeta().getDisplayName().replace("§8» §e", ""));
					List<Integer> votes = MySQL.getAbstummungenVotes(e.getCurrentItem().getItemMeta().getDisplayName().replace("§8» §e", ""));

					List<String> prefix = new LinkedList<>();

					for(int i = 0; i<antworten.size(); i++) {
						if(antworten.get(i).equalsIgnoreCase("Ja") || antworten.get(i).toLowerCase().contains("gut")){
							prefix.add("§a");
						}else if(antworten.get(i).equalsIgnoreCase("Nein") || antworten.get(i).toLowerCase().contains("schlecht")){
							prefix.add("§c");
						}else if(antworten.get(i).equalsIgnoreCase("Keine Interesse")){
							prefix.add("§6");
						}else {
							prefix.add("§f");
						}
					}

					if(antworten.size() == 2){
						inv.setItem(29, new ItemBuilder(Material.PAPER).displayName(prefix.get(0) + antworten.get(0)).setAmount(b ? 1 : votes.get(0)).build());
						inv.setItem(33, new ItemBuilder(Material.PAPER).displayName(prefix.get(1) + antworten.get(1)).setAmount(b ? 1 : votes.get(1)).build());
					}else if(antworten.size() == 3){
						inv.setItem(29, new ItemBuilder(Material.PAPER).displayName(prefix.get(0) + antworten.get(0)).setAmount(b ? 1 : votes.get(0)).build());
						inv.setItem(31, new ItemBuilder(Material.PAPER).displayName(prefix.get(1) + antworten.get(1)).setAmount(b ? 1 : votes.get(1)).build());
						inv.setItem(33, new ItemBuilder(Material.PAPER).displayName(prefix.get(2) + antworten.get(2)).setAmount(b ? 1 : votes.get(2)).build());
					}else if(antworten.size() == 4){
						inv.setItem(28, new ItemBuilder(Material.PAPER).displayName(prefix.get(0) + antworten.get(0)).setAmount(b ? 1 : votes.get(0)).build());
						inv.setItem(30, new ItemBuilder(Material.PAPER).displayName(prefix.get(1) + antworten.get(1)).setAmount(b ? 1 : votes.get(1)).build());
						inv.setItem(32, new ItemBuilder(Material.PAPER).displayName(prefix.get(2) + antworten.get(2)).setAmount(b ? 1 : votes.get(2)).build());
						inv.setItem(34, new ItemBuilder(Material.PAPER).displayName(prefix.get(3) + antworten.get(3)).setAmount(b ? 1 : votes.get(3)).build());
					}else if(antworten.size() == 5){
						inv.setItem(10, new ItemBuilder(Material.PAPER).displayName(prefix.get(0) + antworten.get(0)).setAmount(b ? 1 : votes.get(0)).build());
						inv.setItem(16, new ItemBuilder(Material.PAPER).displayName(prefix.get(1) + antworten.get(1)).setAmount(b ? 1 : votes.get(1)).build());
						inv.setItem(29, new ItemBuilder(Material.PAPER).displayName(prefix.get(2) + antworten.get(2)).setAmount(b ? 1 : votes.get(2)).build());
						inv.setItem(31, new ItemBuilder(Material.PAPER).displayName(prefix.get(3) + antworten.get(3)).setAmount(b ? 1 : votes.get(3)).build());
						inv.setItem(33, new ItemBuilder(Material.PAPER).displayName(prefix.get(4) + antworten.get(4)).setAmount(b ? 1 : votes.get(4)).build());
					}else if(antworten.size() == 6){
						inv.setItem(10, new ItemBuilder(Material.PAPER).displayName(prefix.get(0) + antworten.get(0)).setAmount(b ? 1 : votes.get(0)).build());
						inv.setItem(16, new ItemBuilder(Material.PAPER).displayName(prefix.get(1) + antworten.get(1)).setAmount(b ? 1 : votes.get(1)).build());
						inv.setItem(28, new ItemBuilder(Material.PAPER).displayName(prefix.get(2) + antworten.get(2)).setAmount(b ? 1 : votes.get(2)).build());
						inv.setItem(30, new ItemBuilder(Material.PAPER).displayName(prefix.get(3) + antworten.get(3)).setAmount(b ? 1 : votes.get(3)).build());
						inv.setItem(32, new ItemBuilder(Material.PAPER).displayName(prefix.get(4) + antworten.get(4)).setAmount(b ? 1 : votes.get(4)).build());
						inv.setItem(34, new ItemBuilder(Material.PAPER).displayName(prefix.get(5) + antworten.get(5)).setAmount(b ? 1 : votes.get(5)).build());
					}

					if(Rang.isAtLeast(RangType.ADMINISTRATOR, p.getUUID())) {
						inv.setItem(36, new ItemBuilder(Material.FEATHER).displayName(b ? "§cBeenden" : "§eWeiterführen").build());
						inv.setItem(44, new ItemBuilder(Material.REDSTONE_BLOCK).displayName("§4§lLöschen").build());
					}

					p.openInventory(inv);
				}else if(e.getClickedInventory().getTitle().equalsIgnoreCase("§eAbstimmung §8● §7Vote")) {
					if(e.getCurrentItem().getType().equals(Material.PAPER)) {
						 if(!MySQL.getAbstimmungenActive(e.getInventory().getItem(13).getItemMeta().getDisplayName().replace("§8» §e", ""))) {
								p.closeInventory();
								p.sendMessage(LobbySystem.abstimmungssystem + "§cDie Abstimmung wurde beendet.");
						}else if(MySQL.hasVotedAbstimmung(p.getUUID(), e.getInventory().getItem(13).getItemMeta().getDisplayName().replace("§8» §e", ""))) {
							p.closeInventory();
							p.sendMessage(LobbySystem.abstimmungssystem + "§cDu hast bereits abgestimmt.");
						}else{
							List<String> antworten = MySQL.getAbstummungenAntworten(e.getInventory().getItem(13).getItemMeta().getDisplayName().replace("§8» §e", ""));
							int antwort = -1;

							if(antworten.size() == 2){
								if(e.getSlot() == 29) antwort = 0;
								if(e.getSlot() == 33) antwort = 1;
							}else if(antworten.size() == 3){
								if(e.getSlot() == 29) antwort = 0;
								if(e.getSlot() == 31) antwort = 1;
								if(e.getSlot() == 33) antwort = 2;
							}else if(antworten.size() == 4){
								if(e.getSlot() == 28) antwort = 0;
								if(e.getSlot() == 30) antwort = 1;
								if(e.getSlot() == 32) antwort = 2;
								if(e.getSlot() == 34) antwort = 3;
							}else if(antworten.size() == 5){
								if(e.getSlot() == 10) antwort = 0;
								if(e.getSlot() == 16) antwort = 1;
								if(e.getSlot() == 29) antwort = 2;
								if(e.getSlot() == 31) antwort = 3;
								if(e.getSlot() == 33) antwort = 4;
							}else if(antworten.size() == 6){
								if(e.getSlot() == 10) antwort = 0;
								if(e.getSlot() == 16) antwort = 1;
								if(e.getSlot() == 28) antwort = 2;
								if(e.getSlot() == 30) antwort = 3;
								if(e.getSlot() == 32) antwort = 4;
								if(e.getSlot() == 34) antwort = 5;
							}

							MySQL.voteAbstimmung(p.getUUID(), e.getInventory().getItem(13).getItemMeta().getDisplayName().replace("§8» §e", ""), antwort);

							p.sendMessage(LobbySystem.abstimmungssystem + "§7Du hast §aerfolgreich §7für " + e.getCurrentItem().getItemMeta().getDisplayName() + " §7abgestimmt.");
							p.closeInventory();
						}
					}else if(e.getCurrentItem().getType().equals(Material.FEATHER)) {
						if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBeenden")) {
							MySQL.setAbstimmungenActive(e.getInventory().getItem(13).getItemMeta().getDisplayName().replace("§8» §e", ""), false);
							p.sendMessage(LobbySystem.abstimmungssystem + "§7Die Abstimmung wurde §cbeendet§7.");
							p.getOpenInventory().setItem(36, new ItemBuilder(Material.FEATHER).displayName("§eWeiterführen").build());
						}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eWeiterführen")) {
							MySQL.setAbstimmungenActive(e.getInventory().getItem(13).getItemMeta().getDisplayName().replace("§8» §e", ""), true);
							p.sendMessage(LobbySystem.abstimmungssystem + "§7Die Abstimmung wird nun §eweitergeführt§7.");
							p.getOpenInventory().setItem(36, new ItemBuilder(Material.FEATHER).displayName("§cBeenden").build());
						}
					}else if(e.getCurrentItem().getType().equals(Material.REDSTONE_BLOCK)) {
						e.getInventory().setItem(e.getSlot(), new ItemBuilder(Material.EMERALD_BLOCK).displayName("§aWirklich Löschen?").build());
					}else if(e.getCurrentItem().getType().equals(Material.EMERALD_BLOCK)) {
						p.sendMessage(LobbySystem.abstimmungssystem + "§7Die Abstimmung §e\"" + e.getInventory().getItem(13).getItemMeta().getDisplayName() + "\" §7wurde §4gelöscht§7.");

						List<String> antworten = MySQL.getAbstummungenAntworten(e.getInventory().getItem(13).getItemMeta().getDisplayName());
						List<Integer> votes = MySQL.getAbstummungenVotes(e.getInventory().getItem(13).getItemMeta().getDisplayName());

						for(int i = 0; i < antworten.size(); i++) {
							p.sendMessage(LobbySystem.abstimmungssystem + "§e"+antworten.get(i)+": §7"+votes.get(i));
						}

						MySQL.removeAbstimmung(e.getInventory().getItem(13).getItemMeta().getDisplayName().replace("§8» §e", ""));
						p.closeInventory();
					}
				}
			}

			String uuid = UUIDFetcher.getUUID(p.getName());

			World wEmote = Bukkit.getWorld(LobbySystem.cfg.getString("LabyMod.World"));
			double xEmote = LobbySystem.cfg.getDouble("LabyMod.X");
			double yEmote = LobbySystem.cfg.getDouble("LabyMod.Y");
			double zEmote = LobbySystem.cfg.getDouble("LabyMod.Z");
			Location NPCloc = new Location(wEmote, xEmote, yEmote, zEmote);

			if (e.getClickedInventory().getTitle().startsWith("§bEmotes §8● §7Seite ")) {
				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§bSticker")){
					PlayerInteractEntityListener.openSticker(p);
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§bEmotes §8● §7Sticker")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")){
					PlayerInteractEntityListener.openEmotes1(p);
				}

				if(emote.containsKey(p.getPlayer())){
					p.sendMessage(LobbySystem.emotes + "§cDerzeit wird ein Emote abgespielt.");
					return;
				}

				if(sticker.containsKey(p.getPlayer())){
					p.sendMessage(LobbySystem.emotes + "§cDerzeit wird ein Sticker abgespielt.");
					return;
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cPumpkin")){
					p.closeInventory();
					Sticker.playSticker_1(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cPumpkin §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHappy Halloween")){
					p.closeInventory();
					Sticker.playSticker_2(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cHappy Halloween §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cTrick or treat")){
					p.closeInventory();
					Sticker.playSticker_3(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cTrick or treat §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBoo")){
					p.closeInventory();
					Sticker.playSticker_4(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cBoo §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cGhost")){
					p.closeInventory();
					Sticker.playSticker_5(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cGhost §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSanta")){
					p.closeInventory();
					Sticker.playSticker_6(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cSanta §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cReindeer")){
					p.closeInventory();
					Sticker.playSticker_7(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cReindeer §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cMerry Christmas")){
					p.closeInventory();
					Sticker.playSticker_8(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cMerry Christmas §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHohoho")){
					p.closeInventory();
					Sticker.playSticker_9(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cHohoho §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cChristmas Ball")){
					p.closeInventory();
					Sticker.playSticker_10(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cChristmas Ball §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cReved Derp")){
					p.closeInventory();
					Sticker.playSticker_11(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cReved Derp §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cReved Hi")){
					p.closeInventory();
					Sticker.playSticker_12(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cReved Hi §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cReved Love")){
					p.closeInventory();
					Sticker.playSticker_13(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cReved Love §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cReved Patrick")){
					p.closeInventory();
					Sticker.playSticker_14(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cReved Patrick §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cReved Rip")){
					p.closeInventory();
					Sticker.playSticker_15(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cReved Rip §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHeart")){
					p.closeInventory();
					Sticker.playSticker_16(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cHeart §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLove Chocolate")){
					p.closeInventory();
					Sticker.playSticker_17(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cLove Chocolate §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLove Glasses")){
					p.closeInventory();
					Sticker.playSticker_18(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cLove Glasses §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLove Teddy")){
					p.closeInventory();
					Sticker.playSticker_19(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cLove Teddy §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLove Rings")){
					p.closeInventory();
					Sticker.playSticker_20(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cLove Rings §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSocial Distancing")){
					p.closeInventory();
					Sticker.playSticker_21(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cSocial Distancing §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cWash your hands")){
					p.closeInventory();
					Sticker.playSticker_22(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cWash your hands §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cDon't touch your face")){
					p.closeInventory();
					Sticker.playSticker_23(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cDon't touch your face §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cStay at home")){
					p.closeInventory();
					Sticker.playSticker_24(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cStay at home §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cVirus")){
					p.closeInventory();
					Sticker.playSticker_25(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cVirus §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLabyMod Logo")){
					p.closeInventory();
					Sticker.playSticker_26(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cLabyMod Logo §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLabyCool")){
					p.closeInventory();
					Sticker.playSticker_27(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cLabyCool §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§c5 Years")){
					p.closeInventory();
					Sticker.playSticker_28(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §c5 Years §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLabyWings")){
					p.closeInventory();
					Sticker.playSticker_29(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cLabyWings §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLaby Chest")){
					p.closeInventory();
					Sticker.playSticker_30(p.getPlayer(), NPCloc);
					p.sendMessage(LobbySystem.stickers + "§7Es wird nun §cLaby Chest §7abgespielt.");
					sticker.put(p.getPlayer(), "");
				}

				Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
					@Override
					public void run(){
						sticker.remove(p.getPlayer());

						Emotes.stopEmote(p.getPlayer(), NPCloc);
					}
				}, 20*10);
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§bEmotes §8● §7Seite §c1")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")){
					p.closeInventory();
					Emotes.stopEmote(p.getPlayer(), NPCloc);

					if(emote.containsKey(p.getPlayer())){
						p.sendMessage(LobbySystem.emotes + "§7Das Emote §8(§e" + emote.get(p.getPlayer()) + "§8) §7wurde §cgestoppt§7.");
						emote.remove(p.getPlayer());
					}else{
						p.sendMessage(LobbySystem.emotes + "§cDerzeit wird kein Emote abgespielt.");
					}
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Weiter §8»")){
					PlayerInteractEntityListener.openEmotes2(p);
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBackflip")){
					Emotes.playEmote_Backflip(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBackflip §7abgespielt.");
					emote.put(p.getPlayer(), "Backflip");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cDab")){
					Emotes.playEmote_Dab(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cDab §7abgespielt.");
					emote.put(p.getPlayer(), "Dab");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHello")){
					Emotes.playEmote_Hello(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHello §7abgespielt.");
					emote.put(p.getPlayer(), "Hello");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBow thanks")){
					Emotes.playEmote_BowThanks(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBow thanks §7abgespielt.");
					emote.put(p.getPlayer(), "Bow thanks");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHype")){
					Emotes.playEmote_Hype(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHype §7abgespielt.");
					emote.put(p.getPlayer(), "Hype");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cTrying to fly")){
					Emotes.playEmote_TryingToFly(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cTrying to fly §7abgespielt.");
					emote.put(p.getPlayer(), "Trying to fly");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cInfinity sit")){
					Emotes.playEmote_InfinitySit(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cInfinity sit §7abgespielt.");
					emote.put(p.getPlayer(), "Infinity sit");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cZombie")){
					Emotes.playEmote_Zombie(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cZombie §7abgespielt.");
					emote.put(p.getPlayer(), "Zombie");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHula Hoop")){
					Emotes.playEmote_HulaHoop(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHula Hoop §7abgespielt.");
					emote.put(p.getPlayer(), "Hula Hoop");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cCalling")){
					Emotes.playEmote_Calling(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cCalling §7abgespielt.");
					emote.put(p.getPlayer(), "Calling");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cFacepalm")){
					Emotes.playEmote_Facepalm(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cFacepalm §7abgespielt.");
					emote.put(p.getPlayer(), "Facepalm");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBrush your shoulders")){
					Emotes.playEmote_BrushYourShoulders(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBrush your shoulders §7abgespielt.");
					emote.put(p.getPlayer(), "Brush your shoulders");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSplit")){
					Emotes.playEmote_Split(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSplit §7abgespielt.");
					emote.put(p.getPlayer(), "Split");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSalute")){
					Emotes.playEmote_Salute(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSalute §7abgespielt.");
					emote.put(p.getPlayer(), "Salute");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBalarina")){
					Emotes.playEmote_Balarina(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBalarina §7abgespielt.");
					emote.put(p.getPlayer(), "Balarina");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHandstand")){
					Emotes.playEmote_Handstand(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHandstand §7abgespielt.");
					emote.put(p.getPlayer(), "Handstand");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHelicopter")){
					Emotes.playEmote_Helicopter(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHelicopter §7abgespielt.");
					emote.put(p.getPlayer(), "Helicopter");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHoly")){
					Emotes.playEmote_Holy(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHoly §7abgespielt.");
					emote.put(p.getPlayer(), "Holy");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cWave over")){
					Emotes.playEmote_WaveOver(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cWave over §7abgespielt.");
					emote.put(p.getPlayer(), "Wave over");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cDeeper deeper")){
					Emotes.playEmote_DeeperDeeper(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cDeeper deeper §7abgespielt.");
					emote.put(p.getPlayer(), "Deeper deeper");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cKarate")){
					Emotes.playEmote_Karate(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cKarate §7abgespielt.");
					emote.put(p.getPlayer(), "Karate");
				}

				if(!e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Weiter §8»")){
					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							emote.remove(p.getPlayer());
							Emotes.stopEmote(p.getPlayer(), NPCloc);
						}
					}, 20*10);
				}
			} else if (e.getClickedInventory().getTitle().equalsIgnoreCase("§bEmotes §8● §7Seite §c2")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")){
					p.closeInventory();
					Emotes.stopEmote(p.getPlayer(), NPCloc);

					if(emote.containsKey(p.getPlayer())){
						p.sendMessage(LobbySystem.emotes + "§7Das Emote §8(§e" + emote.get(p.getPlayer()) + "§8) §7wurde §cgestoppt§7.");
						emote.remove(p.getPlayer());
					}else{
						p.sendMessage(LobbySystem.emotes + "§cDerzeit wird kein Emote abgespielt.");
					}
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Weiter §8»")){
					PlayerInteractEntityListener.openEmotes3(p);
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")){
					PlayerInteractEntityListener.openEmotes1(p);
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cMoonwalk")){
					Emotes.playEmote_Moonwalk(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cMoonwalk §7abgespielt.");
					emote.put(p.getPlayer(), "Moonwalk");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cFreezing")){
					Emotes.playEmote_Freezing(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cFreezing §7abgespielt.");
					emote.put(p.getPlayer(), "Freezing");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cJubilation")){
					Emotes.playEmote_Jubilation(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cJubilation §7abgespielt.");
					emote.put(p.getPlayer(), "Jubilation");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cTurtle")){
					Emotes.playEmote_Turtle(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cTurtle §7abgespielt.");
					emote.put(p.getPlayer(), "Turtle");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHead spin")){
					Emotes.playEmote_HeadSpin(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHead spin §7abgespielt.");
					emote.put(p.getPlayer(), "Head spin");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cInfinity Dab")){
					Emotes.playEmote_InfinityDab(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cInfinity Dab §7abgespielt.");
					emote.put(p.getPlayer(), "Infinity Dab");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cChicken")){
					Emotes.playEmote_Chicken(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cChicken §7abgespielt.");
					emote.put(p.getPlayer(), "Chicken");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cThe Floss")){
					Emotes.playEmote_TheFloss(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cThe Floss §7abgespielt.");
					emote.put(p.getPlayer(), "The Floss");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cThe mega thrust")){
					Emotes.playEmote_TheMegaThrust(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cThe mega thrust §7abgespielt.");
					emote.put(p.getPlayer(), "The mega thrust");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cThe cleaner")){
					Emotes.playEmote_TheCleaner(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cThe cleaner §7abgespielt.");
					emote.put(p.getPlayer(), "The cleaner");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBridge")){
					Emotes.playEmote_Bridge(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBridge §7abgespielt.");
					emote.put(p.getPlayer(), "Bridge");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cMilk the cow")){
					Emotes.playEmote_MilkTheCow(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cMilk the cow §7abgespielt.");
					emote.put(p.getPlayer(), "Milk the cow");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cRurik")){
					Emotes.playEmote_Rurbik(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cRurik §7abgespielt.");
					emote.put(p.getPlayer(), "Rurik");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cWave")){
					Emotes.playEmote_Wave(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cWave §7abgespielt.");
					emote.put(p.getPlayer(), "Wave");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cMoney rain")){
					Emotes.playEmote_MoneyRain(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cMoney rain §7abgespielt.");
					emote.put(p.getPlayer(), "Money rain");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cThe pointer")){
					Emotes.playEmote_ThePointer(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cThe pointer §7abgespielt.");
					emote.put(p.getPlayer(), "The pointer");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cFrightening")){
					Emotes.playEmote_Frightening(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cFrightening §7abgespielt.");
					emote.put(p.getPlayer(), "Frightening");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSad")){
					Emotes.playEmote_Sad(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSad §7abgespielt.");
					emote.put(p.getPlayer(), "Sad");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cAir guitar")){
					Emotes.playEmote_AirGuitar(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cAir guitar §7abgespielt.");
					emote.put(p.getPlayer(), "Air guitar");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cWitch")){
					Emotes.playEmote_Witch(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cWitch §7abgespielt.");
					emote.put(p.getPlayer(), "Witch");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLeft")){
					Emotes.playEmote_Left(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cLeft §7abgespielt.");
					emote.put(p.getPlayer(), "Left");
				}

				if(!e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Weiter §8»")){
					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							emote.remove(p.getPlayer());
							Emotes.stopEmote(p.getPlayer(), NPCloc);
						}
					}, 20*10);
				}
			} else if (e.getClickedInventory().getTitle().equalsIgnoreCase("§bEmotes §8● §7Seite §c3")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")){
					p.closeInventory();
					Emotes.stopEmote(p.getPlayer(), NPCloc);

					if(emote.containsKey(p.getPlayer())){
						p.sendMessage(LobbySystem.emotes + "§7Das Emote §8(§e" + emote.get(p.getPlayer()) + "§8) §7wurde §cgestoppt§7.");
						emote.remove(p.getPlayer());
					}else{
						p.sendMessage(LobbySystem.emotes + "§cDerzeit wird kein Emote abgespielt.");
					}
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Weiter §8»")){
					PlayerInteractEntityListener.openEmotes4(p);
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")){
					PlayerInteractEntityListener.openEmotes2(p);
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cRight")){
					Emotes.playEmote_Right(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cRight §7abgespielt.");
					emote.put(p.getPlayer(), "Right");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBuuuh")){
					Emotes.playEmote_Buuuh(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBuuuh §7abgespielt.");
					emote.put(p.getPlayer(), "Buuuh");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSpitting bars")){
					Emotes.playEmote_SpittingBars(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSpitting bars §7abgespielt.");
					emote.put(p.getPlayer(), "Spitting bars");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cCount money")){
					Emotes.playEmote_CountMoney(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cCount money §7abgespielt.");
					emote.put(p.getPlayer(), "Count money");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHug")){
					Emotes.playEmote_Hug(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHug §7abgespielt.");
					emote.put(p.getPlayer(), "Hug");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cApplause")){
					Emotes.playEmote_Applause(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cApplause §7abgespielt.");
					emote.put(p.getPlayer(), "Applause");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBoxing")){
					Emotes.playEmote_Boxing(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBoxing §7abgespielt.");
					emote.put(p.getPlayer(), "Boxing");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cShoot")){
					Emotes.playEmote_Shoot(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cShoot §7abgespielt.");
					emote.put(p.getPlayer(), "Shoot");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cThe pointing man")){
					Emotes.playEmote_ThePointingMan(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cThe pointing man §7abgespielt.");
					emote.put(p.getPlayer(), "The pointing man");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHeart")){
					Emotes.playEmote_Heart(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHeart §7abgespielt.");
					emote.put(p.getPlayer(), "Heart");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cNear the fall")){
					Emotes.playEmote_NearTheFall(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cNear the fall §7abgespielt.");
					emote.put(p.getPlayer(), "Near the fall");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cWaiting")){
					Emotes.playEmote_Waiting(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cWaiting §7abgespielt.");
					emote.put(p.getPlayer(), "Waiting");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cPraise you item")){
					Emotes.playEmote_PraiseYourItem(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cPraise you item §7abgespielt.");
					emote.put(p.getPlayer(), "Praise you item");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLook")){
					Emotes.playEmote_Look(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cLook §7abgespielt.");
					emote.put(p.getPlayer(), "Look");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cI love you")){
					Emotes.playEmote_ILoveYou(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cI love you §7abgespielt.");
					emote.put(p.getPlayer(), "I love you");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSarcastic clap")){
					Emotes.playEmote_SarcasticClap(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSarcastic clap §7abgespielt.");
					emote.put(p.getPlayer(), "Sarcastic clap");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cYou")){
					Emotes.playEmote_You(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cYou §7abgespielt.");
					emote.put(p.getPlayer(), "You");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHead on wall")){
					Emotes.playEmote_HeadOnWall(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cHead on wall §7abgespielt.");
					emote.put(p.getPlayer(), "Head on wall");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBalance")){
					Emotes.playEmote_Balance(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBalance §7abgespielt.");
					emote.put(p.getPlayer(), "Balance");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLevel up")){
					Emotes.playEmote_LevelUp(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cLevel up §7abgespielt.");
					emote.put(p.getPlayer(), "Level up");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cTake the L")){
					Emotes.playEmote_TakeTheL(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cTake the L §7abgespielt.");
					emote.put(p.getPlayer(), "Take the L");
				}

				if(!e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Weiter §8»")){
					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							emote.remove(p.getPlayer());
							Emotes.stopEmote(p.getPlayer(), NPCloc);
						}
					}, 20*10);
				}
			} else if (e.getClickedInventory().getTitle().equalsIgnoreCase("§bEmotes §8● §7Seite §c4")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")){
					p.closeInventory();
					Emotes.stopEmote(p.getPlayer(), NPCloc);

					if(emote.containsKey(p.getPlayer())){
						p.sendMessage(LobbySystem.emotes + "§7Das Emote §8(§e" + emote.get(p.getPlayer()) + "§8) §7wurde §cgestoppt§7.");
						emote.remove(p.getPlayer());
					}else{
						p.sendMessage(LobbySystem.emotes + "§cDerzeit wird kein Emote abgespielt.");
					}
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Weiter §8»")){
					PlayerInteractEntityListener.openEmotes5(p);
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")){
					PlayerInteractEntityListener.openEmotes3(p);
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cMy idol")){
					Emotes.playEmote_MyIdol(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cMy idol §7abgespielt.");
					emote.put(p.getPlayer(), "My idol");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cAirplane")){
					Emotes.playEmote_Airplane(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cAirplane §7abgespielt.");
					emote.put(p.getPlayer(), "Airplane");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEagle")){
					Emotes.playEmote_Eagle(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cEagle §7abgespielt.");
					emote.put(p.getPlayer(), "Eagle");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cJob well done")){
					Emotes.playEmote_JobWellDone(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cJob well done §7abgespielt.");
					emote.put(p.getPlayer(), "Job well done");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cElephant")){
					Emotes.playEmote_Elephant(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cElephant §7abgespielt.");
					emote.put(p.getPlayer(), "Elephant");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cPresent")){
					Emotes.playEmote_Present(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cPresent §7abgespielt.");
					emote.put(p.getPlayer(), "Present");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEyes on you")){
					Emotes.playEmote_EyesOnYou(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cEyes on you §7abgespielt.");
					emote.put(p.getPlayer(), "Eyes on you");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBow down")){
					Emotes.playEmote_BowDown(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBow down §7abgespielt.");
					emote.put(p.getPlayer(), "Bow down");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cManeki-neko")){
					Emotes.playEmote_ManekiNeko(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cManeki-neko §7abgespielt.");
					emote.put(p.getPlayer(), "Maneki-neko");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cConductor")){
					Emotes.playEmote_Conductor(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cConductor §7abgespielt.");
					emote.put(p.getPlayer(), "Conductor");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cDidi challenge")){
					Emotes.playEmote_DidiChallenge(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cDidi chellange §7abgespielt.");
					emote.put(p.getPlayer(), "Didi challenge");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSnow Angle")){
					Emotes.playEmote_SnowAngle(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSnow Angle §7abgespielt.");
					emote.put(p.getPlayer(), "Snow Angle");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSnowball")){
					Emotes.playEmote_Snowball(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSnowball §7abgespielt.");
					emote.put(p.getPlayer(), "Snowball");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSprinkler")){
					Emotes.playEmote_Sprinkler(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSprinkler §7abgespielt.");
					emote.put(p.getPlayer(), "Sprinkler");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cCalculated")){
					Emotes.playEmote_Calculated(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cCalculated §7abgespielt.");
					emote.put(p.getPlayer(), "Calculated");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cOne-armed handstand")){
					Emotes.playEmote_OneArmedHandstand(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cOne-armed handstand §7abgespielt.");
					emote.put(p.getPlayer(), "One-armed handstand");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEat")){
					Emotes.playEmote_Eat(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cEat §7abgespielt.");
					emote.put(p.getPlayer(), "Eat");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cShy")){
					Emotes.playEmote_Shy(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cShy §7abgespielt.");
					emote.put(p.getPlayer(), "Shy");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSit-Ups")){
					Emotes.playEmote_SitUps(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSit-Ups §7abgespielt.");
					emote.put(p.getPlayer(), "Sit-Ups");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBreakdance")){
					Emotes.playEmote_Breakdance(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBreakdance §7abgespielt.");
					emote.put(p.getPlayer(), "Breakdance");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cMindblow")){
					Emotes.playEmote_Mindblow(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cMindblow §7abgespielt.");
					emote.put(p.getPlayer(), "Mindblow");
				}

				if(!e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Weiter §8»")){
					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							emote.remove(p.getPlayer());
							Emotes.stopEmote(p.getPlayer(), NPCloc);
						}
					}, 20*10);
				}
			} else if (e.getClickedInventory().getTitle().equalsIgnoreCase("§bEmotes §8● §7Seite §c5")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")){
					p.closeInventory();
					Emotes.stopEmote(p.getPlayer(), NPCloc);

					if(emote.containsKey(p.getPlayer())){
						p.sendMessage(LobbySystem.emotes + "§7Das Emote §8(§e" + emote.get(p.getPlayer()) + "§8) §7wurde §cgestoppt§7.");
						emote.remove(p.getPlayer());
					}else{
						p.sendMessage(LobbySystem.emotes + "§cDerzeit wird kein Emote abgespielt.");
					}
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Weiter §8»")){
					PlayerInteractEntityListener.openEmotes6(p);
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")){
					PlayerInteractEntityListener.openEmotes4(p);
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cFall")){
					Emotes.playEmote_Fall(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cFall §7abgespielt.");
					emote.put(p.getPlayer(), "Fall");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cT Pose")){
					Emotes.playEmote_TPose(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cT Pose §7abgespielt.");
					emote.put(p.getPlayer(), "T Pose");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cJumping Jack")){
					Emotes.playEmote_JumpingJack(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cJumping Jack §7abgespielt.");
					emote.put(p.getPlayer(), "Jumping Jack");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBackstoke")){
					Emotes.playEmote_Backstoke(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBackstoke done §7abgespielt.");
					emote.put(p.getPlayer(), "Backstoke");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cIce-Hockey")){
					Emotes.playEmote_IceHockey(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cIce-Hockey §7abgespielt.");
					emote.put(p.getPlayer(), "Ice-Hockey");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cLook at fireworks")){
					Emotes.playEmote_LookAtFireworks(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cLook at fireworks §7abgespielt.");
					emote.put(p.getPlayer(), "Look at fireworks");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cFinish the tree")){
					Emotes.playEmote_FinishTheTree(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cFinish the tree §7abgespielt.");
					emote.put(p.getPlayer(), "Finish the tree");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cIce-Skating")){
					Emotes.playEmote_IceSkating(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cFinish the tree §7abgespielt.");
					emote.put(p.getPlayer(), "Finish the tree");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cFancy Feet")){
					Emotes.playEmote_FancyFeet(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cFancy Feet §7abgespielt.");
					emote.put(p.getPlayer(), "Fancy Feet");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cRonaldo")){
					Emotes.playEmote_Ronaldo(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cRonaldo §7abgespielt.");
					emote.put(p.getPlayer(), "Ronaldo");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cTrue Heart")){
					Emotes.playEmote_TrueHeart(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cTrue Heart §7abgespielt.");
					emote.put(p.getPlayer(), "True Heart");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cPumpernickel")){
					Emotes.playEmote_Pumpernickel(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cPumpernickel §7abgespielt.");
					emote.put(p.getPlayer(), "Pumpernickel");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBaby Shark")){
					Emotes.playEmote_BabyShark(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cBaby Shark §7abgespielt.");
					emote.put(p.getPlayer(), "Baby Shark");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cOpen present")){
					Emotes.playEmote_OpenPresent(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cOpen present §7abgespielt.");
					emote.put(p.getPlayer(), "Open present");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cDj")){
					Emotes.playEmote_Dj(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cDj §7abgespielt.");
					emote.put(p.getPlayer(), "Dj");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSneeze")){
					Emotes.playEmote_Sneeze(p.getPlayer(), NPCloc);
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §cSneeze §7abgespielt.");
					emote.put(p.getPlayer(), "Sneeze");
				}

				if(!e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")){
					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							emote.remove(p.getPlayer());
							Emotes.stopEmote(p.getPlayer(), NPCloc);
						}
					}, 20*10);
				}
			} else if (e.getClickedInventory().getTitle().equalsIgnoreCase("§bEmotes §8● §7Seite §c6")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")){
					p.closeInventory();
					Emotes.stopEmote(p.getPlayer(), NPCloc);

					if(emote.containsKey(p.getPlayer())){
						p.sendMessage(LobbySystem.emotes + "§7Das Emote §8(§e" + emote.get(p.getPlayer()) + "§8) §7wurde §cgestoppt§7.");
						emote.remove(p.getPlayer());
					}else{
						p.sendMessage(LobbySystem.emotes + "§cDerzeit wird kein Emote abgespielt.");
					}
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")){
					PlayerInteractEntityListener.openEmotes5(p);
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§c")){
					//
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §c §7abgespielt.");
					emote.put(p.getPlayer(), "");
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§c")){
					//
					p.closeInventory();
					p.sendMessage(LobbySystem.emotes + "§7Es wird nun §c §7abgespielt.");
					emote.put(p.getPlayer(), "");
				}

				if(!e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cEmote stoppen")
						&& !e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8« §7Zurück")){
					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							emote.remove(p.getPlayer());
							Emotes.stopEmote(p.getPlayer(), NPCloc);
						}
					}, 20*10);
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§9Statistiken §8● §7Menü")) {
				e.setCancelled(true);
			}

			if (e.getClickedInventory().getName().equalsIgnoreCase("§eBelohnung §8● §7Menü")) {
				e.setCancelled(true);

				GregorianCalendar cal = new GregorianCalendar();
				SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");

				SimpleDateFormat dateFormatOfString1 = new SimpleDateFormat("dd.MM.yyyy");
				Date d1 = dateFormatOfString1.parse(MySQL.getDatumSpieler(uuid));
				String s1_1 = new String(dateFormatOfString1.format(d1));
				String s1_2 = new String(sdf.format(cal.getTime()));

				SimpleDateFormat dateFormatOfString2 = new SimpleDateFormat("dd.MM.yyyy");
				Date d2 = dateFormatOfString1.parse(MySQL.getDatumPremium(uuid));
				String s2_1 = new String(dateFormatOfString1.format(d2));
				String s2_2 = new String(sdf.format(cal.getTime()));

				SimpleDateFormat dateFormatOfString3 = new SimpleDateFormat("dd.MM.yyyy");
				Date d3 = dateFormatOfString1.parse(MySQL.getDatumTeam(uuid));
				String s3_1 = new String(dateFormatOfString1.format(d3));
				String s3_2 = new String(sdf.format(cal.getTime()));

				SimpleDateFormat dateFormatOfString4 = new SimpleDateFormat("dd.MM.yyyy");
				Date d4 = dateFormatOfString1.parse(MySQL.getDatumLaby(uuid));
				String s4_1 = new String(dateFormatOfString1.format(d4));
				String s4_2 = new String(sdf.format(cal.getTime()));

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖ §aSpieler §7Belohnung §4✖")) {
					if(s1_1.equals(s1_2)){
						GregorianCalendar cal_1 = new GregorianCalendar();
						cal_1.add(GregorianCalendar.DATE, +1);

						p.sendMessage(LobbySystem.belohnung + "§8§m-----------§r§8┃ §aSpieler §7Belohnung §8┃§8§m-----------");
						p.sendMessage(LobbySystem.belohnung + "§cDu hast die Belohnung heute schon abgeholt.");
						p.sendMessage(LobbySystem.belohnung + "§7Komm am §e§l" + sdf.format(cal_1.getTime()) + " §7wieder.");
						p.sendMessage(LobbySystem.belohnung + "§8§m----------------------------------------");
						return;
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖ §6Premium §7Belohnung §4✖")) {
					if(s2_1.equals(s2_2)){
						GregorianCalendar cal_2 = new GregorianCalendar();
						cal_2.add(GregorianCalendar.DATE, +1);

						p.sendMessage(LobbySystem.belohnung + "§8§m-----------§r§8┃ §6Premium §7Belohnung §8┃§8§m-----------");
						p.sendMessage(LobbySystem.belohnung + "§cDu hast die Belohnung heute schon abgeholt.");
						p.sendMessage(LobbySystem.belohnung + "§7Komm am §e§l" + sdf.format(cal_2.getTime()) + " §7wieder.");
						p.sendMessage(LobbySystem.belohnung + "§8§m----------------------------------------");
						return;
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖ §cTeam §7Belohnung §4✖")) {
					if(s3_1.equals(s3_2)){
						GregorianCalendar cal_3 = new GregorianCalendar();
						cal_3.add(GregorianCalendar.DATE, +1);

						p.sendMessage(LobbySystem.belohnung + "§8§m-----------§r§8┃ §cTeam §7Belohnung §8┃§8§m-----------");
						p.sendMessage(LobbySystem.belohnung + "§cDu hast die Belohnung heute schon abgeholt.");
						p.sendMessage(LobbySystem.belohnung + "§7Komm am §e§l" + sdf.format(cal_3.getTime()) + " §7wieder.");
						p.sendMessage(LobbySystem.belohnung + "§8§m----------------------------------------");
						return;
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖ §9LabyMod §7Belohnung §4✖")) {
					if(s4_1.equals(s4_2)){
						GregorianCalendar cal_4 = new GregorianCalendar();
						cal_4.add(GregorianCalendar.DATE, +1);

						p.sendMessage(LobbySystem.belohnung + "§8§m-----------§r§8┃ §9LabyMod §7Belohnung §8┃§8§m-----------");
						p.sendMessage(LobbySystem.belohnung + "§cDu hast die Belohnung heute schon abgeholt.");
						p.sendMessage(LobbySystem.belohnung + "§7Komm am §e§l" + sdf.format(cal_4.getTime()) + " §7wieder.");
						p.sendMessage(LobbySystem.belohnung + "§8§m----------------------------------------");
						return;
					}
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aSpieler §7Belohnung")) {
					if (!MySQL.getSpieler(uuid)) {
						int coins = 150;

						if (!MySQL.getStreak(uuid)) {
							MySQL.setStreaktimes(uuid, Integer.valueOf(MySQL.getStreaktimes(uuid) + 1));
							MySQL.setStreak(uuid, Integer.valueOf(1));

							int coins1 = MySQL.getStreaktimes(uuid) * 50;

							coins += coins1;
						}

						MySQL.setSpieler(uuid, Integer.valueOf(1));
						MySQL.setDatumSpieler(uuid);

						p.sendMessage(LobbySystem.belohnung + "§8§m-----------§r§8┃ §aSpieler §7Belohnung §8┃§8§m-----------");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e" + coins + " Coins §7erhalten.");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e1 §9Detektiv §7und §e1 §4Traitor §7Pass erhalten.");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e1 Los §7für die §eLotterie §7erhalten!");
						p.sendMessage(LobbySystem.belohnung + "§8§m----------------------------------------");
						p.playSound(p.getLocation(), Sound.LEVEL_UP, 1F, 1F);

						Coins.addCoins(uuid, coins);
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) + 1);

						MySQL.addTraitPaesse(uuid, 1);
						MySQL.addDetecPaesse(uuid, 1);

						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
					}

					NPCListener.openBelohnung(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§6Premium §7Belohnung")) {
					if (!MySQL.getPremium(uuid)) {
						int coins = 250;

						if (!MySQL.getStreak(uuid)) {
							MySQL.setStreaktimes(uuid, Integer.valueOf(MySQL.getStreaktimes(uuid) + 1));
							MySQL.setStreak(uuid, Integer.valueOf(1));

							int coins1 = MySQL.getStreaktimes(uuid) * 50;

							coins += coins1;
						}

						MySQL.setPremium(uuid, Integer.valueOf(1));
						MySQL.setDatumPremium(uuid);

						p.sendMessage(LobbySystem.belohnung + "§8§m-----------§r§8┃ §6Premium §7Belohnung §8┃§8§m-----------");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e" + coins + " Coins §7erhalten.");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e1 §9Detektiv §7und §e1 §4Traitor §7Pass erhalten.");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e1 Los §7für die §eLotterie §7erhalten!");
						p.sendMessage(LobbySystem.belohnung + "§8§m----------------------------------------");
						p.playSound(p.getLocation(), Sound.LEVEL_UP, 1F, 1F);

						Coins.addCoins(uuid, coins);
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) + 1);

						MySQL.addTraitPaesse(uuid, 1);
						MySQL.addDetecPaesse(uuid, 1);

						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
					}

					NPCListener.openBelohnung(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cTeam §7Belohnung")) {
					if (!MySQL.getTeam(uuid)) {
						int coins = 350;

						if (!MySQL.getStreak(uuid)) {
							MySQL.setStreaktimes(uuid, Integer.valueOf(MySQL.getStreaktimes(uuid) + 1));
							MySQL.setStreak(uuid, Integer.valueOf(1));

							int coins1 = MySQL.getStreaktimes(uuid) * 50;

							coins += coins1;
						}

						MySQL.setTeam(uuid, Integer.valueOf(1));
						MySQL.setDatumTeam(uuid);

						p.sendMessage(LobbySystem.belohnung + "§8§m-----------§r§8┃ §cTeam §7Belohnung §8┃§8§m-----------");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e" + coins + " Coins §7erhalten.");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e1 §9Detektiv §7und §e1 §4Traitor §7Pass erhalten.");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e1 Lose §7für die §eLotterie §7erhalten!");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e1 Kiste §7für das §eChestopening §7erhalten!");
						p.sendMessage(LobbySystem.belohnung + "§8§m----------------------------------------");
						p.playSound(p.getLocation(), Sound.LEVEL_UP, 1F, 1F);

						Coins.addCoins(uuid, coins);
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) + 1);
						ChestOpening.addChests(uuid, 1);

						MySQL.addTraitPaesse(uuid, 1);
						MySQL.addDetecPaesse(uuid, 1);

						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
					}

					NPCListener.openBelohnung(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§9LabyMod §7Belohnung")) {
					if (!MySQL.getLaby(uuid)) {
						int coins = 250;

						if (!MySQL.getStreak(uuid)) {
							MySQL.setStreaktimes(uuid, Integer.valueOf(MySQL.getStreaktimes(uuid) + 1));
							MySQL.setStreak(uuid, Integer.valueOf(1));

							int coins1 = MySQL.getStreaktimes(uuid) * 50;

							coins += coins1;
						}

						MySQL.setLaby(uuid, Integer.valueOf(1));
						MySQL.setDatumLaby(uuid);

						p.sendMessage(LobbySystem.belohnung + "§8§m-----------§r§8┃ §9LabyMod §7Belohnung §8┃§8§m-----------");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e" + coins + " Coins §7erhalten.");
						p.sendMessage(LobbySystem.belohnung + "§8► §7Du hast §e1 Kiste §7für das §eChestopening §7erhalten!");
						p.sendMessage(LobbySystem.belohnung + "§8§m----------------------------------------");
						p.playSound(p.getLocation(), Sound.LEVEL_UP, 1F, 1F);

						Coins.addCoins(uuid, coins);
						ChestOpening.addChests(uuid, 1);

						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
					}

					NPCListener.openBelohnung(p);
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§9§lVoten")){
					p.closeInventory();

					p.sendMessage("§8§m-----------§r§8┃ §9Vote Seiten §8┃§8§m-----------");
					p.sendMessage("");
					p.sendMessage(EventString.eventString("§8► §eminecraft-server.eu", "§8● §7Klicke hier, um den §eLink §7zu öffnen", "https://minecraft-server.eu/vote/index/2067F/" + p.getName(), Action.OPEN_URL));
					p.sendMessage("");
					p.sendMessage("§8§m-----------§r§8┃ §9Vote Seiten §8┃§8§m-----------");
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aTokens einlösen")){
					Belohnung_Vote.openVotebelohnung(p);
				}
			}

			if (e.getClickedInventory().getTitle().startsWith("§9Einstellungen §8┃ §a")){
				e.setCancelled(true);

				String name2 = e.getClickedInventory().getTitle().substring(24, e.getClickedInventory().getTitle().length());

				OfflinePlayer target = Bukkit.getServer().getOfflinePlayer(name2);

				if(e.getCurrentItem().getType() == Material.IRON_CHESTPLATE){
					p.closeInventory();

					try{
						ByteArrayDataOutput out = ByteStreams.newDataOutput();
						out.writeUTF("freunde");
						out.writeUTF("clan");
						out.writeUTF(name2);
						out.writeUTF(Clan.getClan(p.getUniqueId().toString()));
						out.writeUTF(p.getName());
						p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
					}catch(Exception ex){
						p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
					}
				}else if(e.getCurrentItem().getType() == Material.CAKE){
					p.closeInventory();

					try{
						ByteArrayDataOutput out = ByteStreams.newDataOutput();
						out.writeUTF("freunde");
						out.writeUTF("party");
						out.writeUTF(name2);
						p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
					}catch(Exception ex){
						p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
					}
				}else if(e.getCurrentItem().getType() == Material.BARRIER){
					p.closeInventory();

					try{
						ByteArrayDataOutput out = ByteStreams.newDataOutput();
						out.writeUTF("freunde");
						out.writeUTF("remove");
						out.writeUTF(name2);
						out.writeUTF(p.getName());
						p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
					}catch(Exception ex){
						p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§7Datenschutzerklärung")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aAkzeptieren")) {
					p.closeInventory();

					Extras.setItem(uuid, "Datenschutz", 0, true);

					p.sendMessage(LobbySystem.prefix + "§7Du hast die §eDatenschutzerklärung §7erfolgreich §aakzeptiert§7!");
					p.sendMessage(LobbySystem.prefix + "§7Viel Spaß auf dem Netzwerk. :)");
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6BashIt §8● §eKit-Shop")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖")) {
					return;
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eMagier")) {
					if (Extras.hasItem(uuid, "BashIt-Kits", 0)) {
						p.sendMessage(LobbySystem.bashitprefix + "§cDu hast dieses Kit bereits gekauft!");
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "BashIt-Kits", 0, true);
							Coins.removeCoins(uuid, 7500);

							p.closeInventory();
							NPCListener.openBashItKits(p);

							p.sendMessage(LobbySystem.bashitprefix + "§7Du hast das §aKit §8● " + e.getCurrentItem().getItemMeta().getDisplayName() + " §7für §e7500 Coins §7gekauft.");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eAttentäter")) {
					if (Extras.hasItem(uuid, "BashIt-Kits", 1)) {
						p.sendMessage(LobbySystem.bashitprefix + "§cDu hast dieses Kit bereits gekauft!");
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "BashIt-Kits", 1, true);
							Coins.removeCoins(uuid, 7500);

							p.closeInventory();
							NPCListener.openBashItKits(p);

							p.sendMessage(LobbySystem.bashitprefix + "§7Du hast das §aKit §8● " + e.getCurrentItem().getItemMeta().getDisplayName() + " §7für §e7500 Coins §7gekauft.");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eSpinne")) {
					if (Extras.hasItem(uuid, "BashIt-Kits", 2)) {
						p.sendMessage(LobbySystem.bashitprefix + "§cDu hast dieses Kit bereits gekauft!");
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "BashIt-Kits", 2, true);
							Coins.removeCoins(uuid, 7500);

							p.closeInventory();
							NPCListener.openBashItKits(p);

							p.sendMessage(LobbySystem.bashitprefix + "§7Du hast das §aKit §8● " + e.getCurrentItem().getItemMeta().getDisplayName() + " §7für §e7500 Coins §7gekauft.");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eSkorpion")) {
					if (Extras.hasItem(uuid, "BashIt-Kits", 3)) {
						p.sendMessage(LobbySystem.bashitprefix + "§cDu hast dieses Kit bereits gekauft!");
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "BashIt-Kits", 3, true);
							Coins.removeCoins(uuid, 7500);

							p.closeInventory();
							NPCListener.openBashItKits(p);

							p.sendMessage(LobbySystem.bashitprefix + "§7Du hast das §aKit §8● " + e.getCurrentItem().getItemMeta().getDisplayName() + " §7für §e7500 Coins §7gekauft.");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eSaboteur")) {
					if (Extras.hasItem(uuid, "BashIt-Kits", 4)) {
						p.sendMessage(LobbySystem.bashitprefix + "§cDu hast dieses Kit bereits gekauft!");
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "BashIt-Kits", 4, true);
							Coins.removeCoins(uuid, 7500);

							p.closeInventory();
							NPCListener.openBashItKits(p);

							p.sendMessage(LobbySystem.bashitprefix + "§7Du hast das §aKit §8● " + e.getCurrentItem().getItemMeta().getDisplayName() + " §7für §e7500 Coins §7gekauft.");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eEnderman")) {
					if (Extras.hasItem(uuid, "BashIt-Kits", 5)) {
						p.sendMessage(LobbySystem.bashitprefix + "§cDu hast dieses Kit bereits gekauft!");
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "BashIt-Kits", 5, true);
							Coins.removeCoins(uuid, 7500);

							p.closeInventory();
							NPCListener.openBashItKits(p);

							p.sendMessage(LobbySystem.bashitprefix + "§7Du hast das §aKit §8● " + e.getCurrentItem().getItemMeta().getDisplayName() + " §7für §e7500 Coins §7gekauft.");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eVogel")) {
					if (Extras.hasItem(uuid, "BashIt-Kits", 6)) {
						p.sendMessage(LobbySystem.bashitprefix + "§cDu hast dieses Kit bereits gekauft!");
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "BashIt-Kits", 6, true);
							Coins.removeCoins(uuid, 7500);

							p.closeInventory();
							NPCListener.openBashItKits(p);

							p.sendMessage(LobbySystem.bashitprefix + "§7Du hast das §aKit §8● " + e.getCurrentItem().getItemMeta().getDisplayName() + " §7für §e7500 Coins §7gekauft.");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eSchneemann")) {
					if (Extras.hasItem(uuid, "BashIt-Kits", 7)) {
						p.sendMessage(LobbySystem.bashitprefix + "§cDu hast dieses Kit bereits gekauft!");
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "BashIt-Kits", 7, true);
							Coins.removeCoins(uuid, 7500);

							p.closeInventory();
							NPCListener.openBashItKits(p);

							p.sendMessage(LobbySystem.bashitprefix + "§7Du hast das §aKit §8● " + e.getCurrentItem().getItemMeta().getDisplayName() + " §7für §e7500 Coins §7gekauft.");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§eChestopening §8● §7Menü")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§a1 Kiste kaufen §8● §e5000 Coins")) {
					if (Coins.getCoins(uuid) >= 5000) {
						Coins.removeCoins(uuid, 5000);
						ChestOpening.addChests(uuid, 1);
						PlayerInteractListener.openChestopening(p);
						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
						p.sendMessage(LobbySystem.chestopening + "§7Du hast dir §e1 Kiste §7gekauft.");
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.chestopening + "§cDu hast zu wenig Coins!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§a3 Kisten kaufen §8● §e14000 Coins")) {
					if (Coins.getCoins(uuid) >= 14000) {
						Coins.removeCoins(uuid, 14000);
						ChestOpening.addChests(uuid, 3);
						PlayerInteractListener.openChestopening(p);
						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
						p.sendMessage(LobbySystem.chestopening + "§7Du hast dir §e3 Kisten §7gekauft.");
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.chestopening + "§cDu hast zu wenig Coins!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§a5 Kisten kaufen §8● §e23000 Coins")) {
					if (Coins.getCoins(uuid) >= 23000) {
						Coins.removeCoins(uuid, 23000);
						ChestOpening.addChests(uuid, 5);
						PlayerInteractListener.openChestopening(p);
						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
						p.sendMessage(LobbySystem.chestopening + "§7Du hast dir §e5 Kisten §7gekauft.");
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.chestopening + "§cDu hast zu wenig Coins!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§a10 Kisten kaufen §8● §e45000 Coins")) {
					if (Coins.getCoins(uuid) >= 45000) {
						Coins.removeCoins(uuid, 45000);
						ChestOpening.addChests(uuid, 10);
						PlayerInteractListener.openChestopening(p);
						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
						p.sendMessage(LobbySystem.chestopening + "§7Du hast dir §e10 Kisten §7gekauft.");
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.chestopening + "§cDu hast zu wenig Coins!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nSpielen")) {
					if (ChestOpening.getChests(uuid) > 0) {
						ChestOpening.removeChests(uuid, 1);

						Log.log(uuid, "CHEST_REDEEMED", "Eingelöst | -1 Kiste");

						Methoden.runChestopnening(p, false);
						Methoden.updateHolos(p);
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.chestopening + "§cDu besitzt keine Kisten!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nSchnell Öffnen")) {
					if (ChestOpening.getChests(uuid) > 0) {
						ChestOpening.removeChests(uuid, 1);

						Log.log(uuid, "CHEST_REDEEMED", "Eingelöst | -1 Kiste");

						Methoden.runChestopnening(p, true);
						Methoden.updateHolos(p);
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.chestopening + "§cDu besitzt keine Kisten!");
					}
				}
			}else if(e.getClickedInventory().getTitle().equalsIgnoreCase("§eChestopening §8● §6Gewinn")){
				e.setCancelled(true);


				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nÖffnen")) {
					if (ChestOpening.getChests(uuid) > 0) {
						ChestOpening.removeChests(uuid, 1);

						Log.log(uuid, "CHEST_REDEEMED", "Eingelöst | -1 Kiste");

						Methoden.runChestopnening(p, false);
						Methoden.updateHolos(p);
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.chestopening + "§cDu besitzt keine Kisten!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nSchnell Öffnen")) {
					if (ChestOpening.getChests(uuid) > 0) {
						ChestOpening.removeChests(uuid, 1);

						Log.log(uuid, "CHEST_REDEEMED", "Eingelöst | -1 Kiste");

						Methoden.runChestopnening(p, true);
						Methoden.updateHolos(p);
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.chestopening + "§cDu besitzt keine Kisten!");
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§eChestopening §8● §aSpiel")) {
				e.setCancelled(true);
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§eLotterie §8● §7Menü")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§a1 Los kaufen §8● §e1000 Coins")) {
					if (Coins.getCoins(uuid) >= 1000) {
						Coins.removeCoins(uuid, 1000);
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) + 1);
						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
						p.sendMessage(LobbySystem.lotterie + "§7Du hast dir §e1 Los §7gekauft.");
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.lotterie + "§cDu hast zu wenig Coins!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§a3 Lose kaufen §8● §e2700 Coins")) {
					if (Coins.getCoins(uuid) >= 2700) {
						Coins.removeCoins(uuid, 2700);
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) + 3);
						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
						p.sendMessage(LobbySystem.lotterie + "§7Du hast dir §e3 Lose §7gekauft.");
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.lotterie + "§cDu hast zu wenig Coins!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§a5 Lose kaufen §8● §e4500 Coins")) {
					if (Coins.getCoins(uuid) >= 4500) {
						Coins.removeCoins(uuid, 4500);
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) + 5);
						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
						p.sendMessage(LobbySystem.lotterie + "§7Du hast dir §e5 Lose §7gekauft.");
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.lotterie + "§cDu hast zu wenig Coins!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§a10 Lose kaufen §8● §e9700 Coins")) {
					if (Coins.getCoins(uuid) >= 9700) {
						Coins.removeCoins(uuid, 9700);
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) + 10);
						Methoden.updateScoreboard(p);
						Methoden.updateHolos(p);
						p.sendMessage(LobbySystem.lotterie + "§7Du hast dir §e10 Lose §7gekauft.");
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.lotterie + "§cDu hast zu wenig Coins!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nSpielen")) {
					if (MySQL.getLotterielose(p) > 0) {
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) - 1);

						Log.log(uuid, "LOTS_REDEEMED", "Eingelöst | -1 Los");

						Inventory inv = Bukkit.createInventory(null, 54, "§eLotterie §8● §7Spiel");

						ItemStack stack = new ItemStack(Material.ENDER_CHEST, 1);
						ItemMeta stackm = stack.getItemMeta();
						stackm.setDisplayName("§7Klick mich!");
						stack.setItemMeta(stackm);

						for (int i = 0; i < inv.getSize(); i++) {
							inv.setItem(i, stack);
						}

						p.openInventory(inv);

						PlayerInteractListener.lists.put(p, PlayerInteractListener.getRndCoinList());
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.lotterie + "§cDu besitzt keine Lose!");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nSchnell Öffnen")) {
					if (MySQL.getLotterielose(p) > 0) {
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) - 1);

						Log.log(uuid, "LOTS_REDEEMED", "Eingelöst | -1 Los");

						Methoden.quickLottry(p);
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.lotterie + "§cDu besitzt keine Lose!");
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§eLotterie §8● §7Spiel")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getType().equals(Material.ENDER_CHEST)) {
					if (PlayerInteractListener.lists.get(p).get(e.getSlot()) == 1) {
						e.getClickedInventory().setItem(e.getSlot(), new ItemBuilder(Material.GOLD_INGOT).displayName("§e" + PlayerInteractListener.lists.get(p).get(e.getSlot())).build());
					} else if (PlayerInteractListener.lists.get(p).get(e.getSlot()) >= 2500) {
						p.playSound(p.getLocation(), Sound.WITHER_DEATH, 1F, 1F);
						e.getClickedInventory().setItem(e.getSlot(), new ItemBuilder(Material.GOLD_INGOT).displayName("§6§l" + PlayerInteractListener.lists.get(p).get(e.getSlot())).glowing().build());
					} else if (PlayerInteractListener.lists.get(p).get(e.getSlot()) <= 2500) {
						e.getClickedInventory().setItem(e.getSlot(), new ItemBuilder(Material.GOLD_INGOT).displayName("§e" + PlayerInteractListener.lists.get(p).get(e.getSlot())).build());
					} else if (PlayerInteractListener.lists.get(p).get(e.getSlot()) == 1000000) {
						p.playSound(p.getLocation(), Sound.ENDERDRAGON_DEATH, 1F, 1F);
						e.getClickedInventory().setItem(e.getSlot(), new ItemBuilder(Material.DIAMOND).displayName("§b§l" + PlayerInteractListener.lists.get(p).get(e.getSlot())).glowing().build());
					} else {
						e.getClickedInventory().setItem(e.getSlot(), new ItemBuilder(Material.BARRIER).displayName("§c0 Coins").build());
					}

					int gold = 0;

					for (int i = 0; i < e.getClickedInventory().getSize(); i++) {
						if (e.getInventory().getItem(i).getType().equals(Material.GOLD_INGOT) || e.getInventory().getItem(i).getType().equals(Material.DIAMOND)) {
							gold++;
						}
					}

					if (gold == 1) {
						PlayerInteractListener.coins1.put(p, PlayerInteractListener.lists.get(p).get(e.getSlot()));
					}

					if (gold == 2) {
						PlayerInteractListener.coins2.put(p, PlayerInteractListener.lists.get(p).get(e.getSlot()));
					}

					if (gold == 3) {
						PlayerInteractListener.coins3.put(p, PlayerInteractListener.lists.get(p).get(e.getSlot()));
					}

					if (gold == 4) {
						PlayerInteractListener.coins4.put(p, PlayerInteractListener.lists.get(p).get(e.getSlot()));
					}

					if (gold == 5) {
						PlayerInteractListener.coins5.put(p, PlayerInteractListener.lists.get(p).get(e.getSlot()));

						PlayerInteractListener.lists.remove(p);

						int endcoins = PlayerInteractListener.coins1.get(p) + PlayerInteractListener.coins2.get(p) + PlayerInteractListener.coins3.get(p) + PlayerInteractListener.coins4.get(p) + PlayerInteractListener.coins5.get(p);

						double number = endcoins;
						String str = NumberFormat.getInstance().format(number);

						p.sendMessage(LobbySystem.lotterie + "§7Du hast insgesamt §e" + str + " Coins §7gewonnen.");

						Log.log(uuid, "LOTS_WIN", "Gewinn | " + str);

						Inventory end = Bukkit.createInventory(null, 54, "§eLotterie §8● §aGewinn");

						ItemStack CH = new ItemStack(Material.STAINED_GLASS_PANE, 1, (short) 15);
						ItemMeta CHMeta = CH.getItemMeta();
						CHMeta.setDisplayName(" ");
						CH.setItemMeta(CHMeta);

						for(int i1 = 0; i1 < end.getSize(); i1++){
							end.setItem(i1, CH);
						}

						if(endcoins >= 10000){
							ItemStack gewinn = new ItemBuilder(Material.DIAMOND, 1).displayName("§7Coins §8● §4§l" + str).glowing().build();
							end.setItem(13, gewinn);
						}else if(endcoins >= 5000){
							ItemStack gewinn = new ItemBuilder(Material.GOLD_INGOT, 1).displayName("§7Coins §8● §6§l" + str).glowing().build();
							end.setItem(13, gewinn);
						}else if(endcoins < 5000){
							ItemStack gewinn = new ItemBuilder(Material.IRON_INGOT, 1).displayName("§7Coins §8● §e" + str).glowing().build();
							end.setItem(13, gewinn);
						}

						if(PlayerInteractListener.coins1.get(p) >= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c1. Los §8┃ §7Coins §8● §6§l" + PlayerInteractListener.coins1.get(p));
							end.setItem(29, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§6Selten", (short) 4);
							end.setItem(38, PH);
						}else if(PlayerInteractListener.coins1.get(p) <= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c1. Los §8┃ §7Coins §8● §e" + PlayerInteractListener.coins1.get(p));
							end.setItem(29, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§aNormal", (short) 0);
							end.setItem(38, PH);
						}

						if(PlayerInteractListener.coins2.get(p) >= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c2. Los §8┃ §7Coins §8● §6§l" + PlayerInteractListener.coins2.get(p));
							end.setItem(30, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§6Selten", (short) 4);
							end.setItem(39, PH);
						}else if(PlayerInteractListener.coins2.get(p) <= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c2. Los §8┃ §7Coins §8● §e" + PlayerInteractListener.coins2.get(p));
							end.setItem(30, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§aNormal", (short) 0);
							end.setItem(39, PH);
						}

						if(PlayerInteractListener.coins3.get(p) >= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c3. Los §8┃ §7Coins §8● §6§l" + PlayerInteractListener.coins3.get(p));
							end.setItem(31, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§6Selten", (short) 4);
							end.setItem(40, PH);
						}else if(PlayerInteractListener.coins3.get(p) <= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c3. Los §8┃ §7Coins §8● §e" + PlayerInteractListener.coins3.get(p));
							end.setItem(31, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§aNormal", (short) 0);
							end.setItem(40, PH);
						}

						if(PlayerInteractListener.coins4.get(p) >= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c4. Los §8┃ §7Coins §8● §6§l" + PlayerInteractListener.coins4.get(p));
							end.setItem(32, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§6Selten", (short) 4);
							end.setItem(41, PH);
						}else if(PlayerInteractListener.coins4.get(p) <= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c4. Los §8┃ §7Coins §8● §e" + PlayerInteractListener.coins4.get(p));
							end.setItem(32, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§aNormal", (short) 0);
							end.setItem(41, PH);
						}

						if(PlayerInteractListener.coins5.get(p) >= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c5. Los §8┃ §7Coins §8● §6§l" + PlayerInteractListener.coins5.get(p));
							end.setItem(33, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§6Selten", (short) 4);
							end.setItem(42, PH);
						}else if(PlayerInteractListener.coins5.get(p) <= 2500){
							ItemStack c1 = ItemBuilder1.createItem(Material.GOLD_INGOT, 1, "§c5. Los §8┃ §7Coins §8● §e" + PlayerInteractListener.coins5.get(p));
							end.setItem(33, c1);

							ItemStack PH = ItemBuilder1.createItemWithShort(Material.STAINED_GLASS_PANE, 1, "§aNormal", (short) 0);
							end.setItem(42, PH);
						}

						ArrayList<String> los = new ArrayList<>();
						los.add(0, "");
						los.add(1, "§8► §7Hier kannst du ein neues §eLos §7öffnen!");
						los.add(2, " ");
						if(MySQL.getLotterielose(p) == 0){
							los.add(3, "§8► §7Du hast noch §e0 §7Lose");
						}else if(MySQL.getLotterielose(p) > 0){
							los.add(3, "§8► §7Du hast noch §e" + MySQL.getLotterielose(p) + " §7Lose");
						}

						ItemStack NEW = ItemBuilder1.createItemWithLore(Material.PAPER, 1, "§7Neues §eLos §7öffnen", los);
						end.setItem(45, NEW);

						end.setItem(53, new ItemBuilder(Material.BOOK).displayName("§a§nSchnell Öffnen").build());

						p.openInventory(end);

						Coins.addCoins(uuid, endcoins);

						Methoden.updateHolos(p);
						Methoden.updateScoreboard(p);
//						Methoden.updateBelowNameAll();

						PlayerInteractListener.coins1.remove(p);
						PlayerInteractListener.coins2.remove(p);
						PlayerInteractListener.coins3.remove(p);
						PlayerInteractListener.coins4.remove(p);
						PlayerInteractListener.coins5.remove(p);
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§eLotterie §8● §aGewinn")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Neues §eLos §7öffnen")){
					if(MySQL.getLotterielose(p) > 0){
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) - 1);

						Log.log(uuid, "LOTS_REDEEMED", "Eingelöst | -1 Los");

						Inventory inv = Bukkit.createInventory(null, 54, "§eLotterie §8● §7Spiel");

						ItemStack stack = new ItemStack(Material.ENDER_CHEST, 1);
						ItemMeta stackm = stack.getItemMeta();
						stackm.setDisplayName("§7Klick mich!");
						stack.setItemMeta(stackm);

						for (int i = 0; i < inv.getSize(); i++) {
							inv.setItem(i, stack);
						}

						p.openInventory(inv);

						PlayerInteractListener.lists.put(p, PlayerInteractListener.getRndCoinList());
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.lotterie + "§cDu besitzt keine Lose!");
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nSchnell Öffnen")){
					if(MySQL.getLotterielose(p) > 0){
						MySQL.setLotterielose(p, MySQL.getLotterielose(p) - 1);

						Methoden.quickLottry(p);
					}else{
						p.closeInventory();
						p.sendMessage(LobbySystem.lotterie + "§cDu besitzt keine Lose!");
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§aTeleporter §8● §7Menü")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4✖") || e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cDerzeit in Entwicklung")) {
					return;
				} else {
					p.closeInventory();
				}

				Vector v = new Vector(0, 1.3, 0);
				p.setVelocity(v);
				p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
				p.addPotionEffect(new PotionEffect(PotionEffectType.BLINDNESS, 20*3, 10));

				Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
					@Override
					public void run(){
						if(p.getHealth() > 2){
							p.damage(1);
						}

						if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§9Tägliche Belohnung")){
							try{
								World w = Bukkit.getWorld(LobbySystem.cfg.getString("Warps.TB.World"));
								double x = LobbySystem.cfg.getDouble("Warps.TB.X");
								double y = LobbySystem.cfg.getDouble("Warps.TB.Y");
								double z = LobbySystem.cfg.getDouble("Warps.TB.Z");
								float yaw = (float) LobbySystem.cfg.getDouble("Warps.TB.Yaw");
								float pitch = (float) LobbySystem.cfg.getDouble("Warps.TB.Pitch");
								Location warp = new Location(w, x, y, z, yaw, pitch);

								warp.getChunk().load();

								p.teleport(warp);
								p.playSound(p.getLocation(), Sound.ENDERMAN_TELEPORT, 1F, 1F);
								p.sendTitle("§8● §6Warp §8●", e.getCurrentItem().getItemMeta().getDisplayName());
							}catch(Exception ex){
								p.sendMessage(LobbySystem.prefix + "§cDieser §eWarp §cexistiert nicht!");
							}
							return;
						}

						if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§c???")){
							try{
								World w = Bukkit.getWorld(LobbySystem.cfg.getString("Warps.PS.World"));
								double x = LobbySystem.cfg.getDouble("Warps.PS.X");
								double y = LobbySystem.cfg.getDouble("Warps.PS.Y");
								double z = LobbySystem.cfg.getDouble("Warps.PS.Z");
								float yaw = (float) LobbySystem.cfg.getDouble("Warps.PS.Yaw");
								float pitch = (float) LobbySystem.cfg.getDouble("Warps.PS.Pitch");
								Location warp = new Location(w, x, y, z, yaw, pitch);

								warp.getChunk().load();

								p.teleport(warp);
								p.playSound(p.getLocation(), Sound.ENDERMAN_TELEPORT, 1F, 1F);
								p.sendTitle("§8● §6Warp §8●", e.getCurrentItem().getItemMeta().getDisplayName());
							}catch(Exception ex){
								p.sendMessage(LobbySystem.prefix + "§cDieser §eWarp §cexistiert nicht!");
							}
							return;
						}

						try {
							World w = Bukkit.getWorld(LobbySystem.cfg.getString("Warps." + ChatColor.stripColor(e.getCurrentItem().getItemMeta().getDisplayName()) + ".World"));
							double x = LobbySystem.cfg.getDouble("Warps." + ChatColor.stripColor(e.getCurrentItem().getItemMeta().getDisplayName()) + ".X");
							double y = LobbySystem.cfg.getDouble("Warps." + ChatColor.stripColor(e.getCurrentItem().getItemMeta().getDisplayName()) + ".Y");
							double z = LobbySystem.cfg.getDouble("Warps." + ChatColor.stripColor(e.getCurrentItem().getItemMeta().getDisplayName()) + ".Z");
							float yaw = (float) LobbySystem.cfg.getDouble("Warps." + ChatColor.stripColor(e.getCurrentItem().getItemMeta().getDisplayName()) + ".Yaw");
							float pitch = (float) LobbySystem.cfg.getDouble("Warps." + ChatColor.stripColor(e.getCurrentItem().getItemMeta().getDisplayName()) + ".Pitch");
							Location warp = new Location(w, x, y, z, yaw, pitch);

							warp.getChunk().load();

							p.teleport(warp);
							p.playSound(p.getLocation(), Sound.ENDERMAN_TELEPORT, 1F, 1F);
							p.sendTitle("§8● §6Warp §8●", e.getCurrentItem().getItemMeta().getDisplayName());
						} catch (Exception ex) {
							p.sendMessage(LobbySystem.prefix + "§cDieser §eWarp §cexistiert nicht!");
						}
					}
				}, 15);
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§5AutoNick §8● §7Menü")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5AutoNick §8● §cAus")) {
					p.closeInventory();

					if(Nick.isNicked(uuid)){
						p.setNick(null);
						p.setKeepNick(false);

						ItemStack Nicktool = ItemBuilder1.createItem(Material.NAME_TAG, 1, "§8┃ §5AutoNick §8● §cAus §8● §7Rechtsklick §8┃");
						p.getInventory().setItem(2, Nicktool);
						p.playSound(p.getLocation(), Sound.BLAZE_HIT, 1F, 1F);

						p.sendMessage("");
						p.sendMessage(API.nicksystem + "§7Dein automatischer §5Nick §7wurde §cdeaktiviert§7.");
						p.sendMessage("");
					} else {
						p.sendMessage("");
						p.sendMessage(API.nicksystem + "§cDein automatischer §5Nick §cist bereits deaktiviert.");
						p.sendMessage("");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5AutoNick §8● §aSpieler")) {
					p.closeInventory();

					boolean b = Nick.keepNick(uuid);

					if(b == true){
						p.setNick(Nick.getUnusedNicks().get(new Random().nextInt(Nick.getUnusedNicks().size())));
						p.setKeepNick(true);
						p.setNickType(NickType.SPIELER);
					}else{
						p.setNick(Nick.getUnusedNicks().get(new Random().nextInt(Nick.getUnusedNicks().size())));
						p.setKeepNick(false);
						p.setNickType(NickType.SPIELER);
					}

					ItemStack Nicktool = ItemBuilder1.createItem(Material.NAME_TAG, 1, "§8┃ §5AutoNick §8● §aAn §8┃ §aSpieler §8● §7Rechtsklick §8┃");
					p.getInventory().setItem(2, Nicktool);
					p.playSound(p.getLocation(), Sound.BLAZE_HIT, 1F, 1F);

					p.sendMessage("");
					p.sendMessage(API.nicksystem + "§7Du wirst zukünftig als §aSpieler §7angezeigt.");
					p.sendMessage("");

				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5AutoNick §8● §6Premium")) {
					p.closeInventory();

					boolean b = Nick.keepNick(uuid);

					if(b == true){
						p.setNick(Nick.getUnusedNicks().get(new Random().nextInt(Nick.getUnusedNicks().size())));
						p.setKeepNick(true);
						p.setNickType(NickType.PREMIUM);
					}else{
						p.setNick(Nick.getUnusedNicks().get(new Random().nextInt(Nick.getUnusedNicks().size())));
						p.setKeepNick(false);
						p.setNickType(NickType.PREMIUM);
					}

					ItemStack Nicktool = ItemBuilder1.createItem(Material.NAME_TAG, 1, "§8┃ §5AutoNick §8● §aAn §8┃ §6Premium §8● §7Rechtsklick §8┃");
					p.getInventory().setItem(2, Nicktool);
					p.playSound(p.getLocation(), Sound.BLAZE_HIT, 1F, 1F);

					p.sendMessage("");
					p.sendMessage(API.nicksystem + "§7Du wirst zukünftig als §6Premium §7angezeigt.");
					p.sendMessage("");
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cKeepnick §8● §aAktiviert")
						|| e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cKeepnick §8● §cDeaktiviert")) {
					p.closeInventory();

					if(Nick.keepNick(uuid) == false){
						if(Nick.isNicked(uuid)){
							p.setKeepNick(true);

							p.playSound(p.getLocation(), Sound.BLAZE_HIT, 1F, 1F);

							p.sendMessage("");
							p.sendMessage(API.nicksystem + "§7Dein §cKeepnick §7wurde §aaktiviert§7.");
							p.sendMessage("");
						}else{
							p.closeInventory();
							p.playSound(p.getLocation(), Sound.ANVIL_LAND, 1F, 1F);

							p.sendMessage(API.nicksystem + "§cDu musst zuerst den §5Nick §caktivieren!");
						}
					}else if(Nick.keepNick(uuid) == true && Nick.isNicked(uuid)){
						p.setKeepNick(false);

						p.playSound(p.getLocation(), Sound.BLAZE_HIT, 1F, 1F);

						p.sendMessage("");
						p.sendMessage(API.nicksystem + "§7Dein §cKeepnick §7wurde §cdeaktiviert§7.");
						p.sendMessage("");
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5AutoNick §8● §aNick aussuchen")) {
					Nick_Menü.openNickMenü_Auswahl(p.getPlayer());
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§9Togglerang §8● §cDeaktiviert")
						|| e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§9Togglerang §8● §aAktiviert")) {
					Nick_Togglerang.openTogglerang(p.getPlayer());
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5Streamermodus")) {
					p.closeInventory();
					p.sendMessage(LobbySystem.prefix + "§cDiese Funktion wird derzeit eingebaut. :)");

//					if(Settings.getSetting(UUIDFetcher.getUUID(p.getName()), "Streamer") == 0){
//						Settings.setSetting(UUIDFetcher.getUUID(p.getName()), "Streamer", 1);
//
//						p.closeInventory();
//						p.sendMessage(API.nicksystem + "§7Dein §5Nick §7wird für dich §cnicht §7sichtbar sein.");
//					}else if(Settings.getSetting(UUIDFetcher.getUUID(p.getName()), "Streamer") == 1){
//						Settings.setSetting(UUIDFetcher.getUUID(p.getName()), "Streamer", 0);
//
//						p.closeInventory();
//						p.sendMessage(API.nicksystem + "§7Dein §5Nick §7wird wieder für dich §asichtbar §7sein.");
//					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eSkin §7sichtbar§8/§7unsichtbar")) {
					p.closeInventory();

					if(Settings.getSetting(UUIDFetcher.getUUID(p.getName()), "Nickskin") == 0){
						Settings.setSetting(UUIDFetcher.getUUID(p.getName()), "Nickskin", 1);

						p.closeInventory();
						p.sendMessage(API.nicksystem + "§7Dein §5Nickskin §7wird für dich §asichtbar §7sein.");
					}else if(Settings.getSetting(UUIDFetcher.getUUID(p.getName()), "Nickskin") == 1){
						Settings.setSetting(UUIDFetcher.getUUID(p.getName()), "Nickskin", 0);

						p.closeInventory();
						p.sendMessage(API.nicksystem + "§7Dein §5Nickskin §7wird für dich §cnicht §7sichtbar sein.");
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§5AutoNick §8● §9Togglerang")) {
				if(e.getSlot() == 10) {
					p.toggleRang(p.getUUID(), null);
					p.sendMessage(LobbySystem.prefix + "§7ToggleRang §cdeaktiviert§7.");
					p.closeInventory();
				}else if(e.getSlot() == 12) {
					p.toggleRang(p.getUUID(), RangType.SPIELER);
					p.sendMessage(LobbySystem.prefix + "§7ToggleRang §aaktiviert§7. §8("+Rang.getRangname(RangType.SPIELER)+"§8)");
					p.closeInventory();
				}else if(e.getSlot() == 14) {
					p.toggleRang(p.getUUID(), RangType.PREMIUM);
					p.sendMessage(LobbySystem.prefix + "§7ToggleRang §aaktiviert§7. §8("+Rang.getRangname(RangType.PREMIUM)+"§8)");
					p.closeInventory();
				}else if(e.getSlot() == 16) {
					p.toggleRang(p.getUUID(), RangType.TRAIDIO);
					p.sendMessage(LobbySystem.prefix + "§7ToggleRang §aaktiviert§7. §8("+Rang.getRangname(RangType.TRAIDIO)+"§8)");
					p.closeInventory();
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§5AutoNick §8● §aAuswahl")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Nick_Menü.openNickMenü(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aSpieler")) {
					Nick_Menü.openNickNamesMenu1(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§6Premium")) {
					Nick_Menü.openNickNamesMenu2(p);
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§5AutoNick §8● §aSpieler")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Nick_Menü.openNickMenü(p);
				} else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Aktualisieren")) {
					Nick_Menü.openNickNamesMenu1(p);
				} else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §aNick aussuchen")) {
					Bukkit.getScheduler().runTaskAsynchronously(LobbySystem.plugin, new Runnable() {

						@Override
						public void run() {
							AnvilGUI gui = new AnvilGUI(p, new AnvilGUI.AnvilClickEventHandler() {

								@Override
								public void onAnvilClick(AnvilClickEvent event) {
									if(event.getSlot() == AnvilGUI.AnvilSlot.OUTPUT){
										event.setWillClose(true);
										event.setWillDestroy(true);
										String nick = event.getName();

										if(nick.length() >= 3 && nick.length() <= 16){
											if(MySQL.getUUID(nick).equals("")){
												Nick.addNick(nick, true);

												p.setNick(nick);
												p.setKeepNick(false);
												p.setNickType(NickType.SPIELER);

												p.sendMessage(API.nicksystem + "§7Du wirst zukünftig als §a" + nick + " §7angezeigt.");

												if(Nick.isNicked(uuid)){
													ItemStack NT = new ItemStack(Material.NAME_TAG, 1);

													if(Nick.getNickType(uuid).equals(NickType.SPIELER)){
														ItemMeta NTMeta = NT.getItemMeta();
														NTMeta.setDisplayName("§8┃ §5AutoNick §8● §aAn §8┃ §aSpieler §8● §7Rechtsklick §8┃");
														NT.setItemMeta(NTMeta);
													}else if(Nick.getNickType(uuid).equals(NickType.PREMIUM)){
														ItemMeta NTMeta = NT.getItemMeta();
														NTMeta.setDisplayName("§8┃ §5AutoNick §8● §aAn §8┃ §6Premium §8● §7Rechtsklick §8┃");
														NT.setItemMeta(NTMeta);
													}else{
														ItemMeta NTMeta = NT.getItemMeta();
														NTMeta.setDisplayName("§8┃ §5AutoNick §8● §cAus §8● §7Rechtsklick §8┃");
														NT.setItemMeta(NTMeta);
													}
													p.getInventory().setItem(2, NT);
												}else{
													ItemStack NTA = new ItemStack(Material.NAME_TAG, 1);
													ItemMeta NTAMeta = NTA.getItemMeta();
													NTAMeta.setDisplayName("§8┃ §5AutoNick §8● §cAus §8● §7Rechtsklick §8┃");
													NTA.setItemMeta(NTAMeta);
													p.getInventory().setItem(2, NTA);
												}
											}else{
												p.sendMessage(API.nicksystem + "§cDieser Spieler existiert bereits.");
											}
										}else{
											p.sendMessage(API.nicksystem + "§cDu darfst nur 3-16 Zeichen verwenden.");
										}
									}else{
										event.setWillClose(false);
										event.setWillDestroy(false);
									}
								}
							});

							ItemStack i = new ItemStack(Material.SKULL_ITEM,1,(short)3);
							SkullMeta im = (SkullMeta)i.getItemMeta();
							im.setDisplayName(p.getName());
							im.setOwner(p.getName());
							i.setItemMeta(im);

							gui.setSlot(AnvilGUI.AnvilSlot.INPUT_LEFT, i);

							gui.open();
						}
					});
				} else {
					String nick = e.getCurrentItem().getItemMeta().getDisplayName().replace("§a", "");

					p.setNick(nick);
					p.setKeepNick(false);
					p.setNickType(NickType.SPIELER);

					p.sendMessage(API.nicksystem + "§7Du wirst zukünftig als §a" + nick + " §7angezeigt.");

					if(Nick.isNicked(uuid)){
						ItemStack NT = new ItemStack(Material.NAME_TAG, 1);

						if(Nick.getNickType(uuid).equals(NickType.SPIELER)){
							ItemMeta NTMeta = NT.getItemMeta();
							NTMeta.setDisplayName("§8┃ §5AutoNick §8● §aAn §8┃ §aSpieler §8● §7Rechtsklick §8┃");
							NT.setItemMeta(NTMeta);
						}else if(Nick.getNickType(uuid).equals(NickType.PREMIUM)){
							ItemMeta NTMeta = NT.getItemMeta();
							NTMeta.setDisplayName("§8┃ §5AutoNick §8● §aAn §8┃ §6Premium §8● §7Rechtsklick §8┃");
							NT.setItemMeta(NTMeta);
						}else{
							ItemMeta NTMeta = NT.getItemMeta();
							NTMeta.setDisplayName("§8┃ §5AutoNick §8● §cAus §8● §7Rechtsklick §8┃");
							NT.setItemMeta(NTMeta);
						}
						p.getInventory().setItem(2, NT);
					}else{
						ItemStack NTA = new ItemStack(Material.NAME_TAG, 1);
						ItemMeta NTAMeta = NTA.getItemMeta();
						NTAMeta.setDisplayName("§8┃ §5AutoNick §8● §cAus §8● §7Rechtsklick §8┃");
						NTA.setItemMeta(NTAMeta);
						p.getInventory().setItem(2, NTA);
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§5AutoNick §8● §6Premium")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Nick_Menü.openNickMenü(p);
				} else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Aktualisieren")) {
					Nick_Menü.openNickNamesMenu2(p);
				} else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §aNick aussuchen")) {
					Bukkit.getScheduler().runTaskAsynchronously(LobbySystem.plugin, new Runnable() {

						@Override
						public void run() {
							AnvilGUI gui = new AnvilGUI(p, new AnvilGUI.AnvilClickEventHandler() {

								@Override
								public void onAnvilClick(AnvilClickEvent event) {
									if(event.getSlot() == AnvilGUI.AnvilSlot.OUTPUT){
										event.setWillClose(true);
										event.setWillDestroy(true);
										String nick = event.getName();

										if(nick.length() >= 3 && nick.length() <= 16){
											if(MySQL.getUUID(nick).equals("")){
												Nick.addNick(nick, true);

												p.setNick(nick);
												p.setKeepNick(false);
												p.setNickType(NickType.PREMIUM);

												p.sendMessage(API.nicksystem + "§7Du wirst zukünftig als §6" + nick + " §7genickt.");

												if(Nick.isNicked(uuid)){
													ItemStack NT = new ItemStack(Material.NAME_TAG, 1);

													if(Nick.getNickType(uuid).equals(NickType.SPIELER)){
														ItemMeta NTMeta = NT.getItemMeta();
														NTMeta.setDisplayName("§8┃ §5AutoNick §8● §aAn §8┃ §aSpieler §8● §7Rechtsklick §8┃");
														NT.setItemMeta(NTMeta);
													}else if(Nick.getNickType(uuid).equals(NickType.PREMIUM)){
														ItemMeta NTMeta = NT.getItemMeta();
														NTMeta.setDisplayName("§8┃ §5AutoNick §8● §aAn §8┃ §6Premium §8● §7Rechtsklick §8┃");
														NT.setItemMeta(NTMeta);
													}else{
														ItemMeta NTMeta = NT.getItemMeta();
														NTMeta.setDisplayName("§8┃ §5AutoNick §8● §cAus §8● §7Rechtsklick §8┃");
														NT.setItemMeta(NTMeta);
													}
													p.getInventory().setItem(2, NT);
												}else{
													ItemStack NTA = new ItemStack(Material.NAME_TAG, 1);
													ItemMeta NTAMeta = NTA.getItemMeta();
													NTAMeta.setDisplayName("§8┃ §5AutoNick §8● §cAus §8● §7Rechtsklick §8┃");
													NTA.setItemMeta(NTAMeta);
													p.getInventory().setItem(2, NTA);
												}
											}else{
												p.sendMessage(API.nicksystem + "§cDieser Spieler existiert bereits.");
											}
										}else{
											p.sendMessage(API.nicksystem + "§cDu darfst nur 3-16 Zeichen verwenden.");
										}
									}else{
										event.setWillClose(false);
										event.setWillDestroy(false);
									}
								}
							});

							ItemStack i = new ItemStack(Material.SKULL_ITEM,1,(short)3);
							SkullMeta im = (SkullMeta)i.getItemMeta();
							im.setDisplayName(p.getName());
							im.setOwner(p.getName());
							i.setItemMeta(im);

							gui.setSlot(AnvilGUI.AnvilSlot.INPUT_LEFT, i);

							gui.open();
						}
					});
				} else {
					String nick = e.getCurrentItem().getItemMeta().getDisplayName().replace("§6", "");

					p.setNick(nick);
					p.setKeepNick(false);
					p.setNickType(NickType.PREMIUM);

					p.sendMessage(API.nicksystem + "§7Du wirst zukünftig als §6" + nick + " §7genickt.");

					if(Nick.isNicked(uuid)){
						ItemStack NT = new ItemStack(Material.NAME_TAG, 1);

						if(Nick.getNickType(uuid).equals(NickType.SPIELER)){
							ItemMeta NTMeta = NT.getItemMeta();
							NTMeta.setDisplayName("§8┃ §5AutoNick §8● §aAn §8┃ §aSpieler §8● §7Rechtsklick §8┃");
							NT.setItemMeta(NTMeta);
						}else if(Nick.getNickType(uuid).equals(NickType.PREMIUM)){
							ItemMeta NTMeta = NT.getItemMeta();
							NTMeta.setDisplayName("§8┃ §5AutoNick §8● §aAn §8┃ §6Premium §8● §7Rechtsklick §8┃");
							NT.setItemMeta(NTMeta);
						}else{
							ItemMeta NTMeta = NT.getItemMeta();
							NTMeta.setDisplayName("§8┃ §5AutoNick §8● §cAus §8● §7Rechtsklick §8┃");
							NT.setItemMeta(NTMeta);
						}
						p.getInventory().setItem(2, NT);
					}else{
						ItemStack NTA = new ItemStack(Material.NAME_TAG, 1);
						ItemMeta NTAMeta = NTA.getItemMeta();
						NTAMeta.setDisplayName("§8┃ §5AutoNick §8● §cAus §8● §7Rechtsklick §8┃");
						NTA.setItemMeta(NTAMeta);
						p.getInventory().setItem(2, NTA);
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §7Menü")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8● §9Köpfe")) {
					Extras_Köpfe.openExtras_Köpfe(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8● §7Banner")) {
					Extras_Banner.openExtras_Banner(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8● §eBallons")) {
					Extras_Ballons.openExtras_Ballons(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8● §5Schuhe")) {
					Extras_Schuhe.openExtras_Schuhe(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8● §fHaustiere")) {
					Extras_Haustiere.openExtras_Haustiere(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8● §eSchuss-Effekte")) {
					Extras_SchussEffekte.openExtras_SchussEffekte(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8● §dGadgets")) {
					Extras_Gadgets.openExtras_Gadgets(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8● §cPartikel")) {
					Extras_Partikel.openExtras_Partikel(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8● §6Premium")) {
					if (Rang.isAtLeast(RangType.PREMIUM, uuid)) {
						Extras_Premium.openExtras_Premium(p);
					} else {
						Shop_PremiumInventar.openShop_Premium(p);
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nCode einlösen")) {
					p.closeInventory();
					p.sendMessage(LobbySystem.prefix + "§7Gib den Code in den Chat ein!");
					codeeinlösen.add(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aHier kannst du dir alle §eExtras §ageben!")) {
					p.closeInventory();
					p.sendMessage(LobbySystem.prefix + "§7Du hast §aerfolgreich §7alle §eExtras §7erhalten!");

					Extras.giveAllItems(uuid, "Lobby-Köpfe");
					Extras.giveAllItems(uuid, "Lobby-Banner");
					Extras.giveAllItems(uuid, "Lobby-SchussEffekte");
					Extras.giveAllItems(uuid, "Lobby-Schuhe");
					Extras.giveAllItems(uuid, "Lobby-Gadgets");
					Extras.giveAllItems(uuid, "Lobby-Partikel");
					Extras.giveAllItems(uuid, "Lobby-Ballon");
					Extras.giveAllItems(uuid, "Lobby-Haustiere");
					MySQL.giveAllHaustiere(uuid);

					if(Rang.isAtLeast(RangType.PREMIUM, uuid)){
						Extras.giveAllItems(uuid, "Lobby-Premium-Stacker");
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §eKöpfe")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Extras_Menü.openExtras_Menü(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHut ausziehen")) {
					p.closeInventory();
					p.getInventory().setHelmet(null);
					p.sendMessage(LobbySystem.prefix + "§7Du hast deinen §eHut §7ausgezogen!");
					Extras.setActiveItemnr(uuid, "Lobby-Köpfe", -1);
					Extras.setActiveItemnr(uuid, "Lobby-Banner", -1);
					Extras.setActiveItemnr(uuid, "Lobby-Premium-PartyHut", -1);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§4Owner §8┃ §4Enrique123D")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 0)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 0);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§4Owner §8┃ §4Mr_Happy_212")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 1)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 1);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5GommeHD")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 2)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 2);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 2, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5rewinside")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 3)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 3);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 3, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5DnerTV")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 4)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 4);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 4, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5GermanLetsPlay")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 5)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 5);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 5, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5DerKev")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 6)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 6);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 6, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5Paluten")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 7)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 7);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 7, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5SturmwaffelHD")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 8)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 8);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 8, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5KranCrafter")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 9)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 9);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 9, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5Petrit")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 10)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 10);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 10, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5MCExpertDE")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 11)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 11);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 11, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eTaucher")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 12)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 12);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 2000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 12, true);
							Coins.removeCoins(uuid, 2000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eAstronaut")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 13)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 13);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 2000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 13, true);
							Coins.removeCoins(uuid, 2000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eSpongebob")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 14)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 14);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 2000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 14, true);
							Coins.removeCoins(uuid, 2000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eKürbis")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 15)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 15);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 2000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 18, true);
							Coins.removeCoins(uuid, 2000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eTNT")) {
					if (Extras.hasItem(uuid, "Lobby-Köpfe", 16)) {
						Extras.setActiveItemnr(uuid, "Lobby-Köpfe", 16);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 2000) {
							Extras.setItem(uuid, "Lobby-Köpfe", 16, true);
							Coins.removeCoins(uuid, 2000);
							Extras_Köpfe.openExtras_Köpfe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §eBallons")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Extras_Menü.openExtras_Menü(p);
				}else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §cDeaktivieren")) {
					if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
						LobbySystem.fallingblocks.get(p.getPlayer()).remove();
						LobbySystem.fallingblocks.remove(p.getPlayer());
					}

					if(LobbySystem.bats.containsKey(p.getPlayer())){
						LobbySystem.bats.get(p.getPlayer()).remove();
						LobbySystem.bats.remove(p.getPlayer());
					}

					p.closeInventory();
					p.sendMessage(LobbySystem.prefix + "§7Der §eBallon §7wurde §cdeaktiviert§7.");
					return;
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.SPIELER)+" §7Ballon")) {
					if (Extras.hasItem(uuid, "Lobby-Ballon", 0)) {
						Extras.setActiveItemnr(uuid, "Lobby-Ballon", 0);

						if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
							LobbySystem.fallingblocks.get(p.getPlayer()).remove();
							LobbySystem.fallingblocks.remove(p.getPlayer());
						}

						if(LobbySystem.bats.containsKey(p.getPlayer())){
							LobbySystem.bats.get(p.getPlayer()).remove();
							LobbySystem.bats.remove(p.getPlayer());
						}

						FallingBlock fallingblock = null;
						fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.STAINED_CLAY, (byte) ColorConverter.fromString(Rang.getRangfarbe(RangType.SPIELER)).getClayShort());
						fallingblock.setDropItem(false);
						fallingblock.setCustomNameVisible(true);
						fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());

						if(fallingblock != null){
							Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
							bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
							bat.setRemoveWhenFarAway(false);
							bat.setPassenger(fallingblock);
							bat.setLeashHolder(p.getPlayer());

							LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
							LobbySystem.bats.put(p.getPlayer(), bat);
						}

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Ballon", 0, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Ballons.openExtras_Ballons(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.PREMIUM)+" §7Ballon")) {
					if(Rang.isAtLeast(RangType.PREMIUM, uuid)){
						if (Extras.hasItem(uuid, "Lobby-Ballon", 1)) {
							Extras.setActiveItemnr(uuid, "Lobby-Ballon", 1);

							if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
								LobbySystem.fallingblocks.get(p.getPlayer()).remove();
								LobbySystem.fallingblocks.remove(p.getPlayer());
							}

							if(LobbySystem.bats.containsKey(p.getPlayer())){
								LobbySystem.bats.get(p.getPlayer()).remove();
								LobbySystem.bats.remove(p.getPlayer());
							}

							FallingBlock fallingblock = null;
							fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.GOLD_BLOCK, (byte) 0);
							fallingblock.setDropItem(false);
							fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
							fallingblock.setCustomNameVisible(true);

							if(fallingblock != null){
								Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
								bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
								bat.setRemoveWhenFarAway(false);
								bat.setPassenger(fallingblock);
								bat.setLeashHolder(p.getPlayer());

								LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
								LobbySystem.bats.put(p.getPlayer(), bat);
							}

							p.closeInventory();
						} else {
							if (Coins.getCoins(uuid) >= 15000) {
								Extras.setItem(uuid, "Lobby-Ballon", 1, true);
								Coins.removeCoins(uuid, 15000);
								Extras_Ballons.openExtras_Ballons(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.PREMIUMPLUS)+" §7Ballon")) {
					if(Rang.isAtLeast(RangType.PREMIUMPLUS, uuid)){
						if (Extras.hasItem(uuid, "Lobby-Ballon", 2)) {
							Extras.setActiveItemnr(uuid, "Lobby-Ballon", 2);

							if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
								LobbySystem.fallingblocks.get(p.getPlayer()).remove();
								LobbySystem.fallingblocks.remove(p.getPlayer());
							}

							if(LobbySystem.bats.containsKey(p.getPlayer())){
								LobbySystem.bats.get(p.getPlayer()).remove();
								LobbySystem.bats.remove(p.getPlayer());
							}

							FallingBlock fallingblock = null;
							fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.EMERALD_BLOCK, (byte) 0);
							fallingblock.setDropItem(false);
							fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
							fallingblock.setCustomNameVisible(true);

							if(fallingblock != null){
								Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
								bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
								bat.setRemoveWhenFarAway(false);
								bat.setPassenger(fallingblock);
								bat.setLeashHolder(p.getPlayer());

								LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
								LobbySystem.bats.put(p.getPlayer(), bat);
							}

							p.closeInventory();
						} else {
							if (Coins.getCoins(uuid) >= 15000) {
								Extras.setItem(uuid, "Lobby-Ballon", 2, true);
								Coins.removeCoins(uuid, 15000);
								Extras_Ballons.openExtras_Ballons(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.TRAIDIO)+" §7Ballon")) {
					if(Rang.isAtLeast(RangType.TRAIDIO, uuid)){
						if (Extras.hasItem(uuid, "Lobby-Ballon", 3)) {
							Extras.setActiveItemnr(uuid, "Lobby-Ballon", 3);

							if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
								LobbySystem.fallingblocks.get(p.getPlayer()).remove();
								LobbySystem.fallingblocks.remove(p.getPlayer());
							}

							if(LobbySystem.bats.containsKey(p.getPlayer())){
								LobbySystem.bats.get(p.getPlayer()).remove();
								LobbySystem.bats.remove(p.getPlayer());
							}

							FallingBlock fallingblock = null;
							fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.STAINED_CLAY, (byte) ColorConverter.fromString(Rang.getRangfarbe(RangType.TRAIDIO)).getClayShort());
							fallingblock.setDropItem(false);
							fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
							fallingblock.setCustomNameVisible(true);

							if(fallingblock != null){
								Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
								bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
								bat.setRemoveWhenFarAway(false);
								bat.setPassenger(fallingblock);
								bat.setLeashHolder(p.getPlayer());

								LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
								LobbySystem.bats.put(p.getPlayer(), bat);
							}

							p.closeInventory();
						} else {
							if (Coins.getCoins(uuid) >= 15000) {
								Extras.setItem(uuid, "Lobby-Ballon", 3, true);
								Coins.removeCoins(uuid, 15000);
								Extras_Ballons.openExtras_Ballons(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.STREAMER)+"§8/"+Rang.getRangname(RangType.YOUTUBER)+" §7Ballon")) {
					if(Rang.isAtLeast(RangType.STREAMER, uuid)){
						if (Extras.hasItem(uuid, "Lobby-Ballon", 4)) {
							Extras.setActiveItemnr(uuid, "Lobby-Ballon", 4);

							if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
								LobbySystem.fallingblocks.get(p.getPlayer()).remove();
								LobbySystem.fallingblocks.remove(p.getPlayer());
							}

							if(LobbySystem.bats.containsKey(p.getPlayer())){
								LobbySystem.bats.get(p.getPlayer()).remove();
								LobbySystem.bats.remove(p.getPlayer());
							}

							FallingBlock fallingblock = null;
							fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.DRAGON_EGG, (byte) 0);
							fallingblock.setDropItem(false);
							fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
							fallingblock.setCustomNameVisible(true);

							if(fallingblock != null){
								Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
								bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
								bat.setRemoveWhenFarAway(false);
								bat.setPassenger(fallingblock);
								bat.setLeashHolder(p.getPlayer());

								LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
								LobbySystem.bats.put(p.getPlayer(), bat);
							}

							p.closeInventory();
						} else {
							if (Coins.getCoins(uuid) >= 15000) {
								Extras.setItem(uuid, "Lobby-Ballon", 4, true);
								Coins.removeCoins(uuid, 15000);
								Extras_Ballons.openExtras_Ballons(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.BUILDER)+" §7Ballon")) {
					if(Rang.isAtLeast(RangType.BUILDER, uuid)){
						if (Extras.hasItem(uuid, "Lobby-Ballon", 5)) {
							Extras.setActiveItemnr(uuid, "Lobby-Ballon", 5);

							if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
								LobbySystem.fallingblocks.get(p.getPlayer()).remove();
								LobbySystem.fallingblocks.remove(p.getPlayer());
							}

							if(LobbySystem.bats.containsKey(p.getPlayer())){
								LobbySystem.bats.get(p.getPlayer()).remove();
								LobbySystem.bats.remove(p.getPlayer());
							}

							FallingBlock fallingblock = null;
							fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.STAINED_CLAY, (byte) ColorConverter.fromString(Rang.getRangfarbe(RangType.BUILDER)).getClayShort());
							fallingblock.setDropItem(false);
							fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
							fallingblock.setCustomNameVisible(true);

							if(fallingblock != null){
								Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
								bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
								bat.setRemoveWhenFarAway(false);
								bat.setPassenger(fallingblock);
								bat.setLeashHolder(p.getPlayer());

								LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
								LobbySystem.bats.put(p.getPlayer(), bat);
							}

							p.closeInventory();
						} else {
							if (Coins.getCoins(uuid) >= 15000) {
								Extras.setItem(uuid, "Lobby-Ballon", 5, true);
								Coins.removeCoins(uuid, 15000);
								Extras_Ballons.openExtras_Ballons(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.HELFER)+"§8/"+Rang.getRangname(RangType.SUPPORTER)+" §7Ballon")) {
					if(Rang.isAtLeast(RangType.HELFER, uuid)){
						if (Extras.hasItem(uuid, "Lobby-Ballon", 6)) {
							Extras.setActiveItemnr(uuid, "Lobby-Ballon", 6);

							if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
								LobbySystem.fallingblocks.get(p.getPlayer()).remove();
								LobbySystem.fallingblocks.remove(p.getPlayer());
							}

							if(LobbySystem.bats.containsKey(p.getPlayer())){
								LobbySystem.bats.get(p.getPlayer()).remove();
								LobbySystem.bats.remove(p.getPlayer());
							}

							FallingBlock fallingblock = null;
							fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.STAINED_CLAY, (byte) ColorConverter.fromString(Rang.getRangfarbe(RangType.SUPPORTER)).getClayShort());
							fallingblock.setDropItem(false);
							fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
							fallingblock.setCustomNameVisible(true);

							if(fallingblock != null){
								Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
								bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
								bat.setRemoveWhenFarAway(false);
								bat.setPassenger(fallingblock);
								bat.setLeashHolder(p.getPlayer());

								LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
								LobbySystem.bats.put(p.getPlayer(), bat);
							}

							p.closeInventory();
						} else {
							if (Coins.getCoins(uuid) >= 15000) {
								Extras.setItem(uuid, "Lobby-Ballon", 6, true);
								Coins.removeCoins(uuid, 15000);
								Extras_Ballons.openExtras_Ballons(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.MODERATOR)+"§8/"+Rang.getRangname(RangType.SRMODERATOR)+" §7Ballon")) {
					if(Rang.isAtLeast(RangType.MODERATOR, uuid)){
						if (Extras.hasItem(uuid, "Lobby-Ballon", 7)) {
							Extras.setActiveItemnr(uuid, "Lobby-Ballon", 7);

							if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
								LobbySystem.fallingblocks.get(p.getPlayer()).remove();
								LobbySystem.fallingblocks.remove(p.getPlayer());
							}

							if(LobbySystem.bats.containsKey(p.getPlayer())){
								LobbySystem.bats.get(p.getPlayer()).remove();
								LobbySystem.bats.remove(p.getPlayer());
							}

							FallingBlock fallingblock = null;
							fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.STAINED_CLAY, (byte) ColorConverter.fromString(Rang.getRangfarbe(RangType.MODERATOR)).getClayShort());
							fallingblock.setDropItem(false);
							fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
							fallingblock.setCustomNameVisible(true);

							if(fallingblock != null){
								Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
								bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
								bat.setRemoveWhenFarAway(false);
								bat.setPassenger(fallingblock);
								bat.setLeashHolder(p.getPlayer());

								LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
								LobbySystem.bats.put(p.getPlayer(), bat);
							}

							p.closeInventory();
						} else {
							if (Coins.getCoins(uuid) >= 15000) {
								Extras.setItem(uuid, "Lobby-Ballon", 7, true);
								Coins.removeCoins(uuid, 15000);
								Extras_Ballons.openExtras_Ballons(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.CONTENT)+"§8/"+Rang.getRangname(RangType.DEVELOPER)+" §7Ballon")) {
					if(Rang.isAtLeast(RangType.CONTENT, uuid)){
						if (Extras.hasItem(uuid, "Lobby-Ballon", 8)) {
							Extras.setActiveItemnr(uuid, "Lobby-Ballon", 8);

							if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
								LobbySystem.fallingblocks.get(p.getPlayer()).remove();
								LobbySystem.fallingblocks.remove(p.getPlayer());
							}

							if(LobbySystem.bats.containsKey(p.getPlayer())){
								LobbySystem.bats.get(p.getPlayer()).remove();
								LobbySystem.bats.remove(p.getPlayer());
							}

							FallingBlock fallingblock = null;
							fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.DIAMOND_BLOCK, (byte) 0);
							fallingblock.setDropItem(false);
							fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
							fallingblock.setCustomNameVisible(true);

							if(fallingblock != null){
								Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
								bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
								bat.setRemoveWhenFarAway(false);
								bat.setPassenger(fallingblock);
								bat.setLeashHolder(p.getPlayer());

								LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
								LobbySystem.bats.put(p.getPlayer(), bat);
							}

							p.closeInventory();
						} else {
							if (Coins.getCoins(uuid) >= 15000) {
								Extras.setItem(uuid, "Lobby-Ballon", 8, true);
								Coins.removeCoins(uuid, 15000);
								Extras_Ballons.openExtras_Ballons(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.ADMINISTRATOR)+"§8/"+Rang.getRangname(RangType.OWNER)+" §7Ballon")) {
					if(Rang.isAtLeast(RangType.ADMINISTRATOR, uuid)){
						if (Extras.hasItem(uuid, "Lobby-Ballon", 9)) {
							Extras.setActiveItemnr(uuid, "Lobby-Ballon", 9);

							if(LobbySystem.fallingblocks.containsKey(p.getPlayer())){
								LobbySystem.fallingblocks.get(p.getPlayer()).remove();
								LobbySystem.fallingblocks.remove(p.getPlayer());
							}

							if(LobbySystem.bats.containsKey(p.getPlayer())){
								LobbySystem.bats.get(p.getPlayer()).remove();
								LobbySystem.bats.remove(p.getPlayer());
							}

							FallingBlock fallingblock = null;
							fallingblock = p.getPlayer().getWorld().spawnFallingBlock(p.getPlayer().getLocation().add(0, 2, 0), Material.REDSTONE_BLOCK, (byte) 0);
							fallingblock.setDropItem(false);
							fallingblock.setCustomName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
							fallingblock.setCustomNameVisible(true);

							if(fallingblock != null){
								Bat bat = (Bat) p.getPlayer().getWorld().spawnEntity(p.getPlayer().getLocation().add(0, 1, 0), EntityType.BAT);
								bat.addPotionEffect(new PotionEffect(PotionEffectType.INVISIBILITY, Integer.MAX_VALUE, 255));
								bat.setRemoveWhenFarAway(false);
								bat.setPassenger(fallingblock);
								bat.setLeashHolder(p.getPlayer());

								LobbySystem.fallingblocks.put(p.getPlayer(), fallingblock);
								LobbySystem.bats.put(p.getPlayer(), bat);
							}

							p.closeInventory();
						} else {
							if (Coins.getCoins(uuid) >= 15000) {
								Extras.setItem(uuid, "Lobby-Ballon", 9, true);
								Coins.removeCoins(uuid, 15000);
								Extras_Ballons.openExtras_Ballons(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §eBanner")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Extras_Menü.openExtras_Menü(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBanner ausziehen")) {
					p.closeInventory();
					p.getInventory().setHelmet(null);
					p.sendMessage(LobbySystem.prefix + "§7Du hast deinen §eBanner §7ausgezogen!");
					Extras.setActiveItemnr(uuid, "Lobby-Köpfe", -1);
					Extras.setActiveItemnr(uuid, "Lobby-Banner", -1);
					Extras.setActiveItemnr(uuid, "Lobby-Premium-PartyHut", -1);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§ePirat")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 0)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 0);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-Banner", 0, true);
							Coins.removeCoins(uuid, 10000);
							Extras_Banner.openExtras_Banner(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eDeutschland")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 1)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 1);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-Banner", 1, true);
							Coins.removeCoins(uuid, 10000);
							Extras_Banner.openExtras_Banner(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eGhast")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 2)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 2);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-Banner", 2, true);
							Coins.removeCoins(uuid, 10000);
							Extras_Banner.openExtras_Banner(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eMojang")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 3)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 3);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-Banner", 3, true);
							Coins.removeCoins(uuid, 10000);
							Extras_Banner.openExtras_Banner(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eTintenfisch")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 4)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 4);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-Banner", 4, true);
							Coins.removeCoins(uuid, 10000);
							Extras_Banner.openExtras_Banner(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eCreeper")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 5)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 5);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-Banner", 5, true);
							Coins.removeCoins(uuid, 10000);
							Extras_Banner.openExtras_Banner(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.SPIELER)+" §7Banner")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 6)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 6);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 500) {
							Extras.setItem(uuid, "Lobby-Banner", 6, true);
							Coins.removeCoins(uuid, 500);
							Extras_Banner.openExtras_Banner(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.PREMIUM)+" §7Banner")) {
						if (Extras.hasItem(uuid, "Lobby-Banner", 7)) {
							Extras.setActiveItemnr(uuid, "Lobby-Banner", 7);
							ItemStack item = e.getCurrentItem();
							ItemMeta itemmeta = item.getItemMeta();
							itemmeta.setLore(null);
							item.setItemMeta(itemmeta);
							p.getInventory().setHelmet(item);
							p.closeInventory();
						} else {
							if (Rang.isAtLeast(RangType.PREMIUM, uuid)) {
								if (Coins.getCoins(uuid) >= 500) {
									Extras.setItem(uuid, "Lobby-Banner", 7, true);
									Coins.removeCoins(uuid, 500);
									Extras_Banner.openExtras_Banner(p);
								} else {
									p.closeInventory();
									p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
								}
							}
						}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.PREMIUMPLUS)+" §7Banner")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 8)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 8);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Rang.isAtLeast(RangType.PREMIUMPLUS, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Banner", 8, true);
								Coins.removeCoins(uuid, 500);
								Extras_Banner.openExtras_Banner(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.TRAIDIO)+" §7Banner")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 9)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 9);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Rang.isAtLeast(RangType.TRAIDIO, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Banner", 9, true);
								Coins.removeCoins(uuid, 500);
								Extras_Banner.openExtras_Banner(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.STREAMER)+"§8/"+Rang.getRangname(RangType.YOUTUBER)+" §7Banner")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 10)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 10);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Rang.isAtLeast(RangType.STREAMER, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Banner", 10, true);
								Coins.removeCoins(uuid, 500);
								Extras_Banner.openExtras_Banner(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.BUILDER)+" §7Banner")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 11)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 11);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Rang.isAtLeast(RangType.BUILDER, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Banner", 11, true);
								Coins.removeCoins(uuid, 500);
								Extras_Banner.openExtras_Banner(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.HELFER)+"§8/"+Rang.getRangname(RangType.SUPPORTER)+" §7Banner")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 12)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 12);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Rang.isAtLeast(RangType.HELFER, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Banner", 12, true);
								Coins.removeCoins(uuid, 500);
								Extras_Banner.openExtras_Banner(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.MODERATOR)+"§8/"+Rang.getRangname(RangType.SRMODERATOR)+" §7Banner")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 13)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 13);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Rang.isAtLeast(RangType.MODERATOR, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Banner", 13, true);
								Coins.removeCoins(uuid, 500);
								Extras_Banner.openExtras_Banner(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.CONTENT)+"§8/"+Rang.getRangname(RangType.DEVELOPER)+" §7Banner")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 14)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 14);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Rang.isAtLeast(RangType.CONTENT, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Banner", 14, true);
								Coins.removeCoins(uuid, 500);
								Extras_Banner.openExtras_Banner(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.ADMINISTRATOR)+"§8/"+Rang.getRangname(RangType.OWNER)+" §7Banner")) {
					if (Extras.hasItem(uuid, "Lobby-Banner", 15)) {
						Extras.setActiveItemnr(uuid, "Lobby-Banner", 15);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setHelmet(item);
						p.closeInventory();
					} else {
						if (Rang.isAtLeast(RangType.ADMINISTRATOR, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Banner", 15, true);
								Coins.removeCoins(uuid, 500);
								Extras_Banner.openExtras_Banner(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						}else{
							p.sendMessage(LobbySystem.prefix
									+ "§7Dieser §eBanner §7ist nur für "+Rang.getRangname(RangType.ADMINISTRATOR)+" §7und §chöherrangige §7Spieler!");
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §5Schuhe")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Extras_Menü.openExtras_Menü(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSchuhe ausziehen")) {
					p.closeInventory();
					p.getInventory().setBoots(null);
					p.sendMessage(LobbySystem.prefix + "§7Du hast deine §eSchuhe §7ausgezogen!");

					if (p.getActivePotionEffects() != null) {
						p.removePotionEffect(PotionEffectType.JUMP);
						p.removePotionEffect(PotionEffectType.SPEED);
					}

					Extras.setActiveItemnr(uuid, "Lobby-Schuhe", -1);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aLederstiefel")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 0)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 0);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Coins.getCoins(uuid) >= 500) {
							Extras.setItem(uuid, "Lobby-Schuhe", 0, true);
							Coins.removeCoins(uuid, 500);
							Extras_Schuhe.openExtras_Schuhe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aKettenstiefel")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 1)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 1);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Coins.getCoins(uuid) >= 500) {
							Extras.setItem(uuid, "Lobby-Schuhe", 1, true);
							Coins.removeCoins(uuid, 500);
							Extras_Schuhe.openExtras_Schuhe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aSpeedschuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 2)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 2);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
				  		p.addPotionEffect(new PotionEffect(PotionEffectType.SPEED, Integer.MAX_VALUE, 5));
					} else {
						if (Coins.getCoins(uuid) >= 500) {
							Extras.setItem(uuid, "Lobby-Schuhe", 2, true);
							Coins.removeCoins(uuid, 500);
							Extras_Schuhe.openExtras_Schuhe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aJumpschuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 3)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 3);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
				  		p.addPotionEffect(new PotionEffect(PotionEffectType.JUMP, Integer.MAX_VALUE, 5));
					} else {
						if (Coins.getCoins(uuid) >= 500) {
							Extras.setItem(uuid, "Lobby-Schuhe", 3, true);
							Coins.removeCoins(uuid, 500);
							Extras_Schuhe.openExtras_Schuhe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.SPIELER)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 4)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 4);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Coins.getCoins(uuid) >= 500) {
							Extras.setItem(uuid, "Lobby-Schuhe", 4, true);
							Coins.removeCoins(uuid, 500);
							Extras_Schuhe.openExtras_Schuhe(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.PREMIUM)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 5)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 5);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Rang.isAtLeast(RangType.PREMIUM, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Schuhe", 5, true);
								Coins.removeCoins(uuid, 500);
								Extras_Schuhe.openExtras_Schuhe(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						} else {
							p.sendMessage(LobbySystem.prefix
									+ "§7Diese §5Schuhe §7sind nur für "+Rang.getRangname(RangType.PREMIUM)+" §7und §chöherrangige §7Spieler!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase(Rang.getRangname(RangType.PREMIUMPLUS)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 6)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 6);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Rang.isAtLeast(RangType.PREMIUMPLUS, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Schuhe", 6, true);
								Coins.removeCoins(uuid, 500);
								Extras_Schuhe.openExtras_Schuhe(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						} else {
							p.sendMessage(LobbySystem.prefix
									+ "§7Diese §5Schuhe §7sind nur für "+Rang.getRangname(RangType.PREMIUMPLUS)+" §7und §chöherrangige §7Spieler!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.TRAIDIO)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 7)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 7);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Rang.isAtLeast(RangType.TRAIDIO, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Schuhe", 7, true);
								Coins.removeCoins(uuid, 500);
								Extras_Schuhe.openExtras_Schuhe(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						} else {
							p.sendMessage(LobbySystem.prefix
									+ "§7Diese §5Schuhe §7sind nur für "+Rang.getRangname(RangType.TRAIDIO)+" §7und §chöherrangige §7Spieler!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase(Rang.getRangname(RangType.STREAMER)+"§8/"+Rang.getRangname(RangType.YOUTUBER)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 8)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 8);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Rang.isAtLeast(RangType.STREAMER, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Schuhe", 8, true);
								Coins.removeCoins(uuid, 500);
								Extras_Schuhe.openExtras_Schuhe(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						} else {
							p.sendMessage(LobbySystem.prefix
									+ "§7Diese §5Schuhe §7sind nur für "+Rang.getRangname(RangType.STREAMER)+"§8/"+Rang.getRangname(RangType.YOUTUBER)+" §7und §chöherrangige §7Spieler!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase(Rang.getRangname(RangType.BUILDER)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 9)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 9);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Rang.isAtLeast(RangType.BUILDER, uuid)) {
							if (Coins.getCoins(uuid) >= 500) {
								Extras.setItem(uuid, "Lobby-Schuhe", 9, true);
								Coins.removeCoins(uuid, 500);
								Extras_Schuhe.openExtras_Schuhe(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						} else {
							p.sendMessage(LobbySystem.prefix
									+ "§7Diese §5Schuhe §7sind nur für "+Rang.getRangname(RangType.BUILDER)+" §7und §chöherrangige §7Spieler!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase(Rang.getRangname(RangType.HELFER)+"§8/"+Rang.getRangname(RangType.SUPPORTER)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 10)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 10);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Rang.isAtLeast(RangType.HELFER, uuid)) {
							if (Coins.getCoins(uuid) >= 100) {
								Extras.setItem(uuid, "Lobby-Schuhe", 10, true);
								Coins.removeCoins(uuid, 100);
								Extras_Schuhe.openExtras_Schuhe(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						} else {
							p.sendMessage(LobbySystem.prefix
									+ "§7Diese §5Schuhe §7sind nur für "+Rang.getRangname(RangType.HELFER)+" §7und §chöherrangige §7Spieler!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase(Rang.getRangname(RangType.MODERATOR)+"§8/"+Rang.getRangname(RangType.SRMODERATOR)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 11)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 11);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Rang.isAtLeast(RangType.MODERATOR, uuid)) {
							if (Coins.getCoins(uuid) >= 100) {
								Extras.setItem(uuid, "Lobby-Schuhe", 11, true);
								Coins.removeCoins(uuid, 100);
								Extras_Schuhe.openExtras_Schuhe(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						} else {
							p.sendMessage(LobbySystem.prefix
									+ "§7Diese §5Schuhe §7sind nur für "+Rang.getRangname(RangType.MODERATOR)+" §7und §chöherrangige §7Spieler!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase(Rang.getRangname(RangType.CONTENT)+"§8/"+Rang.getRangname(RangType.DEVELOPER)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 12)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 12);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Rang.isAtLeast(RangType.CONTENT, uuid)) {
							if (Coins.getCoins(uuid) >= 100) {
								Extras.setItem(uuid, "Lobby-Schuhe", 12, true);
								Coins.removeCoins(uuid, 100);
								Extras_Schuhe.openExtras_Schuhe(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						} else {
							p.sendMessage(LobbySystem.prefix
									+ "§7Diese §5Schuhe §7sind nur für "+Rang.getRangname(RangType.CONTENT)+"§8/"+Rang.getRangname(RangType.DEVELOPER)+" §7und §chöherrangige §7Spieler!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase(Rang.getRangname(RangType.ADMINISTRATOR)+"§8/"+Rang.getRangname(RangType.OWNER)+" §7Schuhe")) {
					if (Extras.hasItem(uuid, "Lobby-Schuhe", 13)) {
						Extras.setActiveItemnr(uuid, "Lobby-Schuhe", 13);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setBoots(item);
						p.closeInventory();
						if (p.getActivePotionEffects() != null) {
							p.removePotionEffect(PotionEffectType.JUMP);
							p.removePotionEffect(PotionEffectType.SPEED);
						}
					} else {
						if (Rang.isAtLeast(RangType.ADMINISTRATOR, uuid)) {
							if (Coins.getCoins(uuid) >= 100) {
								Extras.setItem(uuid, "Lobby-Schuhe", 13, true);
								Coins.removeCoins(uuid, 100);
								Extras_Schuhe.openExtras_Schuhe(p);
							} else {
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							}
						} else {
							p.sendMessage(
									LobbySystem.prefix + "§7Diese §5Schuhe §7sind nur für die §4Serverleitung§7!");
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §fHaustiere")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Extras_Menü.openExtras_Menü(p);
				}

				if(e.getCurrentItem().getItemMeta().getDisplayName().startsWith("§a") && Extras.getActiveItemnr(uuid, "Lobby-Haustiere") != -1) {
					if(LobbySystem.Pets.containsKey(p.getName())) {
						LobbySystem.Pets.get(p.getName()).getEntity().remove();
						LobbySystem.Pets.remove(p.getName());
					}
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHaustier entfernen")) {
					p.closeInventory();
					p.sendMessage(LobbySystem.prefix + "§7Du hast dein §eHaustier §7entfernt!");

					if(LobbySystem.Pets.containsKey(p.getName())) {
						LobbySystem.Pets.get(p.getName()).getEntity().remove();
						LobbySystem.Pets.remove(p.getName());
					}
					Extras.setActiveItemnr(uuid, "Lobby-Haustiere", -1);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aSchaf")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 0)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 0);

						Haustier pet = MySQL.getHaustier(p, EntityType.SHEEP);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 0, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.SHEEP, "AAAAAAAAAAAAAAAAA");
							MySQL.setExtra1(p.getUUID(), EntityType.SHEEP, DyeColor.WHITE.toString());
							MySQL.setExtra2(p.getUUID(), EntityType.SHEEP, "0");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aSchwein")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 1)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 1);

						Haustier pet = MySQL.getHaustier(p, EntityType.PIG);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 1, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.PIG, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aKatze")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 2)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 2);

						Haustier pet = MySQL.getHaustier(p, EntityType.OCELOT);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 2, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.OCELOT, "AAAAAAAAAAAAAAAAA");
							MySQL.setExtra1(p.getUUID(), EntityType.OCELOT, "0");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aKuh")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 3)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 3);

						Haustier pet = MySQL.getHaustier(p, EntityType.COW);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 3, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.COW, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aHase")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 4)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 4);

						Haustier pet = MySQL.getHaustier(p, EntityType.RABBIT);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 4, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.RABBIT, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aPilzkuh")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 5)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 5);

						Haustier pet = MySQL.getHaustier(p, EntityType.MUSHROOM_COW);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 5, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.MUSHROOM_COW, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aHund")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 6)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 6);

						Haustier pet = MySQL.getHaustier(p, EntityType.WOLF);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 6, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.WOLF, "AAAAAAAAAAAAAAAAA");
							MySQL.setExtra1(p.getUUID(), EntityType.WOLF, "0");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aSchneemann")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 7)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 7);

						Haustier pet = MySQL.getHaustier(p, EntityType.SNOWMAN);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 7, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.SNOWMAN, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aCreeper")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 8)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 8);

						Haustier pet = MySQL.getHaustier(p, EntityType.CREEPER);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 8, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.CREEPER, "AAAAAAAAAAAAAAAAA");
							MySQL.setExtra1(p.getUUID(), EntityType.CREEPER, "0");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aSkelett")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 9)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 9);

						Haustier pet = MySQL.getHaustier(p, EntityType.SKELETON);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 9, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.SKELETON, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aHexe")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 10)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 10);

						Haustier pet = MySQL.getHaustier(p, EntityType.WITCH);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 10, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.WITCH, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aSpinne")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 11)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 11);

						Haustier pet = MySQL.getHaustier(p, EntityType.SPIDER);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 11, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.SPIDER, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aZombie")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 12)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 12);

						Haustier pet = MySQL.getHaustier(p, EntityType.ZOMBIE);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 12, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.ZOMBIE, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aHuhn")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 13)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 13);

						Haustier pet = MySQL.getHaustier(p, EntityType.CHICKEN);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 13, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.CHICKEN, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aWächter")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 14)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 14);

						Haustier pet = MySQL.getHaustier(p, EntityType.GUARDIAN);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 14, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.GUARDIAN, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aPferd")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 15)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 15);

						Haustier pet = MySQL.getHaustier(p, EntityType.HORSE);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Haustiere", 15, true);
							Coins.removeCoins(uuid, 15000);
							MySQL.addHaustier(p.getUUID(), EntityType.HORSE, "AAAAAAAAAAAAAAAAA");
							MySQL.setExtra1(p.getUUID(), EntityType.HORSE, Variant.HORSE.toString());

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aEndermilbe")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 16)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 16);

						Haustier pet = MySQL.getHaustier(p, EntityType.ENDERMITE);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "Lobby-Haustiere", 16, true);
							Coins.removeCoins(uuid, 7500);
							MySQL.addHaustier(p.getUUID(), EntityType.ENDERMITE, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aEnderman")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 17)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 17);

						Haustier pet = MySQL.getHaustier(p, EntityType.ENDERMAN);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "Lobby-Haustiere", 17, true);
							Coins.removeCoins(uuid, 7500);
							MySQL.addHaustier(p.getUUID(), EntityType.ENDERMAN, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aLohe")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 18)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 18);

						Haustier pet = MySQL.getHaustier(p, EntityType.BLAZE);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "Lobby-Haustiere", 18, true);
							Coins.removeCoins(uuid, 7500);
							MySQL.addHaustier(p.getUUID(), EntityType.BLAZE, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aFledermaus")) {
					if (Extras.hasItem(uuid, "Lobby-Haustiere", 19)) {
						Extras.setActiveItemnr(uuid, "Lobby-Haustiere", 19);

						Haustier pet = MySQL.getHaustier(p, EntityType.BAT);
						pet.spawn();

						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 7500) {
							Extras.setItem(uuid, "Lobby-Haustiere", 19, true);
							Coins.removeCoins(uuid, 7500);
							MySQL.addHaustier(p.getUUID(), EntityType.BAT, "AAAAAAAAAAAAAAAAA");

							Methoden.updateScoreboard(p);
							Extras_Haustiere.openExtras_Haustiere(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}
			}else if (e.getClickedInventory().getTitle().startsWith(Rang.getRangfarbe(Rang.getRang(p.getUUID())) + p.getName() + " §8● §f")) {
				e.setCancelled(true);

				Haustier h = LobbySystem.Pets.get(p.getName());

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHaustier entfernen")) {
					p.closeInventory();
					p.sendMessage(LobbySystem.prefix + "§7Du hast dein §eHaustier §7entfernt!");

					if(LobbySystem.Pets.containsKey(p.getName())) {
						LobbySystem.Pets.get(p.getName()).getEntity().remove();
						LobbySystem.Pets.remove(p.getName());
					}
					Extras.setActiveItemnr(uuid, "Lobby-Haustiere", -1);
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§3Nickname")) {
					if(h.isNameBought()) {
						Bukkit.getScheduler().runTaskAsynchronously(LobbySystem.plugin, new Runnable() {
							@Override
							public void run() {
								AnvilGUI gui = new AnvilGUI(p, new AnvilGUI.AnvilClickEventHandler() {
									@Override
									public void onAnvilClick(AnvilClickEvent event) {
										if(event.getSlot() == AnvilGUI.AnvilSlot.OUTPUT){
											event.setWillClose(true);
											event.setWillDestroy(true);
											String nick = event.getName();
											if(nick.length() >= 3 && nick.length() <= 16){
												if(!WortFilter.getWörter().contains(nick)) {
													for(char c : nick.toCharArray()) {
														if(c != 'a' && c != 'b' && c != 'c' && c != 'd' && c != 'e' && c != 'f' && c != 'g' && c != 'h' && c != 'i' && c != 'j' && c != 'k' && c != 'l' && c != 'm'
															 && c != 'n' && c != 'o' && c != 'p' && c != 'q' && c != 'r' && c != 's' && c != 't' && c != 'u' && c != 'v' && c != 'w' && c != 'x' && c != 'y' && c != 'z'
															 && c != 'A' && c != 'B' && c != 'C' && c != 'D' && c != 'E' && c != 'F' && c != 'G' && c != 'H' && c != 'I' && c != 'J' && c != 'K' && c != 'L' && c != 'M'
															 && c != 'N' && c != 'O' && c != 'P' && c != 'Q' && c != 'R' && c != 'S' && c != 'T' && c != 'U' && c != 'V' && c != 'W' && c != 'X' && c != 'Y' && c != 'Z'
															 && c != '0' && c != '1' && c != '2' && c != '3' && c != '4' && c != '5' && c != '6' && c != '7' && c != '8' && c != '9' && c != '0' && c != '_') {
															p.sendMessage(API.prefix + "§cDu verwendest nicht zugelassene Symbole!");
															return;
														}
													}
													h.setLocaleName(h.getName().substring(0, 2)+nick);
													MySQL.setName(uuid, h.getEntity().getType(), h.getName());
													p.sendMessage(API.prefix + "§7Der Nickname deines Haustieres wurde auf "+h.getName()+" §7gesetzt!");
												}else {
													p.sendMessage(API.prefix + "§cVerwende keine unangemessene Sprache!");
												}
											}else{
												p.sendMessage(API.prefix + "§cDu darfst nur 3-16 Zeichen verwenden.");
											}
										}else{
											event.setWillClose(false);
											event.setWillDestroy(false);
										}
									}
								});
								gui.setSlot(AnvilGUI.AnvilSlot.INPUT_LEFT, new ItemBuilder(Material.NAME_TAG).displayName(h.getName().substring(2, h.getName().length())).build());
								gui.open();
							}
						});
					}else {
						if (Coins.getCoins(uuid) >= 15000) {
							MySQL.buyHaustierExtra(uuid, h.getEntity().getType(), 0);
							h.buyLocale(0);
							h.setLocaleName(Rang.getRangfarbe(Rang.getRang(p.getUUID()))+p.getName());
							MySQL.setName(uuid, h.getEntity().getType(), h.getName());
							Coins.removeCoins(uuid, 15000);

							Methoden.updateScoreboard(p);
							PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§3Nickfarbe")) {
					if(h.isColorBought()) {
						Bukkit.getScheduler().runTaskAsynchronously(LobbySystem.plugin, new Runnable() {
							@Override
							public void run() {
								AnvilGUI gui = new AnvilGUI(p, new AnvilGUI.AnvilClickEventHandler() {
									@Override
									public void onAnvilClick(AnvilClickEvent event) {
										if(event.getSlot() == AnvilGUI.AnvilSlot.OUTPUT){
											event.setWillClose(true);
											event.setWillDestroy(true);
											String nick = event.getName();
											if(nick.length() == 2 && nick.startsWith("&")){
												char c = nick.toCharArray()[1];
												if(c != 'a' && c != 'b' && c != 'c' && c != 'd' && c != 'e' && c != 'f' && c != 'g' && c != 'h' && c != 'i' && c != 'j' && c != 'k' && c != 'l' && c != 'm'
													 && c != 'n' && c != 'o' && c != 'p' && c != 'q' && c != 'r' && c != 's' && c != 't' && c != 'u' && c != 'v' && c != 'w' && c != 'x' && c != 'y' && c != 'z'
													 && c != 'A' && c != 'B' && c != 'C' && c != 'D' && c != 'E' && c != 'F' && c != 'G' && c != 'H' && c != 'I' && c != 'J' && c != 'K' && c != 'L' && c != 'M'
													 && c != 'N' && c != 'O' && c != 'P' && c != 'Q' && c != 'R' && c != 'S' && c != 'T' && c != 'U' && c != 'V' && c != 'W' && c != 'X' && c != 'Y' && c != 'Z'
													 && c != '0' && c != '1' && c != '2' && c != '3' && c != '4' && c != '5' && c != '6' && c != '7' && c != '8' && c != '9' && c != '0') {
													p.sendMessage(API.prefix + "§cDu verwendest nicht zugelassene Symbole!");
													return;
												}
												nick = nick.replace('&', '§');
												h.setLocaleName(nick+h.getName().substring(2, h.getName().length()));
												MySQL.setName(uuid, h.getEntity().getType(), h.getName());
												p.sendMessage(API.prefix + "§7Der Nickname deines Haustieres wurde auf "+h.getName()+" §7gesetzt!");
											}else{
												p.sendMessage(API.prefix + "§cVerwende &Farbcode.");
											}
										}else{
											event.setWillClose(false);
											event.setWillDestroy(false);
										}
									}
								});
								gui.setSlot(AnvilGUI.AnvilSlot.INPUT_LEFT, new ItemBuilder(Material.PAPER).displayName(h.getName().substring(0, 2).replace('§', '&')).build());
								gui.open();
							}
						});
					}else {
						if (Coins.getCoins(uuid) >= 2500) {
							MySQL.buyHaustierExtra(uuid, h.getEntity().getType(), 1);
							h.buyLocale(1);
							Coins.removeCoins(uuid, 2500);

							Methoden.updateScoreboard(p);
							PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§3Größe")) {
					if(h.isBabyBought()) {
						h.setLocaleAdult(!h.isAdult());
						MySQL.setAdult(uuid, h.getEntity().getType(), h.isAdult());

						PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
					}else {
						if (Coins.getCoins(uuid) >= 2500) {
							MySQL.buyHaustierExtra(uuid, h.getEntity().getType(), 2);
							h.buyLocale(2);
							Coins.removeCoins(uuid, 2500);

							Methoden.updateScoreboard(p);
							PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§3Farbe")) {
					if(h.isX1Bought()) {
						DyeColor newcolor = null;
						DyeColor[] colors = DyeColor.values();
						int i = 0;
						for(DyeColor color : colors) {
							if(color.equals(DyeColor.valueOf(h.getX1()))) {
								if(i+2 > colors.length) {
									newcolor = colors[0];
								}else {
									newcolor = colors[i+1];
								}
								break;
							}
							i++;
						}
						h.setLocaleX1(newcolor.toString());
						MySQL.setExtra1(uuid, h.getEntity().getType(), h.getX1());

						PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
					}else {
						if (Coins.getCoins(uuid) >= 2500) {
							MySQL.buyHaustierExtra(uuid, h.getEntity().getType(), 3);
							h.buyLocale(3);
							Coins.removeCoins(uuid, 2500);

							Methoden.updateScoreboard(p);
							PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§3Wolle")) {
					if(h.isX2Bought()) {
						int i = Integer.parseInt(h.getX2()) == 1 ? 0 : 1;
						h.setLocaleX2(i+"");
						MySQL.setExtra2(uuid, h.getEntity().getType(), i+"");

						PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
					}else {
						if (Coins.getCoins(uuid) >= 2500) {
							MySQL.buyHaustierExtra(uuid, h.getEntity().getType(), 4);
							h.buyLocale(4);
							Coins.removeCoins(uuid, 2500);

							Methoden.updateScoreboard(p);
							PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§3Form")) {
					if(h.isX1Bought()) {
						int i = Integer.parseInt(h.getX1()) == 1 ? 0 : 1;
						h.setLocaleX1(i+"");
						MySQL.setExtra1(uuid, h.getEntity().getType(), i+"");

						PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
					}else {
						if (Coins.getCoins(uuid) >= 2500) {
							MySQL.buyHaustierExtra(uuid, h.getEntity().getType(), 3);
							h.buyLocale(3);
							Coins.removeCoins(uuid, 2500);

							Methoden.updateScoreboard(p);
							PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§3Variante")) {
					if(h.isX1Bought()) {
						Variant newvar = null;
						Variant[] vars = Variant.values();
						int i = 0;
						for(Variant var : vars) {
							if(var.equals(Variant.valueOf(h.getX1()))) {
								if(i+2 > vars.length) {
									newvar = vars[0];
								}else {
									newvar = vars[i+1];
								}
								break;
							}
							i++;
						}
						h.setLocaleX1(newvar.toString());
						MySQL.setExtra1(uuid, h.getEntity().getType(), h.getX1());

						PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
					}else {
						if (Coins.getCoins(uuid) >= 2500) {
							MySQL.buyHaustierExtra(uuid, h.getEntity().getType(), 3);
							h.buyLocale(3);
							Coins.removeCoins(uuid, 2500);

							Methoden.updateScoreboard(p);
							PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§3Tragen")) {
					if(h.isCarryBought()) {
						p.closeInventory();
						p.setPassenger(h.getEntity());
					}else {
						if (Coins.getCoins(uuid) >= 1000) {
							MySQL.buyHaustierExtra(uuid, h.getEntity().getType(), 5);
							h.buyLocale(5);
							Coins.removeCoins(uuid, 1000);

							Methoden.updateScoreboard(p);
							PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§3Reiten")) {
					if(h.isCarryBought()) {
						p.closeInventory();
						h.getEntity().setPassenger(p.getPlayer());
					}else {
						if (Coins.getCoins(uuid) >= 1000) {
							MySQL.buyHaustierExtra(uuid, h.getEntity().getType(), 6);
							h.buyLocale(6);
							Coins.removeCoins(uuid, 1000);

							Methoden.updateScoreboard(p);
							PlayerInteractEntityListener.openPetSetting(p, e.getClickedInventory().getTitle().substring(9+p.getName().length(), e.getClickedInventory().getTitle().length()), h.getEntity().getType());
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §eSchuss-Effekte")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Extras_Menü.openExtras_Menü(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§cSchuss-Effekte deaktivieren")) {
					Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", -1);
					p.closeInventory();
					p.sendMessage(LobbySystem.prefix + "§7Die §eSchuss-Effekte §7wurden §cdeaktiviert§7!");
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eMagie")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 0)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 0);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 0, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eFarbenfroh")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 1)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 1);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 1, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§eFreundlicher Dorfbewohner")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 2)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 2);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 2, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eBöser Dorfbewohner")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 3)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 3);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 3, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eWolken")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 4)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 4);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 4, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eZauberei")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 5)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 5);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 5, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eLiebe")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 6)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 6);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 6, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eLava")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 7)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 7);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 7, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eMusik")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 8)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 8);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 8, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eFeuer")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 9)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 9);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 9, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eZaubertrank")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 10)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 10);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 10, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eFeuerwerk")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 11)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 11);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 11, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eRauch")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 12)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 12);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 12, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eVerzaubert")) {
					if (Extras.hasItem(uuid, "Lobby-SchussEffekte", 13)) {
						Extras.setActiveItemnr(uuid, "Lobby-SchussEffekte", 13);
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§aSchuss-Effekt §8● §e"
								+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7wurde §aaktiviert§7!");
					} else {
						if (Coins.getCoins(uuid) >= 10000) {
							Extras.setItem(uuid, "Lobby-SchussEffekte", 13, true);
							Coins.removeCoins(uuid, 10000);
							Extras_SchussEffekte.openExtras_SchussEffekte(p);
							p.sendMessage(LobbySystem.prefix + "§7Du hast den §aSchuss-Effekt §8● §e"
									+ e.getCurrentItem().getItemMeta().getDisplayName() + " §7erfolgreich gekauft!");
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §dGadgets")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Extras_Menü.openExtras_Menü(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §9Spezial")) {
					Extras_Gadgets.openExtras_Gadgets_Special(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §eGadgets")) {
					Extras_Gadgets.openExtras_Gadgets(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cVulkan")) {
					if (Extras.hasItem(uuid, "Lobby-Gadgets", 0)) {
						Extras.setActiveItemnr(uuid, "Lobby-Gadgets", 0);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setItem(4, item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 25000) {
							Extras.setItem(uuid, "Lobby-Gadgets", 0, true);
							Coins.removeCoins(uuid, 25000);
							Extras_Gadgets.openExtras_Gadgets(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aPartikelwerfer")) {
					if (Extras.hasItem(uuid, "Lobby-Gadgets", 1)) {
						Extras.setActiveItemnr(uuid, "Lobby-Gadgets", 1);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setItem(4, item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 25000) {
							Extras.setItem(uuid, "Lobby-Gadgets", 1, true);
							Coins.removeCoins(uuid, 25000);
							Extras_Gadgets.openExtras_Gadgets(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eRainbow")) {
					if (Extras.hasItem(uuid, "Lobby-Gadgets", 2)) {
						Extras.setActiveItemnr(uuid, "Lobby-Gadgets", 2);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setItem(4, item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 25000) {
							Extras.setItem(uuid, "Lobby-Gadgets", 2, true);
							Coins.removeCoins(uuid, 25000);
							Extras_Gadgets.openExtras_Gadgets(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§9Stacker 2.0")) {
					if (Extras.hasItem(uuid, "Lobby-Gadgets", 3)) {
						Extras.setActiveItemnr(uuid, "Lobby-Gadgets", 3);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setItem(4, item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 25000) {
							Extras.setItem(uuid, "Lobby-Gadgets", 3, true);
							Coins.removeCoins(uuid, 25000);
							Extras_Gadgets.openExtras_Gadgets(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aEröffnung 2020")) {
					if (Extras.hasItem(uuid, "Lobby-Gadgets-Special", 0)) {
						Extras.setActiveItemnr(uuid, "Lobby-Gadgets-Special", 0);
						ItemStack item = e.getCurrentItem();
						ItemMeta itemmeta = item.getItemMeta();
						itemmeta.setLore(null);
						item.setItemMeta(itemmeta);
						p.getInventory().setItem(4, item);
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 1000) {
							Extras.setItem(uuid, "Lobby-Gadgets-Special", 0, true);
							Coins.removeCoins(uuid, 1000);
							Extras_Gadgets.openExtras_Gadgets_Special(p);
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §cPartikel")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Extras_Menü.openExtras_Menü(p);
				}

				if (LobbySystem.spectator.contains(p)){
					Extras.setActiveItemnr(uuid, "Lobby-Partikel", -1);
					p.closeInventory();
					p.sendMessage(LobbySystem.prefix + "§7Die §cPartikel §7wurden §cdeaktiviert, da du im §eVanish §7bist!");
					walkParticle.remove(p);
					return;
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cPartikel deaktivieren")) {
					Extras.setActiveItemnr(uuid, "Lobby-Partikel", -1);
					p.closeInventory();
					p.sendMessage(LobbySystem.prefix + "§7Die §cPartikel §7wurden §cdeaktiviert§7!");
					walkParticle.remove(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cHerzen")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 0)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 0);
						walkParticle.put(p, new Particle(EnumParticle.HEART, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 0, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.HEART, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§fWolken")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 1)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 1);
						walkParticle.put(p, new Particle(EnumParticle.CLOUD, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 1, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.CLOUD, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§9Flammen")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 2)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 2);
						walkParticle.put(p, new Particle(EnumParticle.FLAME, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 2, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.FLAME, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§bWasser")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 3)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 3);
						walkParticle.put(p, new Particle(EnumParticle.DRIP_WATER, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 3, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.DRIP_WATER, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§6Lava")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 4)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 4);
						walkParticle.put(p, new Particle(EnumParticle.LAVA, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 4, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.LAVA, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aFeuerwerk")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 5)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 5);
						walkParticle.put(p, new Particle(EnumParticle.FIREWORKS_SPARK, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 5, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.FIREWORKS_SPARK, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Crit-Partikel")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 6)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 6);
						walkParticle.put(p, new Particle(EnumParticle.CRIT, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 6, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.CRIT, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5Ender-Partikel")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 7)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 7);
						walkParticle.put(p, new Particle(EnumParticle.PORTAL, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 7, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.PORTAL, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§aFreundlicher Dorfbewohner")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 8)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 8);
						walkParticle.put(p, new Particle(EnumParticle.VILLAGER_HAPPY, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 8, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.VILLAGER_HAPPY, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cBöser Dorfbewohner")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 9)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 9);
						walkParticle.put(p, new Particle(EnumParticle.VILLAGER_ANGRY, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 9, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.VILLAGER_ANGRY, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cRedstone")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 10)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 10);
						walkParticle.put(p, new Particle(EnumParticle.REDSTONE, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 10, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.REDSTONE, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5Noten")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 11)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 11);
						walkParticle.put(p, new Particle(EnumParticle.NOTE, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 11, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.NOTE, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aSchleim")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 12)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 12);
						walkParticle.put(p, new Particle(EnumParticle.SLIME, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 12, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.SLIME, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§5Zauberei")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 13)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 13);
						walkParticle.put(p, new Particle(EnumParticle.ENCHANTMENT_TABLE, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 13, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.ENCHANTMENT_TABLE, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§bMagie")) {
					if (Extras.hasItem(uuid, "Lobby-Partikel", 14)) {
						Extras.setActiveItemnr(uuid, "Lobby-Partikel", 14);
						walkParticle.put(p, new Particle(EnumParticle.SPELL_WITCH, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						p.closeInventory();
					} else {
						if (Coins.getCoins(uuid) >= 15000) {
							Extras.setItem(uuid, "Lobby-Partikel", 14, true);
							Coins.removeCoins(uuid, 15000);
							Extras_Partikel.openExtras_Partikel(p);
							walkParticle.put(p, new Particle(EnumParticle.SPELL_WITCH, p.getLocation(), true, 0, 0, 0, 0.1F, 1));
						} else {
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Extras §8● §6Premium")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Extras_Menü.openExtras_Menü(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().startsWith("§6Stacker")) {
					if (Extras.hasItem(uuid, "Lobby-Premium-Stacker", 0)) {
						if(LobbySystem.stacker.contains(p)){
							LobbySystem.stacker.remove(p);
							Extras.setActiveItemnr(uuid, "Lobby-Premium-Stacker", -1);
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§7Der §6Stacker §7wurde §cdeaktiviert§7.");
						}else{
							LobbySystem.stacker.add(p);
							Extras.setActiveItemnr(uuid, "Lobby-Premium-Stacker", 0);
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§7Der §6Stacker §7wurde §aaktiviert§7.");
						}
					}else{
						if(Rang.isAtLeast(RangType.PREMIUM, uuid)){
							Extras.setItem(uuid, "BashIt-Kits", 0, true);

							if(LobbySystem.stacker.contains(p)){
								LobbySystem.stacker.remove(p);
								Extras.setActiveItemnr(uuid, "Lobby-Premium-Stacker", -1);
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§7Der §6Stacker §7wurde §cdeaktiviert§7.");
							}else{
								LobbySystem.stacker.add(p);
								Extras.setActiveItemnr(uuid, "Lobby-Premium-Stacker", 0);
								p.closeInventory();
								p.sendMessage(LobbySystem.prefix + "§7Der §6Stacker §7wurde §aaktiviert§7.");
							}
						}else{
							p.closeInventory();
							p.sendMessage(LobbySystem.prefix + "§cDu besitzt kein Premiumrang.");
						}
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Shop §8● §6Premium")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§e1 Monat §8┃ §6Premium")) {
					Shop_Premium_Bestätigung.open_Premium_Bestätigung1(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§e3 Monate §8┃ §6Premium")) {
					Shop_Premium_Bestätigung.open_Premium_Bestätigung2(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§e6 Monate §8┃ §6Premium")) {
					Shop_Premium_Bestätigung.open_Premium_Bestätigung3(p);
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§e24 Stunden §8┃ §6Test-Premium")) {
					Shop_Premium_Bestätigung.open_Premium_Bestätigung4(p);
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Shop §8● §7Bestätigung §8● §e1 Monat")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Shop_PremiumInventar.openShop_Premium(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nJa")) {
					if (Rang.isAtLeast(RangType.PREMIUM, uuid)) {
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§7Du besitzt bereits den §6Premium §7oder einen §chöheren §7Rang!");
						p.playSound(p.getLocation(), Sound.ANVIL_LAND, 1F, 1F);
						return;
					}

					p.closeInventory();

					if(CoinBoost.isBoosted(API.getIdForGamemode("Lobby"))) {
						if (Coins.getCoins(uuid) < 20000) {
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							return;
						}

						Coins.removeCoins(uuid, 20000);
					}else{
						if (Coins.getCoins(uuid) < 25000) {
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							return;
						}

						Coins.removeCoins(uuid, 25000);
					}

					Rang.setRang(uuid, "BungeeCord", RangType.fromString(oldrang), RangType.PREMIUM, 2628000000L);

					p.sendMessage(LobbySystem.prefix + "");
					p.sendMessage(LobbySystem.prefix + "§7Du hast den §6Premium §7Rang für §e1 Monat §7gekauft.");
					p.sendMessage(LobbySystem.prefix + "§7Du solltest dein §cRang §7in Kürze erhalten!");
					p.sendMessage(LobbySystem.prefix + "");

					for (APIPlayer all : APIPlayer.getOnlinePlayers()) {
						if (!LobbySystem.edit.contains(all)) {
							Methoden.setItems(all);
						}
						Methoden.updateScoreboard(all);
						ScoreboardManager.updateScoreboard(all);
					}

					p.setPlayerListName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());

				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§c§nNein")) {
					Shop_PremiumInventar.openShop_Premium(p);
				}
			} else if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Shop §8● §7Bestätigung §8● §e3 Monate")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Shop_PremiumInventar.openShop_Premium(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nJa")) {
					if (Rang.isAtLeast(RangType.PREMIUM, uuid)) {
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§7Du besitzt bereits den §6Premium §7oder einen §chöheren §7Rang!");
						p.playSound(p.getLocation(), Sound.ANVIL_LAND, 1F, 1F);
						return;
					}

					p.closeInventory();

					if(CoinBoost.isBoosted(API.getIdForGamemode("Lobby"))) {
						if (Coins.getCoins(uuid) < 45000) {
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							return;
						}

						Coins.removeCoins(uuid, 45000);
					}else{
						if (Coins.getCoins(uuid) < 50000) {
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							return;
						}

						Coins.removeCoins(uuid, 50000);
					}

					Rang.setRang(uuid, "BungeeCord", RangType.fromString(oldrang), RangType.PREMIUM, 7884000000L);

					p.sendMessage(LobbySystem.prefix + "");
					p.sendMessage(LobbySystem.prefix + "§7Du hast den §6Premium §7Rang für §e3 Monate §7gekauft.");
					p.sendMessage(LobbySystem.prefix + "§7Du solltest dein §cRang §7in Kürze erhalten!");
					p.sendMessage(LobbySystem.prefix + "");

					for (APIPlayer all : APIPlayer.getOnlinePlayers()) {
						if (!LobbySystem.edit.contains(all)) {
							Methoden.setItems(all);
						}

						Methoden.updateScoreboard(all);
						ScoreboardManager.updateScoreboard(all);
					}

					p.setPlayerListName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());

				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§c§nNein")) {
					Shop_PremiumInventar.openShop_Premium(p);
				}
			} else if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Shop §8● §7Bestätigung §8● §e6 Monate")) {
				e.setCancelled(true);

				if (Rang.isAtLeast(RangType.PREMIUM, uuid)) {
					p.closeInventory();
					p.sendMessage(
							LobbySystem.prefix + "§7Du besitzt bereits den §6Premium §7oder einen §chöheren §7Rang!");
					p.playSound(p.getLocation(), Sound.ANVIL_LAND, 1F, 1F);
					return;
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Shop_PremiumInventar.openShop_Premium(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nJa")) {
					if (Rang.isAtLeast(RangType.PREMIUM, uuid)) {
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§7Du besitzt bereits den §6Premium §7oder einen §chöheren §7Rang!");
						p.playSound(p.getLocation(), Sound.ANVIL_LAND, 1F, 1F);
						return;
					}

					p.closeInventory();

					if(CoinBoost.isBoosted(API.getIdForGamemode("Lobby"))) {
						if (Coins.getCoins(uuid) < 95000) {
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							return;
						}

						Coins.removeCoins(uuid, 95000);
					}else{
						if (Coins.getCoins(uuid) < 100000) {
							p.sendMessage(LobbySystem.prefix + "§cDu hast nicht genug Coins!");
							return;
						}

						Coins.removeCoins(uuid, 100000);
					}

					Rang.setRang(uuid, "BungeeCord", RangType.fromString(oldrang), RangType.PREMIUM, 15768000000L);

					p.sendMessage(LobbySystem.prefix + "");
					p.sendMessage(LobbySystem.prefix + "§7Du hast den §6Premium §7Rang für §e6 Monate §7gekauft.");
					p.sendMessage(LobbySystem.prefix + "§7Du solltest dein §cRang §7in Kürze erhalten!");
					p.sendMessage(LobbySystem.prefix + "");

					for (APIPlayer all : APIPlayer.getOnlinePlayers()) {
						if (!LobbySystem.edit.contains(all)) {
							Methoden.setItems(all);
						}
						Methoden.updateScoreboard(all);
						ScoreboardManager.updateScoreboard(all);
					}

					p.setPlayerListName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());

				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§c§nNein")) {
					Shop_PremiumInventar.openShop_Premium(p);
				}
			} else if (e.getClickedInventory().getTitle().equalsIgnoreCase("§6Shop §8● §7Bestätigung §8● §e24 Stunden")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Shop_PremiumInventar.openShop_Premium(p);
				}

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§a§nJa")) {
					if (Rang.isAtLeast(RangType.PREMIUM, uuid)) {
						p.closeInventory();
						p.sendMessage(LobbySystem.prefix + "§7Du besitzt bereits den §6Premium §7oder einen §chöheren §7Rang!");
						p.playSound(p.getLocation(), Sound.ANVIL_LAND, 1F, 1F);
						return;
					}

					if (Extras.hasItem(uuid, "Test-Premium", 0)) {
						p.sendMessage(LobbySystem.prefix + "§cDu hast dir bereits 1 mal Test-Premium geholt!");
					} else {
						Extras.setItem(uuid, "Test-Premium", 0, true);

						Rang.setRang(uuid, "BungeeCord", RangType.fromString(oldrang), RangType.PREMIUM, 86400000L);

						p.closeInventory();

						p.sendMessage(LobbySystem.prefix + "");
						p.sendMessage(LobbySystem.prefix + "§7Du hast den §6Premium §7Rang für §e24 Stunden §7abgeholt!");
						p.sendMessage(LobbySystem.prefix + "§7Du solltest dein §cRang §7in Kürze erhalten! Viel SpaÃŸ!");
						p.sendMessage(LobbySystem.prefix + "");

						for (APIPlayer all : APIPlayer.getOnlinePlayers()) {
							if (!LobbySystem.edit.contains(all)) {
								Methoden.setItems(all);
							}
							Methoden.updateScoreboard(all);
							ScoreboardManager.updateScoreboard(all);
						}

						p.setPlayerListName(Rang.getRangfarbe(Rang.getRang(uuid)) + p.getName());
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§c§nNein")) {
					Shop_PremiumInventar.openShop_Premium(p);
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§cSilentlobby §8● §7Menü")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cSilentlobby")) {
					p.closeInventory();

					ByteArrayDataOutput out = ByteStreams.newDataOutput();
					out.writeUTF("silentlobby");
					out.writeUTF("start");
					out.writeUTF(p.getName());
					p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().startsWith("§7Automatische §cSilentlobby")) {
					MySQL.registerSilentlobbyPlayer(p);

					ArrayList<String> autosilent = new ArrayList<String>();
					autosilent.add(0, "");
					autosilent.add(1, "§8▶ §7Du wirst automatisch mit der §cSilentlobby §7verbunden,");
					autosilent.add(2, "  §7sobald du das §9Netzwerk §7betrittst");

					if (MySQL.isSilentlobby(p)) {
						MySQL.setSilentlobby(p, false);

						ItemStack ToggleSilent = ItemBuilder1.createItemWithShortAndLore(351, 1, "§7Automatische §cSilentlobby §8● §cAus", (short) 8, autosilent);
						p.getOpenInventory().setItem(15, ToggleSilent);
					} else {
						MySQL.setSilentlobby(p, true);

						ItemStack ToggleSilent = ItemBuilder1.createItemWithShortAndLore(351, 1, "§7Automatische §cSilentlobby §8● §aAn", (short) 10, autosilent);
						p.getOpenInventory().setItem(15, ToggleSilent);
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§fDein Profil §8● §7Übersicht")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§4Freunde")){
					Profil_Freundemenü.openFreundeMenu(p);
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aEinstellungen")){
					Profil_Einstellungen.openProfil_Einstellungen(p);
				}else if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cClan")){
					Profil_Clanmenü.openClanmenü(p);
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§fDein Profil §8● §aEinstellungen")) {
				e.setCancelled(true);

				if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")){
					Profil.openProfil(p.getPlayer());
				}

				if(e.getSlot() == 1){
					if(Settings.getSetting(p.getUUID(), "Hotbar") == 0){
						Settings.setSetting(p.getUUID(), "Hotbar", 1);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}else if(Settings.getSetting(p.getUUID(), "Hotbar") == 1){
						Settings.setSetting(p.getUUID(), "Hotbar", 0);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}
				}else if(e.getSlot() == 10){
					if(Settings.getSetting(p.getUUID(), "Scoreboard") == 0){
						Settings.setSetting(p.getUUID(), "Scoreboard", 1);
						Profil_Einstellungen.openProfil_Einstellungen(p);

						Methoden.updateScoreboard(p);
					}else if(Settings.getSetting(p.getUUID(), "Scoreboard") == 1){
						Settings.setSetting(p.getUUID(), "Scoreboard", 0);
						Profil_Einstellungen.openProfil_Einstellungen(p);

						Methoden.updateScoreboard(p);
					}
				}else if(e.getSlot() == 19){
					if(Settings.getSetting(p.getUUID(), "Animation") == 0){
						Settings.setSetting(p.getUUID(), "Animation", 1);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}else if(Settings.getSetting(p.getUUID(), "Animation") == 1){
						Settings.setSetting(p.getUUID(), "Animation", 0);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}
				}else if(e.getSlot() == 28){
					if(Settings.getSetting(p.getUUID(), "Verstecker") == 0){
						Settings.setSetting(p.getUUID(), "Verstecker", 1);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}else if(Settings.getSetting(p.getUUID(), "Verstecker") == 1){
						Settings.setSetting(p.getUUID(), "Verstecker", 0);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}
				}else if(e.getSlot() == 37){
					if(Settings.getSetting(p.getUUID(), "Chat") == 0){
						Settings.setSetting(p.getUUID(), "Chat", 1);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}else if(Settings.getSetting(p.getUUID(), "Chat") == 1){
						Settings.setSetting(p.getUUID(), "Chat", 0);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}
				}else if(e.getSlot() == 4){
					if(Settings.getSetting(p.getUUID(), "Teleportation") == 0){
						Settings.setSetting(p.getUUID(), "Teleportation", 1);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}else if(Settings.getSetting(p.getUUID(), "Teleportation") == 1){
						Settings.setSetting(p.getUUID(), "Teleportation", 0);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}
				}else if(e.getSlot() == 13){
					if(Settings.getSetting(p.getUUID(), "Rundruf") == 0){
						Settings.setSetting(p.getUUID(), "Rundruf", 1);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}else if(Settings.getSetting(p.getUUID(), "Rundruf") == 1){
						Settings.setSetting(p.getUUID(), "Rundruf", 0);
						Profil_Einstellungen.openProfil_Einstellungen(p);
					}
				}




				else if(e.getSlot() == 25){
					if(Settings.getSetting(p.getUUID(), "Serveranzeige") == 0){
						Settings.setSetting(p.getUUID(), "Serveranzeige", 1);
						Profil_Einstellungen.openProfil_Einstellungen(p);

						try{
							ByteArrayDataOutput out = ByteStreams.newDataOutput();
							out.writeUTF("labymod");
							out.writeUTF("gameinfo");
							out.writeUTF(p.getPlayer().getName());
							p.getPlayer().sendPluginMessage(API.plugin, "BungeeCord", out.toByteArray());
						}catch(Exception ex){}
					}else if(Settings.getSetting(p.getUUID(), "Serveranzeige") == 1){
						Settings.setSetting(p.getUUID(), "Serveranzeige", 0);
						Profil_Einstellungen.openProfil_Einstellungen(p);

						try{
							ByteArrayDataOutput out = ByteStreams.newDataOutput();
							out.writeUTF("labymod");
							out.writeUTF("gameinfo");
							out.writeUTF(p.getPlayer().getName());
							p.getPlayer().sendPluginMessage(API.plugin, "BungeeCord", out.toByteArray());
						}catch(Exception ex){}
					}
				}else if(e.getSlot() == 34){
					if(Settings.getSetting(p.getUUID(), "Skin") == 0){
						Settings.setSetting(p.getUUID(), "Skin", 1);
						Profil_Einstellungen.openProfil_Einstellungen(p);

						Emotes.stopEmote(p, NPCloc);
					}else if(Settings.getSetting(p.getUUID(), "Skin") == 1){
						Settings.setSetting(p.getUUID(), "Skin", 0);
						Profil_Einstellungen.openProfil_Einstellungen(p);

						Emotes.stopEmote(p, NPCloc);
					}
				}
			}

			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§4Freunde §8● §7Übersicht")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eFreundschaftsanfragen")) {
					if (MySQL.getToggleStatus(MySQL.getUUID(p.getName()), "Friends") == 1) {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "Friends", 0);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					} else {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "Friends", 1);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§ePrivate Nachrichten")) {
					if (MySQL.getToggleStatus(MySQL.getUUID(p.getName()), "MSG") == 0) {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "MSG", 1);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					} else if (MySQL.getToggleStatus(MySQL.getUUID(p.getName()), "MSG") == 1) {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "MSG", 2);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					} else if (MySQL.getToggleStatus(MySQL.getUUID(p.getName()), "MSG") == 2) {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "MSG", 0);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName()
						.equalsIgnoreCase("§eOnline/Offline Nachrichten")) {
					if (MySQL.getToggleStatus(MySQL.getUUID(p.getName()), "Online") == 1) {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "Online", 0);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					} else {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "Online", 1);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eNachspringen")) {
					if (MySQL.getToggleStatus(MySQL.getUUID(p.getName()), "Jump") == 1) {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "Jump", 0);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					} else {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "Jump", 1);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§eServer anzeigen")) {
					if (MySQL.getToggleStatus(MySQL.getUUID(p.getName()), "Server") == 1) {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "Server", 0);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					} else {
						MySQL.setToggleStatus(MySQL.getUUID(p.getName()), "Server", 1);

						Profil_Freundemenü.openFreundeMenu(p);
						p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
					}
				} else if (e.getCurrentItem().getType() == Material.PAPER) {
					Profil_Freundemenü.openFreundeAnfragen(p);
				} else if (e.getCurrentItem().getType() == Material.SKULL_ITEM) {
					String name1 = e.getCurrentItem().getItemMeta().getDisplayName().substring(2, e.getCurrentItem().getItemMeta().getDisplayName().length());
					String name2 = e.getCurrentItem().getItemMeta().getDisplayName();

					boolean on = MySQL.isOnline(name1);

					if (on == false) {
						Inventory inv = Bukkit.createInventory(null, 27, "§4Freund §8● §7Menü §8● §a" + name2);

						ItemStack back = ItemBuilder1.createItem(Material.NAME_TAG, 1, "§7Zurück");
						ItemStack remove = ItemBuilder1.createItem(Material.BARRIER, 1, "§cFreund entfernen");

						ItemStack Skull1 = new ItemStack(Material.SKULL_ITEM, 1, (short) 3);
						SkullMeta Skull1M = (SkullMeta) Skull1.getItemMeta();
						Skull1M.setDisplayName(name2 + " §8┃ §cOffline");
						Skull1M.setOwner(name2);
						Skull1.setItemMeta(Skull1M);

						inv.setItem(10, Skull1);
						inv.setItem(13, remove);
						inv.setItem(16, back);

						p.openInventory(inv);
					} else if (on == true) {
						Inventory inv = Bukkit.createInventory(null, 27, "§4Freund §8● §7Menü §8● §a" + name2);

						ItemStack jump = ItemBuilder1.createItem(Material.ENDER_PEARL, 1, "§7Auf den Server von §a" + name2 + " §7springen");
						ItemStack party = ItemBuilder1.createItem(Material.CAKE, 1, "§a" + name2 + " §7in eine §5Party §7einladen");
						ItemStack clan = ItemBuilder1.createItem(Material.IRON_CHESTPLATE, 1, "§a" + name2 + " §7in deinen §bClan §7einladen");
						ItemStack remove = ItemBuilder1.createItem(Material.BARRIER, 1, "§cFreund entfernen");
						ItemStack back = ItemBuilder1.createItem(Material.NAME_TAG, 1, "§7Zurück");

						String serverr = MySQL.getServer(MySQL.getName(name1));

						ArrayList<String> i7a = new ArrayList<>();
						i7a.add(0, "");
						if (MySQL.getToggleStatus(UUIDFetcher.getUUID(name1), "Server") == 0) {
							i7a.add(1, "§8▶ §7Server §8● §e" + MySQL.getServer(name1));
						} else if (MySQL.getToggleStatus(UUIDFetcher.getUUID(name1), "Server") == 1) {
							i7a.add(1, "§8▶ §7Server §8● §cVersteckt");
						}

						ItemStack Skull1 = new ItemStack(Material.SKULL_ITEM, 1, (short) 3);
						SkullMeta Skull1M = (SkullMeta) Skull1.getItemMeta();
						Skull1M.setDisplayName(name2);
						Skull1M.setOwner(name1);
						Skull1M.setLore(i7a);
						Skull1.setItemMeta(Skull1M);

						inv.setItem(10, Skull1);
						inv.setItem(12, party);
						inv.setItem(13, clan);
						inv.setItem(14, jump);
						inv.setItem(16, remove);
						inv.setItem(26, back);

						p.openInventory(inv);
					}
				}
			}

			if (e.getClickedInventory().getTitle().startsWith("§4Freund §8● §aOffene Anfragen")) {
				e.setCancelled(true);

				if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8» §7Zurück")) {
					Profil_Freundemenü.openFreundeMenu(APIPlayer.getPlayer(p));
				} else if (e.getCurrentItem().getType() == Material.SKULL_ITEM) {
					String name = e.getCurrentItem().getItemMeta().getDisplayName().substring(2, e.getCurrentItem().getItemMeta().getDisplayName().length());

					if (e.isLeftClick()) {
						//Annehmen

						try{
							ByteArrayDataOutput out = ByteStreams.newDataOutput();
							out.writeUTF("freunde");
							out.writeUTF("accept");
							out.writeUTF(name);
							out.writeUTF(p.getName());
							p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());

							Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable() {

								@Override
								public void run() {
									Profil_Freundemenü.openFreundeAnfragen(p);
								}
							}, 20*2);
						}catch(Exception ex){
							p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
						}
					} else if (e.isRightClick()) {
						//Ablehnen

						try{
							ByteArrayDataOutput out = ByteStreams.newDataOutput();
							out.writeUTF("freunde");
							out.writeUTF("deny");
							out.writeUTF(name);
							out.writeUTF(p.getName());
							p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());

							Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable() {

								@Override
								public void run() {
									Profil_Freundemenü.openFreundeAnfragen(p);
								}
							}, 20*2);
						}catch(Exception ex){
							p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
						}
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§aAlle Anfragen annehmen")) {

					List<String> friends = MySQL.getFriendAnfragen(MySQL.getUUID(p.getName()));

					if(friends.size() <= 0) {
						p.sendMessage(LobbySystem.freundesys + "§cDu hast keine neuen Anfragen.");
						return;
					}

					for(int i = 0; i < friends.size(); i++) {
						 try{
							 p.sendMessage("- " + UUIDFetcher.getName(friends.get(i)));

							 ByteArrayDataOutput out = ByteStreams.newDataOutput();
							 out.writeUTF("freunde");
							 out.writeUTF("accept");
							 out.writeUTF(UUIDFetcher.getName(friends.get(i)));
							 out.writeUTF(p.getName());
							 p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());

							 Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable() {

								 @Override
								 public void run() {
									 Profil_Freundemenü.openFreundeAnfragen(p);
								 }
							 }, 20*2);
						 }catch(Exception ex){
							 p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
						 }
					}
				} else if (e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§cAlle Anfragen ablehnen")) {

					List<String> friends = MySQL.getFriendAnfragen(MySQL.getUUID(p.getName()));

					if(friends.size() <= 0) {
						p.sendMessage(LobbySystem.freundesys + "§cDu hast keine neuen Anfragen.");
						return;
					}

					for(int i = 0; i < friends.size(); i++) {
						 try{
							 p.sendMessage("- " + UUIDFetcher.getName(friends.get(i)));

							 ByteArrayDataOutput out = ByteStreams.newDataOutput();
							 out.writeUTF("freunde");
							 out.writeUTF("deny");
							 out.writeUTF(UUIDFetcher.getName(friends.get(i)));
							 out.writeUTF(p.getName());
							 p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());

							 Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable() {

								 @Override
								 public void run() {
									 Profil_Freundemenü.openFreundeAnfragen(p);
								 }
							 }, 20*2);
						 }catch(Exception ex){
							 p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
						 }
					}
				}
			}

			if (e.getClickedInventory().getTitle().startsWith("§4Freund §8● §7Menü §8●")) {
				e.setCancelled(true);

				String name2 = e.getClickedInventory().getTitle().substring(28, e.getClickedInventory().getTitle().length());

				if (e.getCurrentItem().getType() == Material.ENDER_PEARL) {
					p.closeInventory();

					OfflinePlayer target = Bukkit.getServer().getOfflinePlayer(name2);

					String server = MySQL.getServer(target.getName());

					if(MySQL.getToggleStatus(UUIDFetcher.getUUID(target.getName()), "Jump") == 1) {
						p.sendMessage(LobbySystem.freundesys + "§cDieser Spieler hat die Jump Funktion deaktiviert.");
						return;
					}

					try{
						ByteArrayDataOutput out = ByteStreams.newDataOutput();
						out.writeUTF("Connect");
						out.writeUTF(server);
						p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
						p.sendMessage(LobbySystem.freundesys + "§7Du wirst auf den Server von §e" + name2 + " §7verschoben...");
					}catch(Exception ex){
						p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
					}
				} else if (e.getCurrentItem().getType() == Material.CAKE) {
					p.closeInventory();

					try{
						ByteArrayDataOutput out = ByteStreams.newDataOutput();
						out.writeUTF("freunde");
						out.writeUTF("party");
						out.writeUTF(name2);
						p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
					}catch(Exception ex){
						p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
					}
				} else if (e.getCurrentItem().getType() == Material.IRON_CHESTPLATE) {
					p.closeInventory();

					try{
						ByteArrayDataOutput out = ByteStreams.newDataOutput();
						out.writeUTF("freunde");
						out.writeUTF("clan");
						out.writeUTF(name2);
						out.writeUTF(Clan.getClan(p.getUniqueId().toString()));
						out.writeUTF(p.getName());
						p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
					}catch(Exception ex){
						p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
					}
				} else if (e.getCurrentItem().getType() == Material.BARRIER) {
					p.closeInventory();

					try{
						ByteArrayDataOutput out = ByteStreams.newDataOutput();
						out.writeUTF("freunde");
						out.writeUTF("remove");
						out.writeUTF(name2);
						out.writeUTF(p.getName());
						p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
					}catch(Exception ex){
						p.sendMessage(LobbySystem.freundesys + "§cEs ist ein Fehler aufgetreten!");
					}
				} else if (e.getCurrentItem().getType() == Material.NAME_TAG && e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§7Zurück")) {
					Profil_Freundemenü.openFreundeMenu(APIPlayer.getPlayer(p));
					p.playSound(p.getLocation(), Sound.ITEM_PICKUP, 1F, 1F);
				}
			}

			String cName = Clan.getClan(uuid);
			if (e.getClickedInventory().getTitle().equalsIgnoreCase("§e"+cName+" §8[§f"+Clan.getTag(cName)+"§8] ● §7Übersicht")) {
				e.setCancelled(true);
				List<String> mOnline = Clan.getOnlineMembers(cName);
				List<String> mAll = Clan.getMember(cName);
				int maxmember = Clan.getMaxClanmember(cName);
				if(e.getCurrentItem().getType().equals(Material.NETHER_STAR)) {
					int add = maxmember > 72 && mAll.size() > 72 && e.getInventory().getItem(52).getType().equals(Material.NAME_TAG) ? 36 : 0;
					for(int i = 36+add; i < Math.min(72+add, mAll.size()); i++) {
						ArrayList<String> lore = new ArrayList<>();
						lore.add(0, "");
						if(mOnline.contains(mAll.get(i))) {
							if(MySQL.getToggleStatus(uuid, "Server") == 0){
								lore.add(1, "§8▶ §7Server §8● §e" + MySQL.getServer(UUIDFetcher.getName(mAll.get(i))));
							}else if(MySQL.getToggleStatus(uuid, "Server") == 1){
								lore.add(1, "§8▶ §7Server §8● §cVersteckt");
							}

							if(MySQL.getToggleStatus(uuid, "Jump") == 0){
								lore.add(2, "§8▶ §7Nachspringen §8● §aJa");
							}else if(MySQL.getToggleStatus(uuid, "Jump") == 1){
								lore.add(2, "§8▶ §7Nachspringen §8● §cNein");
							}
						}else{
							lore.add(0, "");
							lore.add(1, "§8▶ §cOffline");
							lore.add(2, "");
							if(MySQL.getLastLogout(uuid) != null){
								lore.add(3, "§8▶ §7Zul. Online §8● §a" + MySQL.getLastLogout(uuid) + " Uhr");
							}else{
								lore.add(3, "§8▶ §7Zul. Online §8● §c???");
							}
						}

						e.getInventory().setItem(i, new ItemBuilder(Material.SKULL_ITEM, mOnline.contains(mAll.get(i)) ? (short)3 : (short)0)
								.displayName(mOnline.contains(mAll.get(i)) ? Rang.getRangfarbe(Rang.getRang(mAll.get(i)))+UUIDFetcher.getName(mAll.get(i))
								: "§7" + Rang.getRangfarbe(Rang.getRang(mAll.get(i))) + MySQL.getName(mAll.get(i)))
								.lore(lore).setOwner(UUIDFetcher.getName(mAll.get(i))).build());
					}

					if(add == 36) {
						e.getInventory().setItem(53, new ItemBuilder(Material.REDSTONE).displayName("§cNicht verfügbar").build());
					}
					e.getInventory().setItem(52, new ItemBuilder(Material.NAME_TAG).displayName("§cZurück").build());
				}else if(e.getCurrentItem().getType().equals(Material.NAME_TAG)) {
					int add = maxmember > 72 && mAll.size() > 72 && e.getInventory().getItem(53).getType().equals(Material.NETHER_STAR) ? 0 : 36;
					for(int i = 0+add; i < Math.min(36+add, mAll.size()); i++) {
						ArrayList<String> lore = new ArrayList<>();
						lore.add(0, "");
						if(mOnline.contains(mAll.get(i))) {
							if(MySQL.getToggleStatus(uuid, "Server") == 0){
								lore.add(1, "§8▶ §7Server §8● §e" + MySQL.getServer(UUIDFetcher.getName(mAll.get(i))));
							}else if(MySQL.getToggleStatus(uuid, "Server") == 1){
								lore.add(1, "§8▶ §7Server §8● §cVersteckt");
							}

							if(MySQL.getToggleStatus(uuid, "Jump") == 0){
								lore.add(2, "§8▶ §7Nachspringen §8● §aJa");
							}else if(MySQL.getToggleStatus(uuid, "Jump") == 1){
								lore.add(2, "§8▶ §7Nachspringen §8● §cNein");
							}
						}else{
							lore.add(0, "");
							lore.add(1, "§8▶ §cOffline");
							lore.add(2, "");
							if(MySQL.getLastLogout(uuid) != null){
								lore.add(3, "§8▶ §7Zul. Online §8● §a" + MySQL.getLastLogout(uuid) + " Uhr");
							}else{
								lore.add(3, "§8▶ §7Zul. Online §8● §c???");
							}
						}

						e.getInventory().setItem(i, new ItemBuilder(Material.SKULL_ITEM, mOnline.contains(mAll.get(i)) ? (short)3 : (short)0)
								.displayName(mOnline.contains(mAll.get(i)) ? Rang.getRangfarbe(Rang.getRang(mAll.get(i)))+UUIDFetcher.getName(mAll.get(i))
								: "§7" + Rang.getRangfarbe(Rang.getRang(mAll.get(i))) + MySQL.getName(mAll.get(i)))
								.lore(lore).setOwner(UUIDFetcher.getName(mAll.get(i))).build());
					}

					e.getInventory().setItem(53, new ItemBuilder(Material.NETHER_STAR).displayName("§cWeiter").build());
					if(add == 0) {
						e.getInventory().setItem(52, new ItemBuilder(Material.REDSTONE).displayName("§cNicht verfügbar").build());
					}
				}else if(e.getCurrentItem().getType().equals(Material.CAKE)) {
					// Clan Party (all invite)
				}else if(e.getCurrentItem().getType().equals(Material.SKULL_ITEM)) {
					// Freunde Menü ähnliches inv?
				}
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

	@EventHandler
	public void onClick2(InventoryClickEvent e) {
		APIPlayer p = APIPlayer.getPlayer((Player) e.getWhoClicked());

		if(e.getClickedInventory().getTitle().equalsIgnoreCase("§bPrivate Server §8● §7Auswahl")) {
			e.setCancelled(true);

			if(Rang.isAtLeast(RangType.PREMIUMPLUS, p.getUUID())){
				if(e.getSlot() == 19){
					PrivateServer.serverauswahl.put(p, 1);
					PrivateServer.openPS_Menü(p);
				}

				if(e.getSlot() == 25){
					PrivateServer.serverauswahl.put(p, 2);
					PrivateServer.openPS_Menü(p);
				}
			}else{
				if(e.getSlot() == 31){
					PrivateServer.serverauswahl.put(p, 1);
					PrivateServer.openPS_Menü(p);
				}
			}
		}

		if(e.getClickedInventory().getTitle().equalsIgnoreCase("§bPrivate Server §8● §7Menü")) {
			e.setCancelled(true);

			if(e.getSlot() == 53){
				PrivateServer.serverauswahl.remove(p);
				PrivateServer.openPS_Menü(p);
			}

			if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8┃ §aServer starten §8┃")){

			}

			if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8┃ §cServer stoppen §8┃")){

			}

			if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8┃ §bServer einrichten §8┃")){
				PrivateServer.openPS_Einrichtung_Version(p);
			}

			if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8┃ §a§lServer betreten §8┃")){
				ByteArrayDataOutput out = ByteStreams.newDataOutput();
				out.writeUTF("Connect");
				out.writeUTF("PS#" + p.getName() + "_" + PrivateServer.serverauswahl.get(p));
				p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
				p.sendMessage(LobbySystem.ps + "§7Du wirst auf §ePS#" + p.getName() + "_" + PrivateServer.serverauswahl.get(p) + "§7verbunden...");
			}

			if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8┃ §9Verwaltung §8┃")){
				if(me.API.Verwaltung.PrivateServer.getOnlineStatus(p.getUUID(), PrivateServer.serverauswahl.get(p)).equals("Nicht eingerichtet")){
					p.closeInventory();
					p.sendMessage(LobbySystem.ps + "§cDu hast noch keinen Server eingerichtet, den du konfigurieren kannst.");
					p.playSound(p.getLocation(), Sound.ANVIL_LAND, 1F, 1F);
				}else{
					PrivateServer.openPS_Einstellungen(p);
				}
			}

			if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8┃ §cServer löschen §8┃")){
				if(me.API.Verwaltung.PrivateServer.getOnlineStatus(p.getUUID(), PrivateServer.serverauswahl.get(p)).equals("Nicht eingerichtet")){
					p.closeInventory();
					p.sendMessage(LobbySystem.ps + "§cDu hast noch keinen Server eingerichtet, den du konfigurieren kannst.");
					p.playSound(p.getLocation(), Sound.ANVIL_LAND, 1F, 1F);
				}else{

				}
			}

			if(e.getCurrentItem().getItemMeta().getDisplayName().equalsIgnoreCase("§8┃ §6Servername bearbeiten §8┃")){
				if(me.API.Verwaltung.PrivateServer.getOnlineStatus(p.getUUID(), PrivateServer.serverauswahl.get(p)).equals("Nicht eingerichtet")){
					p.closeInventory();
					p.sendMessage(LobbySystem.ps + "§cDu hast noch keinen Server eingerichtet, den du konfigurieren kannst.");
					p.playSound(p.getLocation(), Sound.ANVIL_LAND, 1F, 1F);
				}else{
					Bukkit.getScheduler().runTaskAsynchronously(LobbySystem.plugin, new Runnable() {

						@Override
						public void run() {
							AnvilGUI gui = new AnvilGUI(p, new AnvilGUI.AnvilClickEventHandler() {

								@Override
								public void onAnvilClick(AnvilClickEvent event) {
									if(event.getSlot() == AnvilGUI.AnvilSlot.OUTPUT){
										event.setWillClose(true);
										event.setWillDestroy(true);
										String nick = event.getName();

										if(nick.length() >= 3 && nick.length() <= 30){
											me.API.Verwaltung.PrivateServer.setServerName(p.getUUID(), PrivateServer.serverauswahl.get(p), nick);
											p.sendMessage(LobbySystem.ps + "§7Neue Beschreibung §8● §6" + ChatColor.translateAlternateColorCodes('&', nick));
										}else{
											p.sendMessage(LobbySystem.ps + "§cDu darfst nur 3-30 Zeichen verwenden.");
										}
									}else{
										event.setWillClose(false);
										event.setWillDestroy(false);
									}
								}
							});

							ItemStack i = new ItemStack(Material.SKULL_ITEM,1,(short)3);
							SkullMeta im = (SkullMeta)i.getItemMeta();
							if(me.API.Verwaltung.PrivateServer.getServerName(p.getUUID(), PrivateServer.serverauswahl.get(p)).equals("-")){
								im.setDisplayName("Beschreibung");
							}else{
								im.setDisplayName(me.API.Verwaltung.PrivateServer.getServerName(p.getUUID(), PrivateServer.serverauswahl.get(p)));
							}
							im.setOwner(p.getName());
							i.setItemMeta(im);

							gui.setSlot(AnvilGUI.AnvilSlot.INPUT_LEFT, i);

							gui.open();
						}
					});
				}
			}
		}

		if(e.getClickedInventory().getTitle().equalsIgnoreCase("§bPrivate Server §8● §bVersion Auswahl")) {
			e.setCancelled(true);

			if(e.getSlot() == 26){
				PrivateServer.openPS_Menü(p);
			}

			if(e.getSlot() == 11){ //1.8.8
				PrivateServer.einrichtung_version.put(p, "1.8.8");

				me.API.Verwaltung.PrivateServer.setServerVersion(p.getUUID(), PrivateServer.serverauswahl.get(p), "1.8.8");

				PrivateServer.openPS_Einstellungen(p);
			}

			if(e.getSlot() == 15){ //1.14.4
				PrivateServer.einrichtung_version.put(p, "1.14.4");

				me.API.Verwaltung.PrivateServer.setServerVersion(p.getUUID(), PrivateServer.serverauswahl.get(p), "1.14.4");

				PrivateServer.openPS_Einstellungen(p);
			}
		}

		if(e.getClickedInventory().getTitle().equalsIgnoreCase("§bPrivate Server §8● §cEinstellungen")) {
			e.setCancelled(true);

			int serverid = PrivateServer.serverauswahl.get(p);

			if(e.getSlot() == 34
					&& PrivateServer.einrichtung.containsKey(p)
					&& PrivateServer.einrichtung_version.containsKey(p)){
				if(PrivateServer.einrichtung_version.get(p).equals("1.8.8")){
					p.closeInventory();

					p.sendMessage(LobbySystem.ps + "");
					p.sendMessage(LobbySystem.ps + "§7Server §8● §e#" + PrivateServer.serverauswahl.get(p));
					p.sendMessage(LobbySystem.ps + "");
					p.sendMessage(LobbySystem.ps + "§7Arbeitsspeicher §8● §e512 MB");
					p.sendMessage(LobbySystem.ps + "§7Version §8● §6" + PrivateServer.einrichtung_version.get(p));
					p.sendMessage(LobbySystem.ps + "");

					p.sendTitle("§bTraidioNET §8● §6Private Server", "§eServer wird eingerichtet...");

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§aServer wurde erstellt.");
						}
					}, 20*5);

					CloudAPI.getInstance().startCloudServer("PS#" + p.getName() + "_" + PrivateServer.serverauswahl.get(p), 512, false);

//					CloudAPI.getInstance().startGameServer(CloudAPI.getInstance().getWrapper("Wrapper-1"), CloudAPI.getInstance().getServerGroupData("PS"),
//							new ServerConfig(false, "4820", new Document(p.getUUID(), ), 0), 512, null, null, p.getName() + "_" + PrivateServer.serverauswahl.get(p), true,
//							false, null, null, Collections.emptyList());

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§eTemplate wird geladen...");
						}
					}, 20*10);

					//Version laden
					//Plugins installieren

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§eTemplate wurde geladen.");
						}
					}, 20*15);

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§cDaten werden gespeichert...");
						}
					}, 20*20);

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§7Server wird §agestartet§7...");

							CloudAPI.getInstance().sendCloudCommand("cmd PS#" + p.getName() + "_" + PrivateServer.serverauswahl.get(p) + "-" + PrivateServer.serverauswahl.get(p) + " save-all");
							CloudAPI.getInstance().sendCloudCommand("cmd Bungee-1 cloud copy PS#" + p.getName() + "_" + PrivateServer.serverauswahl.get(p) + "-" + PrivateServer.serverauswahl.get(p));

							PrivateServer.serverauswahl.remove(p);
						}
					}, 20*25);

					me.API.Verwaltung.PrivateServer.setOnlineStatus(p.getUUID(), PrivateServer.serverauswahl.get(p), "Online");

					PrivateServer.einrichtung.remove(p);
					PrivateServer.einrichtung_version.remove(p);
				}else if(PrivateServer.einrichtung_version.get(p).equals("1.14.4")){
					p.closeInventory();

					p.sendMessage(LobbySystem.ps + "");
					p.sendMessage(LobbySystem.ps + "§7Server §8● §e#" + PrivateServer.serverauswahl.get(p));
					p.sendMessage(LobbySystem.ps + "");
					p.sendMessage(LobbySystem.ps + "§7Arbeitsspeicher §8● §e512 MB");
					p.sendMessage(LobbySystem.ps + "§7Version §8● §6" + PrivateServer.einrichtung_version.get(p));
					p.sendMessage(LobbySystem.ps + "");

					p.sendTitle("§bTraidioNET §8● §6Private Server", "§eServer wird eingerichtet...");

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§aServer wurde erstellt.");
						}
					}, 20*5);

					CloudAPI.getInstance().startCloudServer("PS#" + p.getName() + "_" + PrivateServer.serverauswahl.get(p), 512, false);

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§eTemplate wird geladen...");
						}
					}, 20*10);

					//Version laden
					//Plugins installieren

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§eTemplate wurde geladen.");
						}
					}, 20*15);

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§cDaten werden gespeichert...");
						}
					}, 20*20);

					Bukkit.getScheduler().runTaskLater(LobbySystem.plugin, new Runnable(){
						@Override
						public void run(){
							p.sendTitle("§bTraidioNET §8● §6Private Server", "§7Server wird §agestartet§7...");

							CloudAPI.getInstance().sendCloudCommand("cmd PS#" + p.getName() + "_" + PrivateServer.serverauswahl.get(p) + "-" + PrivateServer.serverauswahl.get(p) + " save-all");
							CloudAPI.getInstance().sendCloudCommand("cmd Bungee-1 cloud copy PS#" + p.getName() + "_" + PrivateServer.serverauswahl.get(p) + "-" + PrivateServer.serverauswahl.get(p));

							PrivateServer.serverauswahl.remove(p);
						}
					}, 20*25);

					me.API.Verwaltung.PrivateServer.setOnlineStatus(p.getUUID(), PrivateServer.serverauswahl.get(p), "Online");

					PrivateServer.einrichtung.remove(p);
					PrivateServer.einrichtung_version.remove(p);
				}
			}

			if(e.getSlot() == 35){
				PrivateServer.openPS_Menü(p);
			}

			if(e.getSlot() == 19){ //Serverstatus
				if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "State", serverid) == 0){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "State", serverid, 1);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "State", serverid) == 1){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "State", serverid, 0);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}

				PrivateServer.openPS_Einstellungen(p);
			}

			if(e.getSlot() == 20){ //Commandblöcke
				if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "CMD", serverid) == 0){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "CMD", serverid, 1);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "CMD", serverid) == 1){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "CMD", serverid, 0);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}

				PrivateServer.openPS_Einstellungen(p);
			}

			if(e.getSlot() == 21){ //PvP Modus
				if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "PvP", serverid) == 0){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "PvP", serverid, 1);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "PvP", serverid) == 1){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "PvP", serverid, 0);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}

				PrivateServer.openPS_Einstellungen(p);
			}

			if(e.getSlot() == 22){ //Nether & End
				if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "Nether", serverid) == 0){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "Nether", serverid, 1);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "Nether", serverid) == 1){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "Nether", serverid, 0);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}

				PrivateServer.openPS_Einstellungen(p);
			}

			if(e.getSlot() == 23){ //Welttyp
				if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "WorldType", serverid) == 0){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "WorldType", serverid, 1);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "WorldType", serverid) == 1){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "WorldType", serverid, 0);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}
//				else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "WorldType") == 2){
//					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "WorldType", 1, 0);
//				}

				PrivateServer.openPS_Einstellungen(p);
			}

			if(e.getSlot() == 24){ //Auto Respawn
				if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "AutoRespawn", serverid) == 0){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "AutoRespawn", serverid, 1);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "AutoRespawn", serverid) == 1){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "AutoRespawn", serverid, 0);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}

				PrivateServer.openPS_Einstellungen(p);
			}

			if(e.getSlot() == 25){ //Gamemode
				if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "Gamemode", serverid) == 0){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "Gamemode", serverid, 1);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "Gamemode", serverid) == 1){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "Gamemode", serverid, 2);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "Gamemode", serverid) == 2){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "Gamemode", serverid, 3);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}else if(me.API.Verwaltung.PrivateServer.getSetting(p.getUUID(), "Gamemode", serverid) == 3){
					me.API.Verwaltung.PrivateServer.setSetting(p.getUUID(), "Gamemode", serverid, 0);
					p.playSound(p.getLocation(), Sound.CLICK, 1F, 1F);
				}

				PrivateServer.openPS_Einstellungen(p);
			}
		}
	}

    public static void executeBungeecordCommand(String command, Player p) {
    	ByteArrayDataOutput out = ByteStreams.newDataOutput();
    	out.writeUTF("ExecuteBungeeCommand");
    	out.writeUTF(command);

    	p.sendPluginMessage(LobbySystem.plugin, "BungeeCord", out.toByteArray());
    }
}